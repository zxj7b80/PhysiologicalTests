###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        08/Apr/2015  15:29:17
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\Administrator\Desktop\PhysiologicalTests\src\Sources\C\Component_C\pwm.c
#    Command line =  
#        C:\Users\Administrator\Desktop\PhysiologicalTests\src\Sources\C\Component_C\pwm.c
#        -D IAR -D TWR_K60N512 -lCN
#        C:\Users\Administrator\Desktop\PhysiologicalTests\bin\Flash\List\ -lB
#        C:\Users\Administrator\Desktop\PhysiologicalTests\bin\Flash\List\ -o
#        C:\Users\Administrator\Desktop\PhysiologicalTests\bin\Flash\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\MyProgramFiles\iar for
#        arm v7.1\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\Administrator\Desktop\PhysiologicalTests\src\Sources\H\ -I
#        C:\Users\Administrator\Desktop\PhysiologicalTests\src\Sources\H\Component_H\
#        -I
#        C:\Users\Administrator\Desktop\PhysiologicalTests\src\Sources\H\Frame_H\
#        -Ol --use_c++_inline
#    List file    =  
#        C:\Users\Administrator\Desktop\PhysiologicalTests\bin\Flash\List\pwm.lst
#    Object file  =  
#        C:\Users\Administrator\Desktop\PhysiologicalTests\bin\Flash\Obj\pwm.o
#
###############################################################################

C:\Users\Administrator\Desktop\PhysiologicalTests\src\Sources\C\Component_C\pwm.c
      1          #include<pwm.h>
      2          #include<gpio.h>    
      3          
      4          extern int periph_clk_khz;

   \                                 In section .bss, align 4
      5          uint32 FTM_MOD0=0;
   \                     FTM_MOD0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      6          uint32 FTM_MOD1=0;
   \                     FTM_MOD1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      7          uint32 FTM_MOD2=0;
   \                     FTM_MOD2:
   \   00000000                      DS8 4
      8           
      9          
     10          /***************************************************************
     11          *函数名：uint8 FTM_PWM_Init(uint8 FTMx,uint32 freq)
     12          *功能：  将特定的FTMx初始化为pwm输出，并且设置频率
     13          *入口参数：(1)FTMx : 0
     14                               1
     15                               2
     16                     
     17                    (2)fre  :  Hz
     18          *出口参数：无
     19          *说明：无
     20          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
     21          uint8 FTM_PWM_Init(uint8 FTMx,uint32 freq)
     22          {
   \                     FTM_PWM_Init: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
     23            uint32 bus_clk_hz;
     24            uint32 mod;
     25            uint8  ps=0;
   \   00000002   0x2300             MOVS     R3,#+0
     26            
     27            bus_clk_hz = periph_clk_khz*1000;
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable5
   \   00000008   0x6812             LDR      R2,[R2, #+0]
   \   0000000A   0xF44F 0x747A      MOV      R4,#+1000
   \   0000000E   0x4362             MULS     R2,R4,R2
     28              
     29            if(freq>bus_clk_hz) return 0;
   \   00000010   0x428A             CMP      R2,R1
   \   00000012   0xD201             BCS.N    ??FTM_PWM_Init_0
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xE09E             B.N      ??FTM_PWM_Init_1
     30            //128分频
     31            if((mod=bus_clk_hz/(freq*128)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_0: (+1)
   \   00000018   0x2380             MOVS     R3,#+128
   \   0000001A   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000001E   0xFBB2 0xF4F3      UDIV     R4,R2,R3
   \   00000022   0xF64F 0x73FF      MOVW     R3,#+65535
   \   00000026   0x429C             CMP      R4,R3
   \   00000028   0xF080 0x8117      BCS.W    ??FTM_PWM_Init_2
     32            {
     33              ps = 7;
   \   0000002C   0x2307             MOVS     R3,#+7
     34              if(FTMx==0)
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xF040 0x8092      BNE.W    ??FTM_PWM_Init_3
     35              {
     36                FTM_MOD0=mod;
   \   00000036   0x.... 0x....      LDR.W    R5,??DataTable5_1
   \   0000003A   0x602C             STR      R4,[R5, #+0]
     37              }
     38              else if(FTMx==1)
     39              {
     40                FTM_MOD1=mod;
     41              }
     42              else if(FTMx==2)
     43              {
     44                FTM_MOD2=mod;  
     45              }
     46              else
     47                return 0;
     48              //64分频
     49              if((mod=bus_clk_hz/(freq*64)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_4: (+1)
   \   0000003C   0x2440             MOVS     R4,#+64
   \   0000003E   0xFB04 0xF401      MUL      R4,R4,R1
   \   00000042   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   00000046   0xF64F 0x75FF      MOVW     R5,#+65535
   \   0000004A   0x42AC             CMP      R4,R5
   \   0000004C   0xD260             BCS.N    ??FTM_PWM_Init_5
     50              {
     51                ps = 6;   
   \   0000004E   0x2306             MOVS     R3,#+6
     52                if(FTMx==0)
   \   00000050   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xF040 0x8091      BNE.W    ??FTM_PWM_Init_6
     53                {
     54                  FTM_MOD0= mod;
   \   00000058   0x.... 0x....      LDR.W    R5,??DataTable5_1
   \   0000005C   0x602C             STR      R4,[R5, #+0]
     55                }
     56                else if(FTMx==1)
     57                {
     58                  FTM_MOD1=mod;
     59                }
     60                else if(FTMx==2)
     61                {
     62                  FTM_MOD2=mod;  
     63                }
     64                else
     65                  return 0;
     66                //32分频
     67                if((mod=bus_clk_hz/(freq*32)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_7: (+1)
   \   0000005E   0x014C             LSLS     R4,R1,#+5
   \   00000060   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   00000064   0xF64F 0x75FF      MOVW     R5,#+65535
   \   00000068   0x42AC             CMP      R4,R5
   \   0000006A   0xD251             BCS.N    ??FTM_PWM_Init_5
     68                {
     69                  ps = 5; 
   \   0000006C   0x2305             MOVS     R3,#+5
     70                  if(FTMx==0)
   \   0000006E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000070   0x2800             CMP      R0,#+0
   \   00000072   0xF040 0x8092      BNE.W    ??FTM_PWM_Init_8
     71                  {
     72                    FTM_MOD0= mod;
   \   00000076   0x.... 0x....      LDR.W    R5,??DataTable5_1
   \   0000007A   0x602C             STR      R4,[R5, #+0]
     73                  }
     74                  else if(FTMx==1)
     75                  {
     76                    FTM_MOD1=mod;
     77                  }
     78                  else if(FTMx==2)
     79                  {
     80                    FTM_MOD2=mod;  
     81                  }
     82                  else
     83                    return 0;
     84                  //16分频
     85                  if((mod=bus_clk_hz/(freq*16)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_9: (+1)
   \   0000007C   0x010C             LSLS     R4,R1,#+4
   \   0000007E   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   00000082   0xF64F 0x75FF      MOVW     R5,#+65535
   \   00000086   0x42AC             CMP      R4,R5
   \   00000088   0xD242             BCS.N    ??FTM_PWM_Init_5
     86                  {
     87                    ps = 4;  
   \   0000008A   0x2304             MOVS     R3,#+4
     88                    if(FTMx==0)
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x2800             CMP      R0,#+0
   \   00000090   0xF040 0x8093      BNE.W    ??FTM_PWM_Init_10
     89                    {
     90                      FTM_MOD0= mod;
   \   00000094   0x.... 0x....      LDR.W    R5,??DataTable5_1
   \   00000098   0x602C             STR      R4,[R5, #+0]
     91                    }
     92                    else if(FTMx==1)
     93                    {
     94                      FTM_MOD1=mod;
     95                    }
     96                    else if(FTMx==2)
     97                    {
     98                      FTM_MOD2=mod;  
     99                    }
    100                    else
    101                      return 0;
    102                    //8分频
    103                    if((mod=bus_clk_hz/(freq*8)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_11: (+1)
   \   0000009A   0x00CC             LSLS     R4,R1,#+3
   \   0000009C   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   000000A0   0xF64F 0x75FF      MOVW     R5,#+65535
   \   000000A4   0x42AC             CMP      R4,R5
   \   000000A6   0xD233             BCS.N    ??FTM_PWM_Init_5
    104                    {
    105                      ps = 3;
   \   000000A8   0x2303             MOVS     R3,#+3
    106                      if(FTMx==0)
   \   000000AA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AC   0x2800             CMP      R0,#+0
   \   000000AE   0xF040 0x8094      BNE.W    ??FTM_PWM_Init_12
    107                      {
    108                        FTM_MOD0= mod;
   \   000000B2   0x.... 0x....      LDR.W    R5,??DataTable5_1
   \   000000B6   0x602C             STR      R4,[R5, #+0]
    109                      }
    110                      else if(FTMx==1)
    111                      {
    112                        FTM_MOD1=mod;
    113                      }
    114                      else if(FTMx==2)
    115                      {
    116                        FTM_MOD2=mod;  
    117                      }
    118                      else
    119                        return 0;
    120                      //4分频
    121                      if((mod=bus_clk_hz/(freq*4)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_13: (+1)
   \   000000B8   0x008C             LSLS     R4,R1,#+2
   \   000000BA   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   000000BE   0xF64F 0x75FF      MOVW     R5,#+65535
   \   000000C2   0x42AC             CMP      R4,R5
   \   000000C4   0xD224             BCS.N    ??FTM_PWM_Init_5
    122                      {
    123                        ps = 2;
   \   000000C6   0x2302             MOVS     R3,#+2
    124                        if(FTMx==0)
   \   000000C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xF040 0x8095      BNE.W    ??FTM_PWM_Init_14
    125                        {
    126                          FTM_MOD0= mod;
   \   000000D0   0x.... 0x....      LDR.W    R5,??DataTable5_1
   \   000000D4   0x602C             STR      R4,[R5, #+0]
    127                        }
    128                        else if(FTMx==1)
    129                        {
    130                          FTM_MOD1=mod;
    131                        }
    132                        else if(FTMx==2)
    133                        {
    134                          FTM_MOD2=mod;  
    135                        }
    136                        else
    137                          return 0;
    138                        //2分频
    139                        if((mod=bus_clk_hz/(freq*2)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_15: (+1)
   \   000000D6   0x004C             LSLS     R4,R1,#+1
   \   000000D8   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   000000DC   0xF64F 0x75FF      MOVW     R5,#+65535
   \   000000E0   0x42AC             CMP      R4,R5
   \   000000E2   0xD215             BCS.N    ??FTM_PWM_Init_5
    140                        {
    141                          ps = 1;
   \   000000E4   0x2301             MOVS     R3,#+1
    142                          if(FTMx==0)
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0x2800             CMP      R0,#+0
   \   000000EA   0xF040 0x8096      BNE.W    ??FTM_PWM_Init_16
    143                          {
    144                            FTM_MOD0= mod;
   \   000000EE   0x.... 0x....      LDR.W    R5,??DataTable5_1
   \   000000F2   0x602C             STR      R4,[R5, #+0]
    145                          }
    146                          else if(FTMx==1)
    147                          {
    148                            FTM_MOD1=mod;
    149                          }
    150                          else if(FTMx==2)
    151                          {
    152                            FTM_MOD2=mod;  
    153                          }
    154                          else
    155                            return 0;
    156                          //1分频
    157                          if((mod=bus_clk_hz/(freq*1)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_17: (+1)
   \   000000F4   0xFBB2 0xF4F1      UDIV     R4,R2,R1
   \   000000F8   0xF64F 0x71FF      MOVW     R1,#+65535
   \   000000FC   0x428C             CMP      R4,R1
   \   000000FE   0xD207             BCS.N    ??FTM_PWM_Init_5
    158                          {
    159                            ps = 0;
   \   00000100   0x2300             MOVS     R3,#+0
    160                            if(FTMx==0)
   \   00000102   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000104   0x2800             CMP      R0,#+0
   \   00000106   0xF040 0x8098      BNE.W    ??FTM_PWM_Init_18
    161                            {
    162                              FTM_MOD0= mod;
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000010E   0x600C             STR      R4,[R1, #+0]
    163                            }
    164                            else if(FTMx==1)
    165                            {
    166                              FTM_MOD1=mod;
    167                            }
    168                            else if(FTMx==2)
    169                            {
    170                              FTM_MOD2=mod;  
    171                            }
    172                            else
    173                              return 0;
    174                          }
    175                        }
    176                      }
    177                    }
    178                  }  
    179                }
    180              }
    181            }
    182            else
    183            {
    184              return 0;
    185            }
    186            
    187            if(FTMx==0)
   \                     ??FTM_PWM_Init_5: (+1)
   \   00000110   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000112   0x2800             CMP      R0,#+0
   \   00000114   0xF040 0x80A3      BNE.W    ??FTM_PWM_Init_19
    188            {
    189              // 使能FTM时钟模块
    190              SIM_SCGC6 |= SIM_SCGC6_FTM0_MASK;
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable5_2  ;; 0x4004803c
   \   0000011C   0x6800             LDR      R0,[R0, #+0]
   \   0000011E   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable5_2  ;; 0x4004803c
   \   00000126   0x6008             STR      R0,[R1, #+0]
    191          
    192              // 配置FTM控制寄存器
    193              // 禁用中断, 加计数模式, 时钟源:System clock（Bus Clk）, 分频系数:8
    194              // 假设SysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    195              FTM0_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
   \   00000128   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000012A   0xF013 0x0007      ANDS     R0,R3,#0x7
   \   0000012E   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable5_3  ;; 0x40038000
   \   00000136   0x6008             STR      R0,[R1, #+0]
    196          
    197              // 设置PWM周期及占空比
    198              // PWM周期 = (MOD-CNTIN+1)*FTM时钟周期 :
    199              // 配置FTM计数初始值
    200              FTM0_CNT = 0;
   \   00000138   0x2000             MOVS     R0,#+0
   \   0000013A   0x.... 0x....      LDR.W    R1,??DataTable5_4  ;; 0x40038004
   \   0000013E   0x6008             STR      R0,[R1, #+0]
    201              FTM0_CNTIN = 0;
   \   00000140   0x2000             MOVS     R0,#+0
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable5_5  ;; 0x4003804c
   \   00000146   0x6008             STR      R0,[R1, #+0]
    202              
    203              // 配置FTM计数MOD值
    204              FTM0_MOD = FTM_MOD0;
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   0000014C   0x6800             LDR      R0,[R0, #+0]
   \   0000014E   0x.... 0x....      LDR.W    R1,??DataTable5_6  ;; 0x40038008
   \   00000152   0x6008             STR      R0,[R1, #+0]
    205            }
    206            else if(FTMx==1)
    207            {
    208              // 使能FTM时钟模块
    209              SIM_SCGC6 |= SIM_SCGC6_FTM1_MASK;
    210          
    211              // 配置FTM控制寄存器
    212              // 禁用中断, 加计数模式, 时钟源:System clock（Bus Clk）, 分频系数:8
    213              // 假设SysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    214              FTM1_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
    215          
    216              // 设置PWM周期及占空比
    217              // PWM周期 = (MOD-CNTIN+1)*FTM时钟周期 :
    218              // 配置FTM计数初始值
    219              FTM1_CNT = 0;
    220              FTM1_CNTIN = 0;
    221              
    222              // 配置FTM计数MOD值
    223              FTM1_MOD = FTM_MOD1;
    224            } 
    225            else if(FTMx==2)
    226            {
    227              // 使能FTM时钟模块
    228              SIM_SCGC3 |= SIM_SCGC3_FTM2_MASK;
    229          
    230              // 配置FTM控制寄存器
    231              // 禁用中断, 加计数模式, 时钟源:System clock（Bus Clk）, 分频系数:8
    232              // 假设SysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    233              FTM2_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
    234          
    235              // 设置PWM周期及占空比
    236              // PWM周期 = (MOD-CNTIN+1)*FTM时钟周期 :
    237              // 配置FTM计数初始值
    238              FTM2_CNT = 0;
    239              FTM2_CNTIN = 0;
    240              
    241              // 配置FTM计数MOD值
    242              FTM2_MOD = FTM_MOD2;
    243            }  
    244            else
    245              return 0;
    246          
    247            return 1;
   \                     ??FTM_PWM_Init_20: (+1)
   \   00000154   0x2001             MOVS     R0,#+1
   \                     ??FTM_PWM_Init_1: (+1)
   \   00000156   0xBC30             POP      {R4,R5}
   \   00000158   0x4770             BX       LR               ;; return
   \                     ??FTM_PWM_Init_3: (+1)
   \   0000015A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000015C   0x2801             CMP      R0,#+1
   \   0000015E   0xD103             BNE.N    ??FTM_PWM_Init_21
   \   00000160   0x.... 0x....      LDR.W    R5,??DataTable5_7
   \   00000164   0x602C             STR      R4,[R5, #+0]
   \   00000166   0xE769             B.N      ??FTM_PWM_Init_4
   \                     ??FTM_PWM_Init_21: (+1)
   \   00000168   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000016A   0x2802             CMP      R0,#+2
   \   0000016C   0xD103             BNE.N    ??FTM_PWM_Init_22
   \   0000016E   0x.... 0x....      LDR.W    R5,??DataTable5_8
   \   00000172   0x602C             STR      R4,[R5, #+0]
   \   00000174   0xE762             B.N      ??FTM_PWM_Init_4
   \                     ??FTM_PWM_Init_22: (+1)
   \   00000176   0x2000             MOVS     R0,#+0
   \   00000178   0xE7ED             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_6: (+1)
   \   0000017A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000017C   0x2801             CMP      R0,#+1
   \   0000017E   0xD103             BNE.N    ??FTM_PWM_Init_23
   \   00000180   0x.... 0x....      LDR.W    R5,??DataTable5_7
   \   00000184   0x602C             STR      R4,[R5, #+0]
   \   00000186   0xE76A             B.N      ??FTM_PWM_Init_7
   \                     ??FTM_PWM_Init_23: (+1)
   \   00000188   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000018A   0x2802             CMP      R0,#+2
   \   0000018C   0xD103             BNE.N    ??FTM_PWM_Init_24
   \   0000018E   0x.... 0x....      LDR.W    R5,??DataTable5_8
   \   00000192   0x602C             STR      R4,[R5, #+0]
   \   00000194   0xE763             B.N      ??FTM_PWM_Init_7
   \                     ??FTM_PWM_Init_24: (+1)
   \   00000196   0x2000             MOVS     R0,#+0
   \   00000198   0xE7DD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_8: (+1)
   \   0000019A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000019C   0x2801             CMP      R0,#+1
   \   0000019E   0xD103             BNE.N    ??FTM_PWM_Init_25
   \   000001A0   0x.... 0x....      LDR.W    R5,??DataTable5_7
   \   000001A4   0x602C             STR      R4,[R5, #+0]
   \   000001A6   0xE769             B.N      ??FTM_PWM_Init_9
   \                     ??FTM_PWM_Init_25: (+1)
   \   000001A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001AA   0x2802             CMP      R0,#+2
   \   000001AC   0xD103             BNE.N    ??FTM_PWM_Init_26
   \   000001AE   0x.... 0x....      LDR.W    R5,??DataTable5_8
   \   000001B2   0x602C             STR      R4,[R5, #+0]
   \   000001B4   0xE762             B.N      ??FTM_PWM_Init_9
   \                     ??FTM_PWM_Init_26: (+1)
   \   000001B6   0x2000             MOVS     R0,#+0
   \   000001B8   0xE7CD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_10: (+1)
   \   000001BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001BC   0x2801             CMP      R0,#+1
   \   000001BE   0xD103             BNE.N    ??FTM_PWM_Init_27
   \   000001C0   0x.... 0x....      LDR.W    R5,??DataTable5_7
   \   000001C4   0x602C             STR      R4,[R5, #+0]
   \   000001C6   0xE768             B.N      ??FTM_PWM_Init_11
   \                     ??FTM_PWM_Init_27: (+1)
   \   000001C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001CA   0x2802             CMP      R0,#+2
   \   000001CC   0xD103             BNE.N    ??FTM_PWM_Init_28
   \   000001CE   0x.... 0x....      LDR.W    R5,??DataTable5_8
   \   000001D2   0x602C             STR      R4,[R5, #+0]
   \   000001D4   0xE761             B.N      ??FTM_PWM_Init_11
   \                     ??FTM_PWM_Init_28: (+1)
   \   000001D6   0x2000             MOVS     R0,#+0
   \   000001D8   0xE7BD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_12: (+1)
   \   000001DA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001DC   0x2801             CMP      R0,#+1
   \   000001DE   0xD103             BNE.N    ??FTM_PWM_Init_29
   \   000001E0   0x.... 0x....      LDR.W    R5,??DataTable5_7
   \   000001E4   0x602C             STR      R4,[R5, #+0]
   \   000001E6   0xE767             B.N      ??FTM_PWM_Init_13
   \                     ??FTM_PWM_Init_29: (+1)
   \   000001E8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001EA   0x2802             CMP      R0,#+2
   \   000001EC   0xD103             BNE.N    ??FTM_PWM_Init_30
   \   000001EE   0x.... 0x....      LDR.W    R5,??DataTable5_8
   \   000001F2   0x602C             STR      R4,[R5, #+0]
   \   000001F4   0xE760             B.N      ??FTM_PWM_Init_13
   \                     ??FTM_PWM_Init_30: (+1)
   \   000001F6   0x2000             MOVS     R0,#+0
   \   000001F8   0xE7AD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_14: (+1)
   \   000001FA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001FC   0x2801             CMP      R0,#+1
   \   000001FE   0xD103             BNE.N    ??FTM_PWM_Init_31
   \   00000200   0x.... 0x....      LDR.W    R5,??DataTable5_7
   \   00000204   0x602C             STR      R4,[R5, #+0]
   \   00000206   0xE766             B.N      ??FTM_PWM_Init_15
   \                     ??FTM_PWM_Init_31: (+1)
   \   00000208   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000020A   0x2802             CMP      R0,#+2
   \   0000020C   0xD103             BNE.N    ??FTM_PWM_Init_32
   \   0000020E   0x.... 0x....      LDR.W    R5,??DataTable5_8
   \   00000212   0x602C             STR      R4,[R5, #+0]
   \   00000214   0xE75F             B.N      ??FTM_PWM_Init_15
   \                     ??FTM_PWM_Init_32: (+1)
   \   00000216   0x2000             MOVS     R0,#+0
   \   00000218   0xE79D             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_16: (+1)
   \   0000021A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000021C   0x2801             CMP      R0,#+1
   \   0000021E   0xD103             BNE.N    ??FTM_PWM_Init_33
   \   00000220   0x.... 0x....      LDR.W    R5,??DataTable5_7
   \   00000224   0x602C             STR      R4,[R5, #+0]
   \   00000226   0xE765             B.N      ??FTM_PWM_Init_17
   \                     ??FTM_PWM_Init_33: (+1)
   \   00000228   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000022A   0x2802             CMP      R0,#+2
   \   0000022C   0xD103             BNE.N    ??FTM_PWM_Init_34
   \   0000022E   0x.... 0x....      LDR.W    R5,??DataTable5_8
   \   00000232   0x602C             STR      R4,[R5, #+0]
   \   00000234   0xE75E             B.N      ??FTM_PWM_Init_17
   \                     ??FTM_PWM_Init_34: (+1)
   \   00000236   0x2000             MOVS     R0,#+0
   \   00000238   0xE78D             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_18: (+1)
   \   0000023A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000023C   0x2801             CMP      R0,#+1
   \   0000023E   0xD103             BNE.N    ??FTM_PWM_Init_35
   \   00000240   0x.... 0x....      LDR.W    R1,??DataTable5_7
   \   00000244   0x600C             STR      R4,[R1, #+0]
   \   00000246   0xE763             B.N      ??FTM_PWM_Init_5
   \                     ??FTM_PWM_Init_35: (+1)
   \   00000248   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000024A   0x2802             CMP      R0,#+2
   \   0000024C   0xD103             BNE.N    ??FTM_PWM_Init_36
   \   0000024E   0x.... 0x....      LDR.W    R1,??DataTable5_8
   \   00000252   0x600C             STR      R4,[R1, #+0]
   \   00000254   0xE75C             B.N      ??FTM_PWM_Init_5
   \                     ??FTM_PWM_Init_36: (+1)
   \   00000256   0x2000             MOVS     R0,#+0
   \   00000258   0xE77D             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_2: (+1)
   \   0000025A   0x2000             MOVS     R0,#+0
   \   0000025C   0xE77B             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_19: (+1)
   \   0000025E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000260   0x2801             CMP      R0,#+1
   \   00000262   0xD11E             BNE.N    ??FTM_PWM_Init_37
   \   00000264   0x.... 0x....      LDR.W    R0,??DataTable5_2  ;; 0x4004803c
   \   00000268   0x6800             LDR      R0,[R0, #+0]
   \   0000026A   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000026E   0x.... 0x....      LDR.W    R1,??DataTable5_2  ;; 0x4004803c
   \   00000272   0x6008             STR      R0,[R1, #+0]
   \   00000274   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000276   0xF013 0x0007      ANDS     R0,R3,#0x7
   \   0000027A   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000027E   0x.... 0x....      LDR.W    R1,??DataTable5_9  ;; 0x40039000
   \   00000282   0x6008             STR      R0,[R1, #+0]
   \   00000284   0x2000             MOVS     R0,#+0
   \   00000286   0x.... 0x....      LDR.W    R1,??DataTable5_10  ;; 0x40039004
   \   0000028A   0x6008             STR      R0,[R1, #+0]
   \   0000028C   0x2000             MOVS     R0,#+0
   \   0000028E   0x.... 0x....      LDR.W    R1,??DataTable5_11  ;; 0x4003904c
   \   00000292   0x6008             STR      R0,[R1, #+0]
   \   00000294   0x.... 0x....      LDR.W    R0,??DataTable5_7
   \   00000298   0x6800             LDR      R0,[R0, #+0]
   \   0000029A   0x.... 0x....      LDR.W    R1,??DataTable5_12  ;; 0x40039008
   \   0000029E   0x6008             STR      R0,[R1, #+0]
   \   000002A0   0xE758             B.N      ??FTM_PWM_Init_20
   \                     ??FTM_PWM_Init_37: (+1)
   \   000002A2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002A4   0x2802             CMP      R0,#+2
   \   000002A6   0xD11E             BNE.N    ??FTM_PWM_Init_38
   \   000002A8   0x.... 0x....      LDR.W    R0,??DataTable5_13  ;; 0x40048030
   \   000002AC   0x6800             LDR      R0,[R0, #+0]
   \   000002AE   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   000002B2   0x.... 0x....      LDR.W    R1,??DataTable5_13  ;; 0x40048030
   \   000002B6   0x6008             STR      R0,[R1, #+0]
   \   000002B8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000002BA   0xF013 0x0007      ANDS     R0,R3,#0x7
   \   000002BE   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000002C2   0x.... 0x....      LDR.W    R1,??DataTable5_14  ;; 0x400b8000
   \   000002C6   0x6008             STR      R0,[R1, #+0]
   \   000002C8   0x2000             MOVS     R0,#+0
   \   000002CA   0x.... 0x....      LDR.W    R1,??DataTable5_15  ;; 0x400b8004
   \   000002CE   0x6008             STR      R0,[R1, #+0]
   \   000002D0   0x2000             MOVS     R0,#+0
   \   000002D2   0x.... 0x....      LDR.W    R1,??DataTable5_16  ;; 0x400b804c
   \   000002D6   0x6008             STR      R0,[R1, #+0]
   \   000002D8   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   000002DC   0x6800             LDR      R0,[R0, #+0]
   \   000002DE   0x.... 0x....      LDR.W    R1,??DataTable5_17  ;; 0x400b8008
   \   000002E2   0x6008             STR      R0,[R1, #+0]
   \   000002E4   0xE736             B.N      ??FTM_PWM_Init_20
   \                     ??FTM_PWM_Init_38: (+1)
   \   000002E6   0x2000             MOVS     R0,#+0
   \   000002E8   0xE735             B.N      ??FTM_PWM_Init_1
    248          }
    249          
    250          /***************************************************************
    251          *函数名：uint8 FTM_ChanceFrequence(uint8 FTMx,uint32 freq)
    252          *功能：  将特定的FTMx初始化为pwm输出，并且设置频率
    253          *入口参数：(1)FTMx : 0
    254                               1
    255                               2
    256                     
    257                    (2)fre  :  Hz
    258          *出口参数：无
    259          *说明：无
    260          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
    261          uint8 FTM_ChanceFrequence(uint8 FTMx,uint32 freq)
    262          {
   \                     FTM_ChanceFrequence: (+1)
   \   00000000   0xB410             PUSH     {R4}
    263            uint32 bus_clk_hz;
    264            uint32 mod;
    265            uint8  ps=0;
   \   00000002   0x2400             MOVS     R4,#+0
    266            
    267            bus_clk_hz = periph_clk_khz*1000;
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable5
   \   00000008   0x6812             LDR      R2,[R2, #+0]
   \   0000000A   0xF44F 0x737A      MOV      R3,#+1000
   \   0000000E   0x435A             MULS     R2,R3,R2
    268              
    269            if(freq>bus_clk_hz) return 0;
   \   00000010   0x428A             CMP      R2,R1
   \   00000012   0xD201             BCS.N    ??FTM_ChanceFrequence_0
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xE08E             B.N      ??FTM_ChanceFrequence_1
    270            //128分频
    271            if((mod=bus_clk_hz/(freq*128)) < 0xFFFFu)
   \                     ??FTM_ChanceFrequence_0: (+1)
   \   00000018   0x2380             MOVS     R3,#+128
   \   0000001A   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000001E   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   00000022   0xF64F 0x74FF      MOVW     R4,#+65535
   \   00000026   0x42A3             CMP      R3,R4
   \   00000028   0xF080 0x8107      BCS.W    ??FTM_ChanceFrequence_2
    272            {
    273              ps = 7;
   \   0000002C   0x2407             MOVS     R4,#+7
    274              if(FTMx==0)
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xF040 0x8082      BNE.W    ??FTM_ChanceFrequence_3
    275              {
    276                FTM_MOD0=mod;
   \   00000036   0x.... 0x....      LDR.W    R4,??DataTable5_1
   \   0000003A   0x6023             STR      R3,[R4, #+0]
    277              }
    278              else if(FTMx==1)
    279              {
    280                FTM_MOD1=mod;
    281              }
    282              else if(FTMx==2)
    283              {
    284                FTM_MOD2=mod;  
    285              }
    286              else
    287                return 0;
    288              //64分频
    289              if((mod=bus_clk_hz/(freq*64)) < 0xFFFFu)
   \                     ??FTM_ChanceFrequence_4: (+1)
   \   0000003C   0x2340             MOVS     R3,#+64
   \   0000003E   0xFB03 0xF301      MUL      R3,R3,R1
   \   00000042   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   00000046   0xF64F 0x74FF      MOVW     R4,#+65535
   \   0000004A   0x42A3             CMP      R3,R4
   \   0000004C   0xD260             BCS.N    ??FTM_ChanceFrequence_5
    290              {
    291                ps = 6;   
   \   0000004E   0x2406             MOVS     R4,#+6
    292                if(FTMx==0)
   \   00000050   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xF040 0x8081      BNE.W    ??FTM_ChanceFrequence_6
    293                {
    294                  FTM_MOD0= mod;
   \   00000058   0x.... 0x....      LDR.W    R4,??DataTable5_1
   \   0000005C   0x6023             STR      R3,[R4, #+0]
    295                }
    296                else if(FTMx==1)
    297                {
    298                  FTM_MOD1=mod;
    299                }
    300                else if(FTMx==2)
    301                {
    302                  FTM_MOD2=mod;  
    303                }
    304                else
    305                  return 0;
    306                //32分频
    307                if((mod=bus_clk_hz/(freq*32)) < 0xFFFFu)
   \                     ??FTM_ChanceFrequence_7: (+1)
   \   0000005E   0x014B             LSLS     R3,R1,#+5
   \   00000060   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   00000064   0xF64F 0x74FF      MOVW     R4,#+65535
   \   00000068   0x42A3             CMP      R3,R4
   \   0000006A   0xD251             BCS.N    ??FTM_ChanceFrequence_5
    308                {
    309                  ps = 5; 
   \   0000006C   0x2405             MOVS     R4,#+5
    310                  if(FTMx==0)
   \   0000006E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000070   0x2800             CMP      R0,#+0
   \   00000072   0xF040 0x8082      BNE.W    ??FTM_ChanceFrequence_8
    311                  {
    312                    FTM_MOD0= mod;
   \   00000076   0x.... 0x....      LDR.W    R4,??DataTable5_1
   \   0000007A   0x6023             STR      R3,[R4, #+0]
    313                  }
    314                  else if(FTMx==1)
    315                  {
    316                    FTM_MOD1=mod;
    317                  }
    318                  else if(FTMx==2)
    319                  {
    320                    FTM_MOD2=mod;  
    321                  }
    322                  else
    323                    return 0;
    324                  //16分频
    325                  if((mod=bus_clk_hz/(freq*16)) < 0xFFFFu)
   \                     ??FTM_ChanceFrequence_9: (+1)
   \   0000007C   0x010B             LSLS     R3,R1,#+4
   \   0000007E   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   00000082   0xF64F 0x74FF      MOVW     R4,#+65535
   \   00000086   0x42A3             CMP      R3,R4
   \   00000088   0xD242             BCS.N    ??FTM_ChanceFrequence_5
    326                  {
    327                    ps = 4;  
   \   0000008A   0x2404             MOVS     R4,#+4
    328                    if(FTMx==0)
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x2800             CMP      R0,#+0
   \   00000090   0xF040 0x8083      BNE.W    ??FTM_ChanceFrequence_10
    329                    {
    330                      FTM_MOD0= mod;
   \   00000094   0x.... 0x....      LDR.W    R4,??DataTable5_1
   \   00000098   0x6023             STR      R3,[R4, #+0]
    331                    }
    332                    else if(FTMx==1)
    333                    {
    334                      FTM_MOD1=mod;
    335                    }
    336                    else if(FTMx==2)
    337                    {
    338                      FTM_MOD2=mod;  
    339                    }
    340                    else
    341                      return 0;
    342                    //8分频
    343                    if((mod=bus_clk_hz/(freq*8)) < 0xFFFFu)
   \                     ??FTM_ChanceFrequence_11: (+1)
   \   0000009A   0x00CB             LSLS     R3,R1,#+3
   \   0000009C   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   000000A0   0xF64F 0x74FF      MOVW     R4,#+65535
   \   000000A4   0x42A3             CMP      R3,R4
   \   000000A6   0xD233             BCS.N    ??FTM_ChanceFrequence_5
    344                    {
    345                      ps = 3;
   \   000000A8   0x2403             MOVS     R4,#+3
    346                      if(FTMx==0)
   \   000000AA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AC   0x2800             CMP      R0,#+0
   \   000000AE   0xF040 0x8084      BNE.W    ??FTM_ChanceFrequence_12
    347                      {
    348                        FTM_MOD0= mod;
   \   000000B2   0x.... 0x....      LDR.W    R4,??DataTable5_1
   \   000000B6   0x6023             STR      R3,[R4, #+0]
    349                      }
    350                      else if(FTMx==1)
    351                      {
    352                        FTM_MOD1=mod;
    353                      }
    354                      else if(FTMx==2)
    355                      {
    356                        FTM_MOD2=mod;  
    357                      }
    358                      else
    359                        return 0;
    360                      //4分频
    361                      if((mod=bus_clk_hz/(freq*4)) < 0xFFFFu)
   \                     ??FTM_ChanceFrequence_13: (+1)
   \   000000B8   0x008B             LSLS     R3,R1,#+2
   \   000000BA   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   000000BE   0xF64F 0x74FF      MOVW     R4,#+65535
   \   000000C2   0x42A3             CMP      R3,R4
   \   000000C4   0xD224             BCS.N    ??FTM_ChanceFrequence_5
    362                      {
    363                        ps = 2;
   \   000000C6   0x2402             MOVS     R4,#+2
    364                        if(FTMx==0)
   \   000000C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xF040 0x8085      BNE.W    ??FTM_ChanceFrequence_14
    365                        {
    366                          FTM_MOD0= mod;
   \   000000D0   0x.... 0x....      LDR.W    R4,??DataTable5_1
   \   000000D4   0x6023             STR      R3,[R4, #+0]
    367                        }
    368                        else if(FTMx==1)
    369                        {
    370                          FTM_MOD1=mod;
    371                        }
    372                        else if(FTMx==2)
    373                        {
    374                          FTM_MOD2=mod;  
    375                        }
    376                        else
    377                          return 0;
    378                        //2分频
    379                        if((mod=bus_clk_hz/(freq*2)) < 0xFFFFu)
   \                     ??FTM_ChanceFrequence_15: (+1)
   \   000000D6   0x004B             LSLS     R3,R1,#+1
   \   000000D8   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   000000DC   0xF64F 0x74FF      MOVW     R4,#+65535
   \   000000E0   0x42A3             CMP      R3,R4
   \   000000E2   0xD215             BCS.N    ??FTM_ChanceFrequence_5
    380                        {
    381                          ps = 1;
   \   000000E4   0x2401             MOVS     R4,#+1
    382                          if(FTMx==0)
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0x2800             CMP      R0,#+0
   \   000000EA   0xF040 0x8086      BNE.W    ??FTM_ChanceFrequence_16
    383                          {
    384                            FTM_MOD0= mod;
   \   000000EE   0x.... 0x....      LDR.W    R4,??DataTable5_1
   \   000000F2   0x6023             STR      R3,[R4, #+0]
    385                          }
    386                          else if(FTMx==1)
    387                          {
    388                            FTM_MOD1=mod;
    389                          }
    390                          else if(FTMx==2)
    391                          {
    392                            FTM_MOD2=mod;  
    393                          }
    394                          else
    395                            return 0;
    396                          //1分频
    397                          if((mod=bus_clk_hz/(freq*1)) < 0xFFFFu)
   \                     ??FTM_ChanceFrequence_17: (+1)
   \   000000F4   0xFBB2 0xF3F1      UDIV     R3,R2,R1
   \   000000F8   0xF64F 0x71FF      MOVW     R1,#+65535
   \   000000FC   0x428B             CMP      R3,R1
   \   000000FE   0xD207             BCS.N    ??FTM_ChanceFrequence_5
    398                          {
    399                            ps = 0;
   \   00000100   0x2400             MOVS     R4,#+0
    400                            if(FTMx==0)
   \   00000102   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000104   0x2800             CMP      R0,#+0
   \   00000106   0xF040 0x8088      BNE.W    ??FTM_ChanceFrequence_18
    401                            {
    402                              FTM_MOD0= mod;
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000010E   0x600B             STR      R3,[R1, #+0]
    403                            }
    404                            else if(FTMx==1)
    405                            {
    406                              FTM_MOD1=mod;
    407                            }
    408                            else if(FTMx==2)
    409                            {
    410                              FTM_MOD2=mod;  
    411                            }
    412                            else
    413                              return 0;
    414                          }
    415                        }
    416                      }
    417                    }
    418                  }  
    419                }
    420              }
    421            }
    422            else
    423            {
    424              return 0;
    425            }
    426            
    427            if(FTMx==0)
   \                     ??FTM_ChanceFrequence_5: (+1)
   \   00000110   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000112   0x2800             CMP      R0,#+0
   \   00000114   0xF040 0x8093      BNE.W    ??FTM_ChanceFrequence_19
    428            {
    429              // 使能FTM时钟模块
    430              SIM_SCGC6 |= SIM_SCGC6_FTM0_MASK;
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable5_2  ;; 0x4004803c
   \   0000011C   0x6800             LDR      R0,[R0, #+0]
   \   0000011E   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable5_2  ;; 0x4004803c
   \   00000126   0x6008             STR      R0,[R1, #+0]
    431          
    432              // 配置FTM控制寄存器
    433              // 禁用中断, 加计数模式, 时钟源:System clock（Bus Clk）, 分频系数:8
    434              // 假设SysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    435              //FTM0_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
    436          
    437              // 设置PWM周期及占空比
    438              // PWM周期 = (MOD-CNTIN+1)*FTM时钟周期 :
    439              // 配置FTM计数初始值
    440              //FTM0_CNT = 0;
    441              //FTM0_CNTIN = 0;
    442              
    443              // 配置FTM计数MOD值
    444              FTM0_MOD = FTM_MOD0;
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0x.... 0x....      LDR.W    R1,??DataTable5_6  ;; 0x40038008
   \   00000132   0x6008             STR      R0,[R1, #+0]
    445            }
    446            else if(FTMx==1)
    447            {
    448              // 使能FTM时钟模块
    449              SIM_SCGC6 |= SIM_SCGC6_FTM1_MASK;
    450          
    451              // 配置FTM控制寄存器
    452              // 禁用中断, 加计数模式, 时钟源:System clock（Bus Clk）, 分频系数:8
    453              // 假设SysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    454              //FTM1_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
    455          
    456              // 设置PWM周期及占空比
    457              // PWM周期 = (MOD-CNTIN+1)*FTM时钟周期 :
    458              // 配置FTM计数初始值
    459              //FTM1_CNT = 0;
    460              //FTM1_CNTIN = 0;
    461              
    462              // 配置FTM计数MOD值
    463              FTM1_MOD = FTM_MOD1;
    464            } 
    465            else if(FTMx==2)
    466            {
    467              // 使能FTM时钟模块
    468              SIM_SCGC3 |= SIM_SCGC3_FTM2_MASK;
    469          
    470              // 配置FTM控制寄存器
    471              // 禁用中断, 加计数模式, 时钟源:System clock（Bus Clk）, 分频系数:8
    472              // 假设SysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    473              //FTM2_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
    474          
    475              // 设置PWM周期及占空比
    476              // PWM周期 = (MOD-CNTIN+1)*FTM时钟周期 :
    477              // 配置FTM计数初始值
    478              //FTM2_CNT = 0;
    479              //FTM2_CNTIN = 0;
    480              
    481              // 配置FTM计数MOD值
    482              FTM2_MOD = FTM_MOD2;
    483            }  
    484            else
    485              return 0;
    486          
    487            return 1;
   \                     ??FTM_ChanceFrequence_20: (+1)
   \   00000134   0x2001             MOVS     R0,#+1
   \                     ??FTM_ChanceFrequence_1: (+1)
   \   00000136   0xBC10             POP      {R4}
   \   00000138   0x4770             BX       LR               ;; return
   \                     ??FTM_ChanceFrequence_3: (+1)
   \   0000013A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000013C   0x2801             CMP      R0,#+1
   \   0000013E   0xD103             BNE.N    ??FTM_ChanceFrequence_21
   \   00000140   0x.... 0x....      LDR.W    R4,??DataTable5_7
   \   00000144   0x6023             STR      R3,[R4, #+0]
   \   00000146   0xE779             B.N      ??FTM_ChanceFrequence_4
   \                     ??FTM_ChanceFrequence_21: (+1)
   \   00000148   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014A   0x2802             CMP      R0,#+2
   \   0000014C   0xD103             BNE.N    ??FTM_ChanceFrequence_22
   \   0000014E   0x.... 0x....      LDR.W    R4,??DataTable5_8
   \   00000152   0x6023             STR      R3,[R4, #+0]
   \   00000154   0xE772             B.N      ??FTM_ChanceFrequence_4
   \                     ??FTM_ChanceFrequence_22: (+1)
   \   00000156   0x2000             MOVS     R0,#+0
   \   00000158   0xE7ED             B.N      ??FTM_ChanceFrequence_1
   \                     ??FTM_ChanceFrequence_6: (+1)
   \   0000015A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000015C   0x2801             CMP      R0,#+1
   \   0000015E   0xD103             BNE.N    ??FTM_ChanceFrequence_23
   \   00000160   0x.... 0x....      LDR.W    R4,??DataTable5_7
   \   00000164   0x6023             STR      R3,[R4, #+0]
   \   00000166   0xE77A             B.N      ??FTM_ChanceFrequence_7
   \                     ??FTM_ChanceFrequence_23: (+1)
   \   00000168   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000016A   0x2802             CMP      R0,#+2
   \   0000016C   0xD103             BNE.N    ??FTM_ChanceFrequence_24
   \   0000016E   0x.... 0x....      LDR.W    R4,??DataTable5_8
   \   00000172   0x6023             STR      R3,[R4, #+0]
   \   00000174   0xE773             B.N      ??FTM_ChanceFrequence_7
   \                     ??FTM_ChanceFrequence_24: (+1)
   \   00000176   0x2000             MOVS     R0,#+0
   \   00000178   0xE7DD             B.N      ??FTM_ChanceFrequence_1
   \                     ??FTM_ChanceFrequence_8: (+1)
   \   0000017A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000017C   0x2801             CMP      R0,#+1
   \   0000017E   0xD103             BNE.N    ??FTM_ChanceFrequence_25
   \   00000180   0x.... 0x....      LDR.W    R4,??DataTable5_7
   \   00000184   0x6023             STR      R3,[R4, #+0]
   \   00000186   0xE779             B.N      ??FTM_ChanceFrequence_9
   \                     ??FTM_ChanceFrequence_25: (+1)
   \   00000188   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000018A   0x2802             CMP      R0,#+2
   \   0000018C   0xD103             BNE.N    ??FTM_ChanceFrequence_26
   \   0000018E   0x.... 0x....      LDR.W    R4,??DataTable5_8
   \   00000192   0x6023             STR      R3,[R4, #+0]
   \   00000194   0xE772             B.N      ??FTM_ChanceFrequence_9
   \                     ??FTM_ChanceFrequence_26: (+1)
   \   00000196   0x2000             MOVS     R0,#+0
   \   00000198   0xE7CD             B.N      ??FTM_ChanceFrequence_1
   \                     ??FTM_ChanceFrequence_10: (+1)
   \   0000019A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000019C   0x2801             CMP      R0,#+1
   \   0000019E   0xD103             BNE.N    ??FTM_ChanceFrequence_27
   \   000001A0   0x.... 0x....      LDR.W    R4,??DataTable5_7
   \   000001A4   0x6023             STR      R3,[R4, #+0]
   \   000001A6   0xE778             B.N      ??FTM_ChanceFrequence_11
   \                     ??FTM_ChanceFrequence_27: (+1)
   \   000001A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001AA   0x2802             CMP      R0,#+2
   \   000001AC   0xD103             BNE.N    ??FTM_ChanceFrequence_28
   \   000001AE   0x.... 0x....      LDR.W    R4,??DataTable5_8
   \   000001B2   0x6023             STR      R3,[R4, #+0]
   \   000001B4   0xE771             B.N      ??FTM_ChanceFrequence_11
   \                     ??FTM_ChanceFrequence_28: (+1)
   \   000001B6   0x2000             MOVS     R0,#+0
   \   000001B8   0xE7BD             B.N      ??FTM_ChanceFrequence_1
   \                     ??FTM_ChanceFrequence_12: (+1)
   \   000001BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001BC   0x2801             CMP      R0,#+1
   \   000001BE   0xD103             BNE.N    ??FTM_ChanceFrequence_29
   \   000001C0   0x.... 0x....      LDR.W    R4,??DataTable5_7
   \   000001C4   0x6023             STR      R3,[R4, #+0]
   \   000001C6   0xE777             B.N      ??FTM_ChanceFrequence_13
   \                     ??FTM_ChanceFrequence_29: (+1)
   \   000001C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001CA   0x2802             CMP      R0,#+2
   \   000001CC   0xD103             BNE.N    ??FTM_ChanceFrequence_30
   \   000001CE   0x.... 0x....      LDR.W    R4,??DataTable5_8
   \   000001D2   0x6023             STR      R3,[R4, #+0]
   \   000001D4   0xE770             B.N      ??FTM_ChanceFrequence_13
   \                     ??FTM_ChanceFrequence_30: (+1)
   \   000001D6   0x2000             MOVS     R0,#+0
   \   000001D8   0xE7AD             B.N      ??FTM_ChanceFrequence_1
   \                     ??FTM_ChanceFrequence_14: (+1)
   \   000001DA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001DC   0x2801             CMP      R0,#+1
   \   000001DE   0xD103             BNE.N    ??FTM_ChanceFrequence_31
   \   000001E0   0x.... 0x....      LDR.W    R4,??DataTable5_7
   \   000001E4   0x6023             STR      R3,[R4, #+0]
   \   000001E6   0xE776             B.N      ??FTM_ChanceFrequence_15
   \                     ??FTM_ChanceFrequence_31: (+1)
   \   000001E8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001EA   0x2802             CMP      R0,#+2
   \   000001EC   0xD103             BNE.N    ??FTM_ChanceFrequence_32
   \   000001EE   0x.... 0x....      LDR.W    R4,??DataTable5_8
   \   000001F2   0x6023             STR      R3,[R4, #+0]
   \   000001F4   0xE76F             B.N      ??FTM_ChanceFrequence_15
   \                     ??FTM_ChanceFrequence_32: (+1)
   \   000001F6   0x2000             MOVS     R0,#+0
   \   000001F8   0xE79D             B.N      ??FTM_ChanceFrequence_1
   \                     ??FTM_ChanceFrequence_16: (+1)
   \   000001FA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001FC   0x2801             CMP      R0,#+1
   \   000001FE   0xD103             BNE.N    ??FTM_ChanceFrequence_33
   \   00000200   0x.... 0x....      LDR.W    R4,??DataTable5_7
   \   00000204   0x6023             STR      R3,[R4, #+0]
   \   00000206   0xE775             B.N      ??FTM_ChanceFrequence_17
   \                     ??FTM_ChanceFrequence_33: (+1)
   \   00000208   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000020A   0x2802             CMP      R0,#+2
   \   0000020C   0xD103             BNE.N    ??FTM_ChanceFrequence_34
   \   0000020E   0x.... 0x....      LDR.W    R4,??DataTable5_8
   \   00000212   0x6023             STR      R3,[R4, #+0]
   \   00000214   0xE76E             B.N      ??FTM_ChanceFrequence_17
   \                     ??FTM_ChanceFrequence_34: (+1)
   \   00000216   0x2000             MOVS     R0,#+0
   \   00000218   0xE78D             B.N      ??FTM_ChanceFrequence_1
   \                     ??FTM_ChanceFrequence_18: (+1)
   \   0000021A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000021C   0x2801             CMP      R0,#+1
   \   0000021E   0xD103             BNE.N    ??FTM_ChanceFrequence_35
   \   00000220   0x.... 0x....      LDR.W    R1,??DataTable5_7
   \   00000224   0x600B             STR      R3,[R1, #+0]
   \   00000226   0xE773             B.N      ??FTM_ChanceFrequence_5
   \                     ??FTM_ChanceFrequence_35: (+1)
   \   00000228   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000022A   0x2802             CMP      R0,#+2
   \   0000022C   0xD103             BNE.N    ??FTM_ChanceFrequence_36
   \   0000022E   0x.... 0x....      LDR.W    R1,??DataTable5_8
   \   00000232   0x600B             STR      R3,[R1, #+0]
   \   00000234   0xE76C             B.N      ??FTM_ChanceFrequence_5
   \                     ??FTM_ChanceFrequence_36: (+1)
   \   00000236   0x2000             MOVS     R0,#+0
   \   00000238   0xE77D             B.N      ??FTM_ChanceFrequence_1
   \                     ??FTM_ChanceFrequence_2: (+1)
   \   0000023A   0x2000             MOVS     R0,#+0
   \   0000023C   0xE77B             B.N      ??FTM_ChanceFrequence_1
   \                     ??FTM_ChanceFrequence_19: (+1)
   \   0000023E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000240   0x2801             CMP      R0,#+1
   \   00000242   0xD10E             BNE.N    ??FTM_ChanceFrequence_37
   \   00000244   0x.... 0x....      LDR.W    R0,??DataTable5_2  ;; 0x4004803c
   \   00000248   0x6800             LDR      R0,[R0, #+0]
   \   0000024A   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000024E   0x.... 0x....      LDR.W    R1,??DataTable5_2  ;; 0x4004803c
   \   00000252   0x6008             STR      R0,[R1, #+0]
   \   00000254   0x.... 0x....      LDR.W    R0,??DataTable5_7
   \   00000258   0x6800             LDR      R0,[R0, #+0]
   \   0000025A   0x.... 0x....      LDR.W    R1,??DataTable5_12  ;; 0x40039008
   \   0000025E   0x6008             STR      R0,[R1, #+0]
   \   00000260   0xE768             B.N      ??FTM_ChanceFrequence_20
   \                     ??FTM_ChanceFrequence_37: (+1)
   \   00000262   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000264   0x2802             CMP      R0,#+2
   \   00000266   0xD10E             BNE.N    ??FTM_ChanceFrequence_38
   \   00000268   0x.... 0x....      LDR.W    R0,??DataTable5_13  ;; 0x40048030
   \   0000026C   0x6800             LDR      R0,[R0, #+0]
   \   0000026E   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000272   0x.... 0x....      LDR.W    R1,??DataTable5_13  ;; 0x40048030
   \   00000276   0x6008             STR      R0,[R1, #+0]
   \   00000278   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   0000027C   0x6800             LDR      R0,[R0, #+0]
   \   0000027E   0x.... 0x....      LDR.W    R1,??DataTable5_17  ;; 0x400b8008
   \   00000282   0x6008             STR      R0,[R1, #+0]
   \   00000284   0xE756             B.N      ??FTM_ChanceFrequence_20
   \                     ??FTM_ChanceFrequence_38: (+1)
   \   00000286   0x2000             MOVS     R0,#+0
   \   00000288   0xE755             B.N      ??FTM_ChanceFrequence_1
    488          }
    489          
    490          
    491          /***************************************************************
    492          *函数名：uint8 FTM_PWM_Open(uint8 FTMx,uint8 channel, uint32 duty)
    493          *功能：  打开PWM通道，设置占空比
    494          *入口参数：(1)FTMx : 0
    495                               1
    496                               2
    497                     
    498                    (2)channel  通道号 
    499          
    500                    (3)duty     占空比
    501          *出口参数：无
    502          *说明：无
    503          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
    504          uint8 FTM_PWM_Open(uint8 FTMx,uint8 channel, uint32 duty)
    505          {
   \                     FTM_PWM_Open: (+1)
   \   00000000   0xB418             PUSH     {R3,R4}
    506            uint32 cv;
    507            volatile uint32 mod;
    508            
    509            if(duty>10000) return 0;
   \   00000002   0xF242 0x7311      MOVW     R3,#+10001
   \   00000006   0x429A             CMP      R2,R3
   \   00000008   0xD301             BCC.N    ??FTM_PWM_Open_0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xE060             B.N      ??FTM_PWM_Open_1
    510            //占空比 = (CnV-CNTIN)/(MOD-CNTIN+1)
    511            if(FTMx==0)
   \                     ??FTM_PWM_Open_0: (+1)
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD15F             BNE.N    ??FTM_PWM_Open_2
    512            {
    513              mod = FTM_MOD0;
   \   00000014   0x....             LDR.N    R3,??DataTable5_1
   \   00000016   0x681B             LDR      R3,[R3, #+0]
   \   00000018   0x9300             STR      R3,[SP, #+0]
    514            }
    515            else if(FTMx==1)
    516            {
    517              mod = FTM_MOD1;
    518            }
    519            else if(FTMx==2)
    520            {
    521              mod = FTM_MOD2;
    522            }
    523            else
    524              return 0;
    525            
    526            cv = (duty*(mod-0+1)+0)/10000;
   \                     ??FTM_PWM_Open_3: (+1)
   \   0000001A   0x9B00             LDR      R3,[SP, #+0]
   \   0000001C   0x1C5B             ADDS     R3,R3,#+1
   \   0000001E   0x435A             MULS     R2,R3,R2
   \   00000020   0xF242 0x7310      MOVW     R3,#+10000
   \   00000024   0xFBB2 0xF2F3      UDIV     R2,R2,R3
    527            
    528            if(FTMx==0)
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD123             BNE.N    ??FTM_PWM_Open_4
    529            {
    530              //选择并开启通道
    531              switch(channel)
   \   0000002E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000030   0x000B             MOVS     R3,R1
   \   00000032   0x2B00             CMP      R3,#+0
   \   00000034   0x2B02             CMP      R3,#+2
   \   00000036   0xD905             BLS.N    ??FTM_PWM_Open_5
   \   00000038   0x1EDB             SUBS     R3,R3,#+3
   \   0000003A   0xD05B             BEQ.N    ??FTM_PWM_Open_6
   \   0000003C   0x1E5B             SUBS     R3,R3,#+1
   \   0000003E   0x2B03             CMP      R3,#+3
   \   00000040   0xD968             BLS.N    ??FTM_PWM_Open_7
   \   00000042   0xE074             B.N      ??FTM_PWM_Open_8
    532                {
    533                  case 0:
    534                  case 1:
    535                  case 2:
    536                    SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
   \                     ??FTM_PWM_Open_5: (+1)
   \   00000044   0x....             LDR.N    R3,??DataTable5_18  ;; 0x40048038
   \   00000046   0x681B             LDR      R3,[R3, #+0]
   \   00000048   0xF453 0x7300      ORRS     R3,R3,#0x200
   \   0000004C   0x....             LDR.N    R4,??DataTable5_18  ;; 0x40048038
   \   0000004E   0x6023             STR      R3,[R4, #+0]
    537                    PORT_PCR_REG(PORTA_BASE_PTR, channel+3) = PORT_PCR_MUX(3);
   \   00000050   0xF44F 0x7340      MOV      R3,#+768
   \   00000054   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000056   0x008C             LSLS     R4,R1,#+2
   \   00000058   0xF104 0x4480      ADD      R4,R4,#+1073741824
   \   0000005C   0xF514 0x2492      ADDS     R4,R4,#+299008
   \   00000060   0x60E3             STR      R3,[R4, #+12]
    538                    break;
    539                  case 3:
    540                    SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
    541                    PORT_PCR_REG(PORTC_BASE_PTR, channel+1) = PORT_PCR_MUX(4);
    542                    break;
    543                  case 4:
    544                  case 5:
    545                  case 6:
    546                  case 7:
    547                    SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    548                    PORT_PCR_REG(PORTD_BASE_PTR, channel) = PORT_PCR_MUX(4);
    549                    break;
    550                  default:
    551                    return 0;
    552                }  
    553          
    554              // 配置FTM通道控制寄存器 
    555              // 通道模式 MSB:MSA-1X, 通道边缘选择 ELSB:ELSA-10
    556              FTM_CnSC_REG(FTM0_BASE_PTR, channel) = FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \                     ??FTM_PWM_Open_9: (+1)
   \   00000062   0x2328             MOVS     R3,#+40
   \   00000064   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000066   0x....             LDR.N    R4,??DataTable5_19  ;; 0x4003800c
   \   00000068   0xF844 0x3031      STR      R3,[R4, R1, LSL #+3]
    557              // 配置FTM通道值
    558              FTM_CnV_REG(FTM0_BASE_PTR, channel) = cv;
   \   0000006C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006E   0x....             LDR.N    R3,??DataTable5_19  ;; 0x4003800c
   \   00000070   0xEB13 0x03C1      ADDS     R3,R3,R1, LSL #+3
   \   00000074   0x605A             STR      R2,[R3, #+4]
    559            } 
    560            
    561            if(FTMx==1)
   \                     ??FTM_PWM_Open_4: (+1)
   \   00000076   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000078   0x2801             CMP      R0,#+1
   \   0000007A   0xD118             BNE.N    ??FTM_PWM_Open_10
    562            {
    563              //选择并开启通道
    564              switch(channel)
   \   0000007C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007E   0x2900             CMP      R1,#+0
   \   00000080   0xD157             BNE.N    ??FTM_PWM_Open_11
    565                {
    566                  case 0:
    567                        SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
   \   00000082   0x....             LDR.N    R3,??DataTable5_18  ;; 0x40048038
   \   00000084   0x681B             LDR      R3,[R3, #+0]
   \   00000086   0xF453 0x6380      ORRS     R3,R3,#0x400
   \   0000008A   0x....             LDR.N    R4,??DataTable5_18  ;; 0x40048038
   \   0000008C   0x6023             STR      R3,[R4, #+0]
    568                        PORT_PCR_REG(PORTB_BASE_PTR, channel) = PORT_PCR_MUX(3);
   \   0000008E   0xF44F 0x7340      MOV      R3,#+768
   \   00000092   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000094   0x....             LDR.N    R4,??DataTable5_20  ;; 0x4004a000
   \   00000096   0xF844 0x3021      STR      R3,[R4, R1, LSL #+2]
    569                         //SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    570                         //PORTB_PCR0= PORT_PCR_MUX(0x3)| PORT_PCR_DSE_MASK;
    571                        break;
    572                  case 1:
    573                  case 2:
    574                  case 3:
    575                  case 4:
    576                  case 5:
    577                  case 6:
    578                  case 7:
    579                  default:
    580                    return 0;
    581                }  
    582            
    583              // 配置FTM通道控制寄存器 
    584              // 通道模式 MSB:MSA-1X, 通道边缘选择 ELSB:ELSA-10
    585              FTM_CnSC_REG(FTM1_BASE_PTR, channel) = FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \   0000009A   0x2328             MOVS     R3,#+40
   \   0000009C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009E   0x....             LDR.N    R4,??DataTable5_21  ;; 0x4003900c
   \   000000A0   0xF844 0x3031      STR      R3,[R4, R1, LSL #+3]
    586              // 配置FTM通道值
    587              FTM_CnV_REG(FTM1_BASE_PTR, channel) = cv;
   \   000000A4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A6   0x....             LDR.N    R3,??DataTable5_21  ;; 0x4003900c
   \   000000A8   0xEB13 0x03C1      ADDS     R3,R3,R1, LSL #+3
   \   000000AC   0x605A             STR      R2,[R3, #+4]
    588            } 
    589            
    590            if(FTMx==2)
   \                     ??FTM_PWM_Open_10: (+1)
   \   000000AE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B0   0x2802             CMP      R0,#+2
   \   000000B2   0xD10C             BNE.N    ??FTM_PWM_Open_12
    591            {
    592              //选择并开启通道
    593              switch(channel)
   \   000000B4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B6   0x2900             CMP      R1,#+0
   \   000000B8   0xD13D             BNE.N    ??FTM_PWM_Open_13
    594                {
    595                  case 0:
    596                    break;
    597                  case 1:
    598                  case 2:
    599                  case 3:
    600                  case 4:
    601                  case 5:
    602                  case 6:
    603                  case 7:
    604                  default:
    605                    return 0;
    606                }  
    607            
    608              // 配置FTM通道控制寄存器 
    609              // 通道模式 MSB:MSA-1X, 通道边缘选择 ELSB:ELSA-10
    610              FTM_CnSC_REG(FTM2_BASE_PTR, channel) = FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \   000000BA   0x2028             MOVS     R0,#+40
   \   000000BC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000BE   0x....             LDR.N    R3,??DataTable5_22  ;; 0x400b800c
   \   000000C0   0xF843 0x0031      STR      R0,[R3, R1, LSL #+3]
    611              // 配置FTM通道值
    612              FTM_CnV_REG(FTM2_BASE_PTR, channel) = cv;
   \   000000C4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C6   0x....             LDR.N    R0,??DataTable5_22  ;; 0x400b800c
   \   000000C8   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   000000CC   0x6042             STR      R2,[R0, #+4]
    613            } 
    614            return 1;
   \                     ??FTM_PWM_Open_12: (+1)
   \   000000CE   0x2001             MOVS     R0,#+1
   \                     ??FTM_PWM_Open_1: (+1)
   \   000000D0   0xBC12             POP      {R1,R4}
   \   000000D2   0x4770             BX       LR               ;; return
   \                     ??FTM_PWM_Open_2: (+1)
   \   000000D4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D6   0x2801             CMP      R0,#+1
   \   000000D8   0xD103             BNE.N    ??FTM_PWM_Open_14
   \   000000DA   0x....             LDR.N    R3,??DataTable5_7
   \   000000DC   0x681B             LDR      R3,[R3, #+0]
   \   000000DE   0x9300             STR      R3,[SP, #+0]
   \   000000E0   0xE79B             B.N      ??FTM_PWM_Open_3
   \                     ??FTM_PWM_Open_14: (+1)
   \   000000E2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E4   0x2802             CMP      R0,#+2
   \   000000E6   0xD103             BNE.N    ??FTM_PWM_Open_15
   \   000000E8   0x....             LDR.N    R3,??DataTable5_8
   \   000000EA   0x681B             LDR      R3,[R3, #+0]
   \   000000EC   0x9300             STR      R3,[SP, #+0]
   \   000000EE   0xE794             B.N      ??FTM_PWM_Open_3
   \                     ??FTM_PWM_Open_15: (+1)
   \   000000F0   0x2000             MOVS     R0,#+0
   \   000000F2   0xE7ED             B.N      ??FTM_PWM_Open_1
   \                     ??FTM_PWM_Open_6: (+1)
   \   000000F4   0x....             LDR.N    R3,??DataTable5_18  ;; 0x40048038
   \   000000F6   0x681B             LDR      R3,[R3, #+0]
   \   000000F8   0xF453 0x6300      ORRS     R3,R3,#0x800
   \   000000FC   0x....             LDR.N    R4,??DataTable5_18  ;; 0x40048038
   \   000000FE   0x6023             STR      R3,[R4, #+0]
   \   00000100   0xF44F 0x6380      MOV      R3,#+1024
   \   00000104   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000106   0x008C             LSLS     R4,R1,#+2
   \   00000108   0xF104 0x4480      ADD      R4,R4,#+1073741824
   \   0000010C   0xF514 0x2496      ADDS     R4,R4,#+307200
   \   00000110   0x6063             STR      R3,[R4, #+4]
   \   00000112   0xE7A6             B.N      ??FTM_PWM_Open_9
   \                     ??FTM_PWM_Open_7: (+1)
   \   00000114   0x....             LDR.N    R3,??DataTable5_18  ;; 0x40048038
   \   00000116   0x681B             LDR      R3,[R3, #+0]
   \   00000118   0xF453 0x5380      ORRS     R3,R3,#0x1000
   \   0000011C   0x....             LDR.N    R4,??DataTable5_18  ;; 0x40048038
   \   0000011E   0x6023             STR      R3,[R4, #+0]
   \   00000120   0xF44F 0x6380      MOV      R3,#+1024
   \   00000124   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000126   0x....             LDR.N    R4,??DataTable5_23  ;; 0x4004c000
   \   00000128   0xF844 0x3021      STR      R3,[R4, R1, LSL #+2]
   \   0000012C   0xE799             B.N      ??FTM_PWM_Open_9
   \                     ??FTM_PWM_Open_8: (+1)
   \   0000012E   0x2000             MOVS     R0,#+0
   \   00000130   0xE7CE             B.N      ??FTM_PWM_Open_1
   \                     ??FTM_PWM_Open_11: (+1)
   \   00000132   0x2000             MOVS     R0,#+0
   \   00000134   0xE7CC             B.N      ??FTM_PWM_Open_1
   \                     ??FTM_PWM_Open_13: (+1)
   \   00000136   0x2000             MOVS     R0,#+0
   \   00000138   0xE7CA             B.N      ??FTM_PWM_Open_1
    615          }
    616          
    617          /***************************************************************
    618          *函数名：uint8 FTM_PWM_ChangeDuty(uint8 FTMx,uint8 channel, uint32 duty)
    619          *功能：  打开PWM通道，设置占空比
    620          *入口参数：(1)FTMx : 0
    621                               1
    622                               2
    623                     
    624                    (2)channel  通道号 
    625          
    626                    (3)duty     占空比
    627          *出口参数：无
    628          *说明：无
    629          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
    630          uint8 FTM_PWM_ChangeDuty(uint8 FTMx,uint8 channel, uint32 duty)
    631          {
   \                     FTM_PWM_ChangeDuty: (+1)
   \   00000000   0xB081             SUB      SP,SP,#+4
    632            uint32 cv;
    633            volatile uint32 mod;
    634            
    635            if(duty>10000) return 0;
   \   00000002   0xF242 0x7311      MOVW     R3,#+10001
   \   00000006   0x429A             CMP      R2,R3
   \   00000008   0xD301             BCC.N    ??FTM_PWM_ChangeDuty_0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xE019             B.N      ??FTM_PWM_ChangeDuty_1
    636            //占空比 = (CnV-CNTIN)/(MOD-CNTIN+1)
    637            if(FTMx==0)
   \                     ??FTM_PWM_ChangeDuty_0: (+1)
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD118             BNE.N    ??FTM_PWM_ChangeDuty_2
    638            {
    639              mod=FTM_MOD0;
   \   00000014   0x....             LDR.N    R3,??DataTable5_1
   \   00000016   0x681B             LDR      R3,[R3, #+0]
   \   00000018   0x9300             STR      R3,[SP, #+0]
    640            }
    641            else if(FTMx==1)
    642            {
    643              mod=FTM_MOD1;
    644            }
    645            else if(FTMx==2)
    646            {
    647              mod=FTM_MOD2;
    648            }
    649            else
    650              return 0;
    651            
    652            cv = (duty*(mod-0+1)+0)/10000;
   \                     ??FTM_PWM_ChangeDuty_3: (+1)
   \   0000001A   0x9B00             LDR      R3,[SP, #+0]
   \   0000001C   0x1C5B             ADDS     R3,R3,#+1
   \   0000001E   0x435A             MULS     R2,R3,R2
   \   00000020   0xF242 0x7310      MOVW     R3,#+10000
   \   00000024   0xFBB2 0xF2F3      UDIV     R2,R2,R3
    653            
    654            if(FTMx==0)
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD123             BNE.N    ??FTM_PWM_ChangeDuty_4
    655            {
    656              switch(channel)// 配置FTM通道值
   \   0000002E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000030   0x2900             CMP      R1,#+0
   \   00000032   0xD003             BEQ.N    ??FTM_PWM_ChangeDuty_5
   \   00000034   0x2902             CMP      R1,#+2
   \   00000036   0xD019             BEQ.N    ??FTM_PWM_ChangeDuty_6
   \   00000038   0xD315             BCC.N    ??FTM_PWM_ChangeDuty_7
   \   0000003A   0xE01A             B.N      ??FTM_PWM_ChangeDuty_8
    657              {  
    658                case 0:
    659                   FTM_CnV_REG(FTM0_BASE_PTR, 0) = cv;
   \                     ??FTM_PWM_ChangeDuty_5: (+1)
   \   0000003C   0x....             LDR.N    R0,??DataTable5_24  ;; 0x40038010
   \   0000003E   0x6002             STR      R2,[R0, #+0]
    660                   break;
    661                case 1:
    662                   FTM_CnV_REG(FTM0_BASE_PTR, 1) = cv;
    663                   break;
    664                case 2:
    665                   FTM_CnV_REG(FTM0_BASE_PTR, 2) = cv;
    666                   break;
    667                default:
    668                return 0;
    669              }
    670            }
    671            else if(FTMx==1)
    672            {
    673              // 配置FTM通道值
    674              FTM_CnV_REG(FTM1_BASE_PTR, channel) = cv;
    675            }
    676            else if(FTMx==2)
    677            {
    678              // 配置FTM通道值
    679              FTM_CnV_REG(FTM2_BASE_PTR, channel) = cv;
    680            }
    681            else
    682              return 0;
    683            return 1;
   \                     ??FTM_PWM_ChangeDuty_9: (+1)
   \   00000040   0x2001             MOVS     R0,#+1
   \                     ??FTM_PWM_ChangeDuty_1: (+1)
   \   00000042   0xB001             ADD      SP,SP,#+4
   \   00000044   0x4770             BX       LR               ;; return
   \                     ??FTM_PWM_ChangeDuty_2: (+1)
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0x2801             CMP      R0,#+1
   \   0000004A   0xD103             BNE.N    ??FTM_PWM_ChangeDuty_10
   \   0000004C   0x....             LDR.N    R3,??DataTable5_7
   \   0000004E   0x681B             LDR      R3,[R3, #+0]
   \   00000050   0x9300             STR      R3,[SP, #+0]
   \   00000052   0xE7E2             B.N      ??FTM_PWM_ChangeDuty_3
   \                     ??FTM_PWM_ChangeDuty_10: (+1)
   \   00000054   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000056   0x2802             CMP      R0,#+2
   \   00000058   0xD103             BNE.N    ??FTM_PWM_ChangeDuty_11
   \   0000005A   0x....             LDR.N    R3,??DataTable5_8
   \   0000005C   0x681B             LDR      R3,[R3, #+0]
   \   0000005E   0x9300             STR      R3,[SP, #+0]
   \   00000060   0xE7DB             B.N      ??FTM_PWM_ChangeDuty_3
   \                     ??FTM_PWM_ChangeDuty_11: (+1)
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0xE7ED             B.N      ??FTM_PWM_ChangeDuty_1
   \                     ??FTM_PWM_ChangeDuty_7: (+1)
   \   00000066   0x....             LDR.N    R0,??DataTable5_25  ;; 0x40038018
   \   00000068   0x6002             STR      R2,[R0, #+0]
   \   0000006A   0xE7E9             B.N      ??FTM_PWM_ChangeDuty_9
   \                     ??FTM_PWM_ChangeDuty_6: (+1)
   \   0000006C   0x....             LDR.N    R0,??DataTable5_26  ;; 0x40038020
   \   0000006E   0x6002             STR      R2,[R0, #+0]
   \   00000070   0xE7E6             B.N      ??FTM_PWM_ChangeDuty_9
   \                     ??FTM_PWM_ChangeDuty_8: (+1)
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0xE7E5             B.N      ??FTM_PWM_ChangeDuty_1
   \                     ??FTM_PWM_ChangeDuty_4: (+1)
   \   00000076   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000078   0x2801             CMP      R0,#+1
   \   0000007A   0xD105             BNE.N    ??FTM_PWM_ChangeDuty_12
   \   0000007C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007E   0x....             LDR.N    R0,??DataTable5_21  ;; 0x4003900c
   \   00000080   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   00000084   0x6042             STR      R2,[R0, #+4]
   \   00000086   0xE7DB             B.N      ??FTM_PWM_ChangeDuty_9
   \                     ??FTM_PWM_ChangeDuty_12: (+1)
   \   00000088   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008A   0x2802             CMP      R0,#+2
   \   0000008C   0xD105             BNE.N    ??FTM_PWM_ChangeDuty_13
   \   0000008E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000090   0x....             LDR.N    R0,??DataTable5_22  ;; 0x400b800c
   \   00000092   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   00000096   0x6042             STR      R2,[R0, #+4]
   \   00000098   0xE7D2             B.N      ??FTM_PWM_ChangeDuty_9
   \                     ??FTM_PWM_ChangeDuty_13: (+1)
   \   0000009A   0x2000             MOVS     R0,#+0
   \   0000009C   0xE7D1             B.N      ??FTM_PWM_ChangeDuty_1
    684          }
    685          /***************************************************************
    686          *函数名：void Motor_init(void)   
    687          *功能：  直流电机PWM调速引脚初始化,用FTM1模块
    688          *入口参数：无
    689          *出口参数：无
    690          *说明：无
    691          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
    692          void Motor_init(void)    //直流电机
    693          {      	   
    694            //DIR_B;                     //右电机B10  正转
    695            //DIL_B;                     //左电机B9   反转
    696            
    697            /* Turn on all port clocks */
    698            //SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
    699            SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
   \                     Motor_init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable5_18  ;; 0x40048038
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000008   0x....             LDR.N    R1,??DataTable5_18  ;; 0x40048038
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    700            
    701            //以前为双电机开的两个端口
    702            //PORTC_PCR1= PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK; // FTM is alt3 function for this pin 
    703            //PORTC_PCR2= PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK; // FTM is alt3 function for this pin
    704            PORTB_PCR0= PORT_PCR_MUX(0x3)| PORT_PCR_DSE_MASK; // FTM is alt3 function for this pin PTB0
   \   0000000C   0xF44F 0x7050      MOV      R0,#+832
   \   00000010   0x....             LDR.N    R1,??DataTable5_20  ;; 0x4004a000
   \   00000012   0x6008             STR      R0,[R1, #+0]
    705            
    706            SIM_SCGC6|=SIM_SCGC6_FTM1_MASK;         //使能FTM1时钟      
   \   00000014   0x....             LDR.N    R0,??DataTable5_2  ;; 0x4004803c
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000001C   0x....             LDR.N    R1,??DataTable5_2  ;; 0x4004803c
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    707            
    708            //change MSnB = 1  
    709            FTM1_C0SC |= FTM_CnSC_ELSB_MASK;
   \   00000020   0x....             LDR.N    R0,??DataTable5_21  ;; 0x4003900c
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000028   0x....             LDR.N    R1,??DataTable5_21  ;; 0x4003900c
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    710            FTM1_C0SC &= ~FTM_CnSC_ELSA_MASK;
   \   0000002C   0x....             LDR.N    R0,??DataTable5_21  ;; 0x4003900c
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000034   0x....             LDR.N    R1,??DataTable5_21  ;; 0x4003900c
   \   00000036   0x6008             STR      R0,[R1, #+0]
    711            FTM1_C0SC |= FTM_CnSC_MSB_MASK;    
   \   00000038   0x....             LDR.N    R0,??DataTable5_21  ;; 0x4003900c
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000040   0x....             LDR.N    R1,??DataTable5_21  ;; 0x4003900c
   \   00000042   0x6008             STR      R0,[R1, #+0]
    712            /*为另一个电机
    713            FTM1_C1SC |= FTM_CnSC_ELSB_MASK;
    714            FTM1_C1SC &= ~FTM_CnSC_ELSA_MASK;
    715            FTM1_C1SC |= FTM_CnSC_MSB_MASK;   
    716            */
    717            
    718            FTM1_SC = 0x29; //not enable the interrupt mask    0010 1001
   \   00000044   0x2029             MOVS     R0,#+41
   \   00000046   0x....             LDR.N    R1,??DataTable5_9  ;; 0x40039000
   \   00000048   0x6008             STR      R0,[R1, #+0]
    719            //FTM1_SC=0X1F;       //BIT5  0 FTM counter operates in up counting mode.
    720                                  //1 FTM counter operates in up-down counting mode.      
    721            //BIT43 FTM1_SC|=FTM1_SC_CLKS_MASK;
    722                                  //00 No clock selected (This in effect disables the FTM counter.)
    723                                  //01 System clock
    724                                  //10 Fixed frequency clock
    725                                  //11 External clock
    726            //BIT210 FTM1_SC|=FTM1_SC_PS_MASK; 
    727                                  //100M          MOD=2000;    
    728                                  //000 Divide by 1---12KHZ     
    729                                  //001 Divide by 2--- 6KHZ
    730                                  //010 Divide by 4--- 3K
    731                                  //011 Divide by 8--- 1.5K
    732                                  //100 Divide by 16---750
    733                                  //101 Divide by 32---375
    734                                  //110 Divide by 64---187.5HZ
    735                                  //111 Divide by 128--93.75hz             
    736            
    737            FTM1_MODE |= FTM_MODE_WPDIS_MASK;      
   \   0000004A   0x....             LDR.N    R0,??DataTable5_27  ;; 0x40039054
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000052   0x....             LDR.N    R1,??DataTable5_27  ;; 0x40039054
   \   00000054   0x6008             STR      R0,[R1, #+0]
    738             //BIT1   Initialize the Channels Output
    739            //FTMEN is bit 0, need to set to zero so DECAPEN can be set to 0
    740            FTM1_MODE &= ~1;
   \   00000056   0x....             LDR.N    R0,??DataTable5_27  ;; 0x40039054
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x0840             LSRS     R0,R0,#+1
   \   0000005C   0x0040             LSLS     R0,R0,#+1
   \   0000005E   0x....             LDR.N    R1,??DataTable5_27  ;; 0x40039054
   \   00000060   0x6008             STR      R0,[R1, #+0]
    741             //BIT0   FTM Enable
    742             //0 Only the TPM-compatible registers (first set of registers) can be used without any restriction. Do not use the FTM-specific registers.
    743             //1 All registers including the FTM-specific registers (second set of registers) are available for use with no restrictions.
    744            
    745            FTM1_OUTMASK=0XFE;   //0 Channel output is not masked. It continues to operate normally.
   \   00000062   0x20FE             MOVS     R0,#+254
   \   00000064   0x....             LDR.N    R1,??DataTable5_28  ;; 0x40039060
   \   00000066   0x6008             STR      R0,[R1, #+0]
    746                                 //1 Channel output is masked. It is forced to its inactive state.
    747            
    748            FTM1_COMBINE=0;      //Function for Linked Channels (FTMx_COMBINE)
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x....             LDR.N    R1,??DataTable5_29  ;; 0x40039064
   \   0000006C   0x6008             STR      R0,[R1, #+0]
    749            FTM1_OUTINIT=0;
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x....             LDR.N    R1,??DataTable5_30  ;; 0x4003905c
   \   00000072   0x6008             STR      R0,[R1, #+0]
    750            FTM1_EXTTRIG=0;      //FTM aExternl Trigger (FTMx_EXTTRIG)
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x....             LDR.N    R1,??DataTable5_31  ;; 0x4003906c
   \   00000078   0x6008             STR      R0,[R1, #+0]
    751            FTM1_POL=0;          //Channels Polarity (FTMx_POL)
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x....             LDR.N    R1,??DataTable5_32  ;; 0x40039070
   \   0000007E   0x6008             STR      R0,[R1, #+0]
    752                                 //0 The channel polarity is active high.
    753                                 //1 The channel polarity is active low.     
    754            //Set Edge Aligned PWM
    755            FTM1_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;
   \   00000080   0x....             LDR.N    R0,??DataTable5_33  ;; 0x40039080
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0x0840             LSRS     R0,R0,#+1
   \   00000086   0x0040             LSLS     R0,R0,#+1
   \   00000088   0x....             LDR.N    R1,??DataTable5_33  ;; 0x40039080
   \   0000008A   0x6008             STR      R0,[R1, #+0]
    756            //QUADEN is Bit 1, Set Quadrature Decoder Mode (QUADEN) Enable to 0,   (disabled)
    757            //FTM0_SC = 0x16; //Center Aligned PWM Select = 0, sets FTM Counter to operate in up counting mode,
    758            //it is field 5 of FTMx_SC (status control) - also setting the pre-scale bits here
    759            
    760            FTM1_INVCTRL=0;      //反转控制
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x....             LDR.N    R1,??DataTable5_34  ;; 0x40039090
   \   00000090   0x6008             STR      R0,[R1, #+0]
    761            FTM1_SWOCTRL=0;      //软件输出控制F TM Software Output Control (FTMx_SWOCTRL)
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x....             LDR.N    R1,??DataTable5_35  ;; 0x40039094
   \   00000096   0x6008             STR      R0,[R1, #+0]
    762            FTM1_PWMLOAD=0;      //FTM PWM Load
   \   00000098   0x2000             MOVS     R0,#+0
   \   0000009A   0x....             LDR.N    R1,??DataTable5_36  ;; 0x40039098
   \   0000009C   0x6008             STR      R0,[R1, #+0]
    763                                 //BIT9: 0 Loading updated values is disabled.
    764                                 //1 Loading updated values is enabled.
    765            FTM1_CNTIN=0;        //Counter Initial Value      
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0x....             LDR.N    R1,??DataTable5_11  ;; 0x4003904c
   \   000000A2   0x6008             STR      R0,[R1, #+0]
    766            FTM1_MOD=1250;       //Modulo value,The EPWM period is determined by (MOD - CNTIN + 0x0001) 
   \   000000A4   0xF240 0x40E2      MOVW     R0,#+1250
   \   000000A8   0x....             LDR.N    R1,??DataTable5_12  ;; 0x40039008
   \   000000AA   0x6008             STR      R0,[R1, #+0]
    767                                 //PMW频率=系统频率/4/(2^FTM1_SC_PS)/FTM1_MOD   10000=180000000/4/2/2250   
    768            FTM1_C0V=500;          //设置 the pulse width(duty cycle) is determined by (CnV - CNTIN).  高电平的时间
   \   000000AC   0xF44F 0x70FA      MOV      R0,#+500
   \   000000B0   0x....             LDR.N    R1,??DataTable5_37  ;; 0x40039010
   \   000000B2   0x6008             STR      R0,[R1, #+0]
    769            //FTM1_C1V=0;          //设置 the pulse width(duty cycle) is determined by (CnV - CNTIN).  高电平的时间
    770            FTM1_CNT=0;          //只有低16位可用,寄存器的初值
   \   000000B4   0x2000             MOVS     R0,#+0
   \   000000B6   0x....             LDR.N    R1,??DataTable5_10  ;; 0x40039004
   \   000000B8   0x6008             STR      R0,[R1, #+0]
    771          }
   \   000000BA   0x4770             BX       LR               ;; return
    772          
    773          //================================================================
    774          //E6A2-CW3C光电编码器引脚：
    775          //         蓝色：GND
    776          //         棕色：VCC
    777          //         黑色：A相
    778          //         白色：B相
    779          
    780          //函数名：void FTM2_QUAD_Iint(void)
    781          //功能：   输入脉冲捕捉
    782          //入口参数：无
    783          //出口参数：无
    784          //说明：    无
    785          //================================================================

   \                                 In section .text, align 2, keep-with-next
    786          void FTM2_QUAD_Iint(void)  
    787          { 
    788            SIM_SCGC3|=SIM_SCGC3_FTM2_MASK;//使能FTM2时钟  
   \                     FTM2_QUAD_Iint: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable5_13  ;; 0x40048030
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000008   0x....             LDR.N    R1,??DataTable5_13  ;; 0x40048030
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    789            //SIM_SCGC5|= SIM_SCGC5_PORTB_MASK; //Turn on PORTB clock
    790            
    791            PORTB_PCR18= PORT_PCR_MUX(6); // 设置引脚B18引脚为FTM2_PHA功能
   \   0000000C   0xF44F 0x60C0      MOV      R0,#+1536
   \   00000010   0x....             LDR.N    R1,??DataTable5_38  ;; 0x4004a048
   \   00000012   0x6008             STR      R0,[R1, #+0]
    792            PORTB_PCR19= PORT_PCR_MUX(6); // 设置引脚B19引脚为FTM2_PHB功能  
   \   00000014   0xF44F 0x60C0      MOV      R0,#+1536
   \   00000018   0x....             LDR.N    R1,??DataTable5_39  ;; 0x4004a04c
   \   0000001A   0x6008             STR      R0,[R1, #+0]
    793           
    794            FTM2_MODE |= FTM_MODE_WPDIS_MASK;//写保护禁止  
   \   0000001C   0x....             LDR.N    R0,??DataTable5_40  ;; 0x400b8054
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000024   0x....             LDR.N    R1,??DataTable5_40  ;; 0x400b8054
   \   00000026   0x6008             STR      R0,[R1, #+0]
    795            FTM2_QDCTRL|=FTM_QDCTRL_QUADMODE_MASK;//AB相同时确定方向和计数值  
   \   00000028   0x....             LDR.N    R0,??DataTable5_41  ;; 0x400b8080
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000030   0x....             LDR.N    R1,??DataTable5_41  ;; 0x400b8080
   \   00000032   0x6008             STR      R0,[R1, #+0]
    796            
    797            //FTM2_FILTER|=(10<<FTM_FILTER_CH3FVAL_SHIFT);//设置输入的滤波 
    798            
    799            FTM2_CNTIN=0;//FTM0计数器初始值为0  
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x....             LDR.N    R1,??DataTable5_16  ;; 0x400b804c
   \   00000038   0x6008             STR      R0,[R1, #+0]
    800            FTM2_MOD=65535;//结束值  
   \   0000003A   0xF64F 0x70FF      MOVW     R0,#+65535
   \   0000003E   0x....             LDR.N    R1,??DataTable5_17  ;; 0x400b8008
   \   00000040   0x6008             STR      R0,[R1, #+0]
    801          	
    802            FTM2_QDCTRL|=FTM_QDCTRL_QUADEN_MASK;//启用FTM2正交解码模式  
   \   00000042   0x....             LDR.N    R0,??DataTable5_41  ;; 0x400b8080
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000004A   0x....             LDR.N    R1,??DataTable5_41  ;; 0x400b8080
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    803            FTM2_MODE |= FTM_MODE_FTMEN_MASK;//FTM2EN=1    
   \   0000004E   0x....             LDR.N    R0,??DataTable5_40  ;; 0x400b8054
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000056   0x....             LDR.N    R1,??DataTable5_40  ;; 0x400b8054
   \   00000058   0x6008             STR      R0,[R1, #+0]
    804            FTM2_CNT=0;  
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x....             LDR.N    R1,??DataTable5_15  ;; 0x400b8004
   \   0000005E   0x6008             STR      R0,[R1, #+0]
    805          }  
   \   00000060   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     periph_clk_khz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     FTM_MOD0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x40038004         DC32     0x40038004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x4003804C         DC32     0x4003804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x40038008         DC32     0x40038008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     FTM_MOD1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     FTM_MOD2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x40039004         DC32     0x40039004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x4003904C         DC32     0x4003904c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x40039008         DC32     0x40039008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x40048030         DC32     0x40048030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_15:
   \   00000000   0x400B8004         DC32     0x400b8004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_16:
   \   00000000   0x400B804C         DC32     0x400b804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_17:
   \   00000000   0x400B8008         DC32     0x400b8008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_18:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_19:
   \   00000000   0x4003800C         DC32     0x4003800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_20:
   \   00000000   0x4004A000         DC32     0x4004a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_21:
   \   00000000   0x4003900C         DC32     0x4003900c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_22:
   \   00000000   0x400B800C         DC32     0x400b800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_23:
   \   00000000   0x4004C000         DC32     0x4004c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_24:
   \   00000000   0x40038010         DC32     0x40038010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_25:
   \   00000000   0x40038018         DC32     0x40038018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_26:
   \   00000000   0x40038020         DC32     0x40038020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_27:
   \   00000000   0x40039054         DC32     0x40039054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_28:
   \   00000000   0x40039060         DC32     0x40039060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_29:
   \   00000000   0x40039064         DC32     0x40039064

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_30:
   \   00000000   0x4003905C         DC32     0x4003905c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_31:
   \   00000000   0x4003906C         DC32     0x4003906c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_32:
   \   00000000   0x40039070         DC32     0x40039070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_33:
   \   00000000   0x40039080         DC32     0x40039080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_34:
   \   00000000   0x40039090         DC32     0x40039090

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_35:
   \   00000000   0x40039094         DC32     0x40039094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_36:
   \   00000000   0x40039098         DC32     0x40039098

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_37:
   \   00000000   0x40039010         DC32     0x40039010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_38:
   \   00000000   0x4004A048         DC32     0x4004a048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_39:
   \   00000000   0x4004A04C         DC32     0x4004a04c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_40:
   \   00000000   0x400B8054         DC32     0x400b8054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_41:
   \   00000000   0x400B8080         DC32     0x400b8080

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   FTM2_QUAD_Iint
       4   FTM_ChanceFrequence
       4   FTM_PWM_ChangeDuty
       8   FTM_PWM_Init
       8   FTM_PWM_Open
       0   Motor_init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_15
       4  ??DataTable5_16
       4  ??DataTable5_17
       4  ??DataTable5_18
       4  ??DataTable5_19
       4  ??DataTable5_2
       4  ??DataTable5_20
       4  ??DataTable5_21
       4  ??DataTable5_22
       4  ??DataTable5_23
       4  ??DataTable5_24
       4  ??DataTable5_25
       4  ??DataTable5_26
       4  ??DataTable5_27
       4  ??DataTable5_28
       4  ??DataTable5_29
       4  ??DataTable5_3
       4  ??DataTable5_30
       4  ??DataTable5_31
       4  ??DataTable5_32
       4  ??DataTable5_33
       4  ??DataTable5_34
       4  ??DataTable5_35
       4  ??DataTable5_36
       4  ??DataTable5_37
       4  ??DataTable5_38
       4  ??DataTable5_39
       4  ??DataTable5_4
       4  ??DataTable5_40
       4  ??DataTable5_41
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      98  FTM2_QUAD_Iint
     650  FTM_ChanceFrequence
       4  FTM_MOD0
       4  FTM_MOD1
       4  FTM_MOD2
     158  FTM_PWM_ChangeDuty
     746  FTM_PWM_Init
     314  FTM_PWM_Open
     188  Motor_init

 
    12 bytes in section .bss
 2 322 bytes in section .text
 
 2 322 bytes of CODE memory
    12 bytes of DATA memory

Errors: none
Warnings: 1
