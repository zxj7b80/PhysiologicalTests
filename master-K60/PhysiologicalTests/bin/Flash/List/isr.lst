###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        24/Jun/2015  14:03:30
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\src\Sources\C\isr.c
#    Command line =  
#        "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\src\Sources\C\isr.c" -D IAR -D TWR_K60N512
#        -lCN "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\bin\Flash\List\" -lB
#        "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\bin\Flash\List\" -o
#        "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\bin\Flash\Obj\" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "D:\MyProgramFiles\IAR V7.1\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\src\Sources\H\" -I
#        "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\src\Sources\H\Component_H\" -I
#        "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\src\Sources\H\Frame_H\" -Ol --use_c++_inline
#    List file    =  
#        C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\bin\Flash\List\isr.lst
#    Object file  =  
#        C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\bin\Flash\Obj\isr.o
#
###############################################################################

C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new board\PhysiologicalTests\src\Sources\C\isr.c
      1          //-------------------------------------------------------------------------*
      2          // 文件名: isr.c                                                           *
      3          // 说  明: 中断处理程序                                                     *
      4          //-------------------------------------------------------------------------*
      5          #include "includes.h"
      6          #include "math.h"
      7          

   \                                 In section .bss, align 1
      8          uint8  g_n1msEventCount =0;
   \                     g_n1msEventCount:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
      9          int    off_y[20]={0};
   \                     off_y:
   \   00000000                      DS8 80
     10          extern int   OFF_Y,YBack;
     11          
     12          extern uint8   BUF[8];

   \                                 In section .bss, align 2
     13          uint16 IntCnt=0;
   \                     IntCnt:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
     14          uint16 base=100;
   \                     base:
   \   00000000   0x0064             DC16 100
     15          // P             I                 D

   \                                 In section .data, align 2
     16          uint16 SecStart=225,SecMid=60,SecStop=220,SecBack1=170,SecBack2=550;//0416
   \                     SecStart:
   \   00000000   0x00E1             DC16 225

   \                                 In section .data, align 2
   \                     SecMid:
   \   00000000   0x003C             DC16 60

   \                                 In section .data, align 2
   \                     SecStop:
   \   00000000   0x00DC             DC16 220

   \                                 In section .data, align 2
   \                     SecBack1:
   \   00000000   0x00AA             DC16 170

   \                                 In section .data, align 2
   \                     SecBack2:
   \   00000000   0x0226             DC16 550
     17                                                           //170回来不够
     18          

   \                                 In section .bss, align 4
     19          int32  PwmDuty=0;
   \                     PwmDuty:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     20          int32  Duty=0;
   \                     Duty:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     21          int32  PwmSet=0;
   \                     PwmSet:
   \   00000000                      DS8 4
     22          
     23          

   \                                 In section .data, align 4
     24          uint32 PwmStart=5800;
   \                     PwmStart:
   \   00000000   0x000016A8         DC32 5800

   \                                 In section .data, align 4
     25          uint32 PwmStop=8500;
   \                     PwmStop:
   \   00000000   0x00002134         DC32 8500

   \                                 In section .data, align 4
     26          uint32 PwmMid=4800;
   \                     PwmMid:
   \   00000000   0x000012C0         DC32 4800

   \                                 In section .data, align 4
     27          uint32 PwmBack=4000;
   \                     PwmBack:
   \   00000000   0x00000FA0         DC32 4000
     28          

   \                                 In section .bss, align 1
     29          uint8  dir=0;
   \                     dir:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     30          uint8  GpioIntFlag=0;
   \                     GpioIntFlag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
     31          uint16 GpioIntCnt=0;
   \                     GpioIntCnt:
   \   00000000                      DS8 2
     32          

   \                                 In section .bss, align 1
     33          uint8  g_n1msEventFlag=0;
   \                     g_n1msEventFlag:
   \   00000000                      DS8 1
     34          

   \                                 In section .bss, align 2
     35          uint16 pit1_cnt=0;
   \                     pit1_cnt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     36          uint8 ForB=0;
   \                     ForB:
   \   00000000                      DS8 1
     37          
     38          extern uint8 MachineReset;

   \                                 In section .bss, align 1
     39          uint8 slow=0;
   \                     slow:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     40          uint8 PB1=0,PE24=0;
   \                     PB1:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     PE24:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     41          uint8 StepOk=0;
   \                     StepOk:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     42          uint8 PB1_flag=0,PE24_flag=0;
   \                     PB1_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     PE24_flag:
   \   00000000                      DS8 1
     43          

   \                                 In section .bss, align 1
     44          uint8 BufBegin=0;
   \                     BufBegin:
   \   00000000                      DS8 1
     45          
     46          extern uint16 OutData[4];
     47          extern int16 g_nMotorPulseSigma;
     48          extern int16 g_nMotorPulse;

   \                                 In section .bss, align 2
     49          int16 PulseControl=0;
   \                     PulseControl:
   \   00000000                      DS8 2
     50          

   \                                 In section .bss, align 2
     51          int16  ResetPulseSection=0;
   \                     ResetPulseSection:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     52          uint8  FB=0;
   \                     FB:
   \   00000000                      DS8 1
     53          extern uint8 first;

   \                                 In section .bss, align 4
     54          int32  BatteryVoltage=0;
   \                     BatteryVoltage:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
     55          int16  BVCnt=0;
   \                     BVCnt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     56          uint8  PowerLowFg=0;
   \                     PowerLowFg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
     57          int16  chainage=0;
   \                     chainage:
   \   00000000                      DS8 2
     58          
     59          //----------------------------------------------------------------
     60          //pit0中断服务函数

   \                                 In section .text, align 4, keep-with-next
     61          void pit0_isr(void)                      //定时器1ms中断函数
     62          {
   \                     pit0_isr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     63            DisableInterrupts;                     //关总中断
   \   00000002   0xB672             CPSID i
     64            g_n1msEventFlag=1;
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable5
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
     65            PwmDuty=0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000012   0x6008             STR      R0,[R1, #+0]
     66            //运行---------------------------------------------------------
     67            if(test_start==1&&PE24_flag==0&&first==0)
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0x2801             CMP      R0,#+1
   \   0000001C   0xF040 0x80C7      BNE.W    ??pit0_isr_0
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable5_3
   \   00000024   0x7800             LDRB     R0,[R0, #+0]
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xF040 0x80C1      BNE.W    ??pit0_isr_0
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   00000030   0x7800             LDRB     R0,[R0, #+0]
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xF040 0x80BB      BNE.W    ??pit0_isr_0
     68            {
     69              IntCnt++;
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   0000003C   0x8800             LDRH     R0,[R0, #+0]
   \   0000003E   0x1C40             ADDS     R0,R0,#+1
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   00000044   0x8008             STRH     R0,[R1, #+0]
     70              if(IntCnt==1)
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   0000004A   0x8800             LDRH     R0,[R0, #+0]
   \   0000004C   0x2801             CMP      R0,#+1
   \   0000004E   0xD10E             BNE.N    ??pit0_isr_1
     71              {
     72                ForB=1;
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable5_6
   \   00000056   0x7008             STRB     R0,[R1, #+0]
     73                PwmDuty=0;
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000005E   0x6008             STR      R0,[R1, #+0]
     74                gpio_ctrl(PORTE,25,0);
   \   00000060   0x2200             MOVS     R2,#+0
   \   00000062   0x2119             MOVS     R1,#+25
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable5_7  ;; 0x400ff100
   \   00000068   0x.... 0x....      BL       gpio_ctrl
   \   0000006C   0xE09F             B.N      ??pit0_isr_0
     75              }
     76              else if(IntCnt>1 && IntCnt<base)
   \                     ??pit0_isr_1: (+1)
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   00000072   0x8800             LDRH     R0,[R0, #+0]
   \   00000074   0x2802             CMP      R0,#+2
   \   00000076   0xDB0C             BLT.N    ??pit0_isr_2
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   0000007C   0x8800             LDRH     R0,[R0, #+0]
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable5_8
   \   00000082   0x8809             LDRH     R1,[R1, #+0]
   \   00000084   0x4288             CMP      R0,R1
   \   00000086   0xD204             BCS.N    ??pit0_isr_2
     77                PwmDuty=0;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000008E   0x6008             STR      R0,[R1, #+0]
   \   00000090   0xE08D             B.N      ??pit0_isr_0
     78              else
     79              {
     80                IntCnt=base+1;
   \                     ??pit0_isr_2: (+1)
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000096   0x8800             LDRH     R0,[R0, #+0]
   \   00000098   0x1C40             ADDS     R0,R0,#+1
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   0000009E   0x8008             STRH     R0,[R1, #+0]
     81                if(g_nMotorPulseSigma<=450+chainage)
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable5_9
   \   000000A4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000A8   0xF510 0x70E1      ADDS     R0,R0,#+450
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable5_10
   \   000000B0   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000B4   0x4288             CMP      R0,R1
   \   000000B6   0xDB2B             BLT.N    ??pit0_isr_3
     82                {
     83                  BufBegin=1;
   \   000000B8   0x2001             MOVS     R0,#+1
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable5_11
   \   000000BE   0x7008             STRB     R0,[R1, #+0]
     84                  ForB=1;
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable5_6
   \   000000C6   0x7008             STRB     R0,[R1, #+0]
     85                  gpio_ctrl(PORTC,4,1);//Brown//正
   \   000000C8   0x2201             MOVS     R2,#+1
   \   000000CA   0x2104             MOVS     R1,#+4
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable5_12  ;; 0x400ff080
   \   000000D0   0x.... 0x....      BL       gpio_ctrl
     86                  gpio_ctrl(PORTC,6,0);//Gray
   \   000000D4   0x2200             MOVS     R2,#+0
   \   000000D6   0x2106             MOVS     R1,#+6
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable5_12  ;; 0x400ff080
   \   000000DC   0x.... 0x....      BL       gpio_ctrl
     87                  PID_SetPoint(1000);
   \   000000E0   0xF44F 0x707A      MOV      R0,#+1000
   \   000000E4   0x.... 0x....      BL       PID_SetPoint
     88                  PID_SetKpid(2.2,0.5,0);
   \   000000E8   0x2200             MOVS     R2,#+0
   \   000000EA   0xF05F 0x517C      MOVS     R1,#+1056964608
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable5_13  ;; 0x400ccccd
   \   000000F2   0x.... 0x....      BL       PID_SetKpid
     89                  PwmDuty=(int16)(IncPID_Calculate(YBack))+5200;
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable5_14
   \   000000FA   0x6800             LDR      R0,[R0, #+0]
   \   000000FC   0x.... 0x....      BL       IncPID_Calculate
   \   00000100   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000102   0xF500 0x50A0      ADD      R0,R0,#+5120
   \   00000106   0x3050             ADDS     R0,R0,#+80
   \   00000108   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000010C   0x6008             STR      R0,[R1, #+0]
   \   0000010E   0xE031             B.N      ??pit0_isr_4
     90                }
     91                else if(g_nMotorPulseSigma>450+chainage)
   \                     ??pit0_isr_3: (+1)
   \   00000110   0x.... 0x....      LDR.W    R0,??DataTable5_9
   \   00000114   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000118   0xF510 0x70E1      ADDS     R0,R0,#+450
   \   0000011C   0x.... 0x....      LDR.W    R1,??DataTable5_10
   \   00000120   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000124   0x4288             CMP      R0,R1
   \   00000126   0xDA25             BGE.N    ??pit0_isr_4
     92                {
     93                  ForB=0;
   \   00000128   0x2000             MOVS     R0,#+0
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable5_6
   \   0000012E   0x7008             STRB     R0,[R1, #+0]
     94                  gpio_ctrl(PORTC,4,0);//Brown//反
   \   00000130   0x2200             MOVS     R2,#+0
   \   00000132   0x2104             MOVS     R1,#+4
   \   00000134   0x.... 0x....      LDR.W    R0,??DataTable5_12  ;; 0x400ff080
   \   00000138   0x.... 0x....      BL       gpio_ctrl
     95                  gpio_ctrl(PORTC,6,1);//Gray
   \   0000013C   0x2201             MOVS     R2,#+1
   \   0000013E   0x2106             MOVS     R1,#+6
   \   00000140   0x.... 0x....      LDR.W    R0,??DataTable5_12  ;; 0x400ff080
   \   00000144   0x.... 0x....      BL       gpio_ctrl
     96                  PID_SetPoint(-1000);
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable5_15  ;; 0xfffffc18
   \   0000014C   0x.... 0x....      BL       PID_SetPoint
     97                  PID_SetKpid(2.2,0.5,0);
   \   00000150   0x2200             MOVS     R2,#+0
   \   00000152   0xF05F 0x517C      MOVS     R1,#+1056964608
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable5_13  ;; 0x400ccccd
   \   0000015A   0x.... 0x....      BL       PID_SetKpid
     98                  PwmDuty=(int16)(IncPID_Calculate(YBack))-4800;
   \   0000015E   0x.... 0x....      LDR.W    R0,??DataTable5_14
   \   00000162   0x6800             LDR      R0,[R0, #+0]
   \   00000164   0x.... 0x....      BL       IncPID_Calculate
   \   00000168   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000016A   0xF5B0 0x5096      SUBS     R0,R0,#+4800
   \   0000016E   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000172   0x6008             STR      R0,[R1, #+0]
     99                }
    100                //防过刹
    101                if(g_nMotorPulse<=1&&ForB==0)
   \                     ??pit0_isr_4: (+1)
   \   00000174   0x.... 0x....      LDR.W    R0,??DataTable5_16
   \   00000178   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000017C   0x2802             CMP      R0,#+2
   \   0000017E   0xDA16             BGE.N    ??pit0_isr_0
   \   00000180   0x.... 0x....      LDR.W    R0,??DataTable5_6
   \   00000184   0x7800             LDRB     R0,[R0, #+0]
   \   00000186   0x2800             CMP      R0,#+0
   \   00000188   0xD111             BNE.N    ??pit0_isr_0
    102                {
    103                  gpio_ctrl(PORTE,25,1);
   \   0000018A   0x2201             MOVS     R2,#+1
   \   0000018C   0x2119             MOVS     R1,#+25
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable5_7  ;; 0x400ff100
   \   00000192   0x.... 0x....      BL       gpio_ctrl
    104                  PwmDuty=0;
   \   00000196   0x2000             MOVS     R0,#+0
   \   00000198   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000019C   0x6008             STR      R0,[R1, #+0]
    105                  IntCnt=0;
   \   0000019E   0x2000             MOVS     R0,#+0
   \   000001A0   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   000001A4   0x8008             STRH     R0,[R1, #+0]
    106                  test_start=0;
   \   000001A6   0x2000             MOVS     R0,#+0
   \   000001A8   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   000001AC   0x7008             STRB     R0,[R1, #+0]
    107                }
    108              }
    109            }
    110            //复位-------------------------------------------------------
    111            if(MachineReset==1&&PB1_flag==0&&first==0)
   \                     ??pit0_isr_0: (+1)
   \   000001AE   0x.... 0x....      LDR.W    R0,??DataTable5_17
   \   000001B2   0x7800             LDRB     R0,[R0, #+0]
   \   000001B4   0x2801             CMP      R0,#+1
   \   000001B6   0xF040 0x80CE      BNE.W    ??pit0_isr_5
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable5_18
   \   000001BE   0x7800             LDRB     R0,[R0, #+0]
   \   000001C0   0x2800             CMP      R0,#+0
   \   000001C2   0xF040 0x80C8      BNE.W    ??pit0_isr_5
   \   000001C6   0x.... 0x....      LDR.W    R0,??DataTable5_4
   \   000001CA   0x7800             LDRB     R0,[R0, #+0]
   \   000001CC   0x2800             CMP      R0,#+0
   \   000001CE   0xF040 0x80C2      BNE.W    ??pit0_isr_5
    112            {
    113              IntCnt++;
   \   000001D2   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   000001D6   0x8800             LDRH     R0,[R0, #+0]
   \   000001D8   0x1C40             ADDS     R0,R0,#+1
   \   000001DA   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   000001DE   0x8008             STRH     R0,[R1, #+0]
    114              if(IntCnt==1)
   \   000001E0   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   000001E4   0x8800             LDRH     R0,[R0, #+0]
   \   000001E6   0x2801             CMP      R0,#+1
   \   000001E8   0xD10A             BNE.N    ??pit0_isr_6
    115              {
    116                PwmDuty=0;
   \   000001EA   0x2000             MOVS     R0,#+0
   \   000001EC   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   000001F0   0x6008             STR      R0,[R1, #+0]
    117                gpio_ctrl(PORTE,25,0);
   \   000001F2   0x2200             MOVS     R2,#+0
   \   000001F4   0x2119             MOVS     R1,#+25
   \   000001F6   0x.... 0x....      LDR.W    R0,??DataTable5_7  ;; 0x400ff100
   \   000001FA   0x.... 0x....      BL       gpio_ctrl
   \   000001FE   0xE0AA             B.N      ??pit0_isr_5
    118              }
    119              else if(IntCnt>1 && IntCnt<base)
   \                     ??pit0_isr_6: (+1)
   \   00000200   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   00000204   0x8800             LDRH     R0,[R0, #+0]
   \   00000206   0x2802             CMP      R0,#+2
   \   00000208   0xDB0C             BLT.N    ??pit0_isr_7
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   0000020E   0x8800             LDRH     R0,[R0, #+0]
   \   00000210   0x.... 0x....      LDR.W    R1,??DataTable5_8
   \   00000214   0x8809             LDRH     R1,[R1, #+0]
   \   00000216   0x4288             CMP      R0,R1
   \   00000218   0xD204             BCS.N    ??pit0_isr_7
    120                PwmDuty=0;
   \   0000021A   0x2000             MOVS     R0,#+0
   \   0000021C   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000220   0x6008             STR      R0,[R1, #+0]
   \   00000222   0xE098             B.N      ??pit0_isr_5
    121              else
    122              {
    123                IntCnt=base+1;
   \                     ??pit0_isr_7: (+1)
   \   00000224   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000228   0x8800             LDRH     R0,[R0, #+0]
   \   0000022A   0x1C40             ADDS     R0,R0,#+1
   \   0000022C   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   00000230   0x8008             STRH     R0,[R1, #+0]
    124                if(g_nMotorPulseSigma>=-220)
   \   00000232   0x.... 0x....      LDR.W    R0,??DataTable5_10
   \   00000236   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000023A   0xF110 0x0FDC      CMN      R0,#+220
   \   0000023E   0xDB27             BLT.N    ??pit0_isr_8
    125                {
    126                  FB=1;
   \   00000240   0x2001             MOVS     R0,#+1
   \   00000242   0x.... 0x....      LDR.W    R1,??DataTable5_19
   \   00000246   0x7008             STRB     R0,[R1, #+0]
    127                  gpio_ctrl(PORTC,4,0);//Brown//反
   \   00000248   0x2200             MOVS     R2,#+0
   \   0000024A   0x2104             MOVS     R1,#+4
   \   0000024C   0x.... 0x....      LDR.W    R0,??DataTable5_12  ;; 0x400ff080
   \   00000250   0x.... 0x....      BL       gpio_ctrl
    128                  gpio_ctrl(PORTC,6,1);//Gray
   \   00000254   0x2201             MOVS     R2,#+1
   \   00000256   0x2106             MOVS     R1,#+6
   \   00000258   0x.... 0x....      LDR.W    R0,??DataTable5_12  ;; 0x400ff080
   \   0000025C   0x.... 0x....      BL       gpio_ctrl
    129                  PID_SetPoint(-100);
   \   00000260   0xF07F 0x0063      MVNS     R0,#+99
   \   00000264   0x.... 0x....      BL       PID_SetPoint
    130                  PID_SetKpid(1.8,0.9,0);
   \   00000268   0x2200             MOVS     R2,#+0
   \   0000026A   0x.... 0x....      LDR.W    R1,??DataTable5_20  ;; 0x3f666666
   \   0000026E   0x.... 0x....      LDR.W    R0,??DataTable5_21  ;; 0x3fe66666
   \   00000272   0x.... 0x....      BL       PID_SetKpid
    131                  PwmDuty=(int16)(IncPID_Calculate(YBack))-4350;
   \   00000276   0x.... 0x....      LDR.W    R0,??DataTable5_14
   \   0000027A   0x6800             LDR      R0,[R0, #+0]
   \   0000027C   0x.... 0x....      BL       IncPID_Calculate
   \   00000280   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000282   0x.... 0x....      LDR.W    R1,??DataTable5_22  ;; 0xffffef02
   \   00000286   0x1808             ADDS     R0,R1,R0
   \   00000288   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000028C   0x6008             STR      R0,[R1, #+0]
   \   0000028E   0xE04A             B.N      ??pit0_isr_9
    132                }
    133                else if(g_nMotorPulseSigma<=-220&&g_nMotorPulseSigma>=-350)
   \                     ??pit0_isr_8: (+1)
   \   00000290   0x.... 0x....      LDR.W    R0,??DataTable5_10
   \   00000294   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000298   0xF510 0x70AF      ADDS     R0,R0,#+350
   \   0000029C   0x2883             CMP      R0,#+131
   \   0000029E   0xD227             BCS.N    ??pit0_isr_10
    134                {
    135                  FB=1;
   \   000002A0   0x2001             MOVS     R0,#+1
   \   000002A2   0x.... 0x....      LDR.W    R1,??DataTable5_19
   \   000002A6   0x7008             STRB     R0,[R1, #+0]
    136                  gpio_ctrl(PORTC,4,0);//正
   \   000002A8   0x2200             MOVS     R2,#+0
   \   000002AA   0x2104             MOVS     R1,#+4
   \   000002AC   0x.... 0x....      LDR.W    R0,??DataTable5_12  ;; 0x400ff080
   \   000002B0   0x.... 0x....      BL       gpio_ctrl
    137                  gpio_ctrl(PORTC,6,1);
   \   000002B4   0x2201             MOVS     R2,#+1
   \   000002B6   0x2106             MOVS     R1,#+6
   \   000002B8   0x.... 0x....      LDR.W    R0,??DataTable5_12  ;; 0x400ff080
   \   000002BC   0x.... 0x....      BL       gpio_ctrl
    138                  PID_SetPoint(-2);
   \   000002C0   0xF07F 0x0001      MVNS     R0,#+1
   \   000002C4   0x.... 0x....      BL       PID_SetPoint
    139                  PID_SetKpid(1.8,0.1,0);
   \   000002C8   0x2200             MOVS     R2,#+0
   \   000002CA   0x.... 0x....      LDR.W    R1,??DataTable5_23  ;; 0x3dcccccd
   \   000002CE   0x.... 0x....      LDR.W    R0,??DataTable5_21  ;; 0x3fe66666
   \   000002D2   0x.... 0x....      BL       PID_SetKpid
    140                  PwmDuty=(int16)(IncPID_Calculate(g_nMotorPulse))-4000;
   \   000002D6   0x.... 0x....      LDR.W    R0,??DataTable5_16
   \   000002DA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002DE   0x.... 0x....      BL       IncPID_Calculate
   \   000002E2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000002E4   0xF5B0 0x607A      SUBS     R0,R0,#+4000
   \   000002E8   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   000002EC   0x6008             STR      R0,[R1, #+0]
   \   000002EE   0xE01A             B.N      ??pit0_isr_9
    141                }
    142                else if(g_nMotorPulseSigma<=-350)
   \                     ??pit0_isr_10: (+1)
   \   000002F0   0x.... 0x....      LDR.W    R0,??DataTable5_10
   \   000002F4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002F8   0xF47F 0x71AE      MVNS     R1,#+348
   \   000002FC   0x4288             CMP      R0,R1
   \   000002FE   0xDA12             BGE.N    ??pit0_isr_9
    143                {
    144                  FB=0;
   \   00000300   0x2000             MOVS     R0,#+0
   \   00000302   0x.... 0x....      LDR.W    R1,??DataTable5_19
   \   00000306   0x7008             STRB     R0,[R1, #+0]
    145                  gpio_ctrl(PORTC,4,1);//正
   \   00000308   0x2201             MOVS     R2,#+1
   \   0000030A   0x2104             MOVS     R1,#+4
   \   0000030C   0x.... 0x....      LDR.W    R0,??DataTable5_12  ;; 0x400ff080
   \   00000310   0x.... 0x....      BL       gpio_ctrl
    146                  gpio_ctrl(PORTC,6,0);
   \   00000314   0x2200             MOVS     R2,#+0
   \   00000316   0x2106             MOVS     R1,#+6
   \   00000318   0x....             LDR.N    R0,??DataTable5_12  ;; 0x400ff080
   \   0000031A   0x.... 0x....      BL       gpio_ctrl
    147                  PwmDuty=-7000;
   \   0000031E   0x.... 0x....      LDR.W    R0,??DataTable5_24  ;; 0xffffe4a8
   \   00000322   0x....             LDR.N    R1,??DataTable5_1
   \   00000324   0x6008             STR      R0,[R1, #+0]
    148                }
    149                //防过刹
    150                if(g_nMotorPulse>=-1&&FB==0)
   \                     ??pit0_isr_9: (+1)
   \   00000326   0x....             LDR.N    R0,??DataTable5_16
   \   00000328   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000032C   0xF110 0x0F01      CMN      R0,#+1
   \   00000330   0xDB11             BLT.N    ??pit0_isr_5
   \   00000332   0x....             LDR.N    R0,??DataTable5_19
   \   00000334   0x7800             LDRB     R0,[R0, #+0]
   \   00000336   0x2800             CMP      R0,#+0
   \   00000338   0xD10D             BNE.N    ??pit0_isr_5
    151                {
    152                  gpio_ctrl(PORTE,25,1);
   \   0000033A   0x2201             MOVS     R2,#+1
   \   0000033C   0x2119             MOVS     R1,#+25
   \   0000033E   0x....             LDR.N    R0,??DataTable5_7  ;; 0x400ff100
   \   00000340   0x.... 0x....      BL       gpio_ctrl
    153                  PwmDuty=0;
   \   00000344   0x2000             MOVS     R0,#+0
   \   00000346   0x....             LDR.N    R1,??DataTable5_1
   \   00000348   0x6008             STR      R0,[R1, #+0]
    154                  IntCnt=0;
   \   0000034A   0x2000             MOVS     R0,#+0
   \   0000034C   0x....             LDR.N    R1,??DataTable5_5
   \   0000034E   0x8008             STRH     R0,[R1, #+0]
    155                  MachineReset=0;
   \   00000350   0x2000             MOVS     R0,#+0
   \   00000352   0x....             LDR.N    R1,??DataTable5_17
   \   00000354   0x7008             STRB     R0,[R1, #+0]
    156                }
    157              }
    158            }
    159            
    160            //中断测试--------------------
    161            if(PB1==1)
   \                     ??pit0_isr_5: (+1)
   \   00000356   0x....             LDR.N    R0,??DataTable5_25
   \   00000358   0x7800             LDRB     R0,[R0, #+0]
   \   0000035A   0x2801             CMP      R0,#+1
   \   0000035C   0xD125             BNE.N    ??pit0_isr_11
    162            {
    163              PB1=0;
   \   0000035E   0x2000             MOVS     R0,#+0
   \   00000360   0x....             LDR.N    R1,??DataTable5_25
   \   00000362   0x7008             STRB     R0,[R1, #+0]
    164              PE24_flag=0;
   \   00000364   0x2000             MOVS     R0,#+0
   \   00000366   0x....             LDR.N    R1,??DataTable5_3
   \   00000368   0x7008             STRB     R0,[R1, #+0]
    165              PB1_flag=1;
   \   0000036A   0x2001             MOVS     R0,#+1
   \   0000036C   0x....             LDR.N    R1,??DataTable5_18
   \   0000036E   0x7008             STRB     R0,[R1, #+0]
    166              StepOk=1;
   \   00000370   0x2001             MOVS     R0,#+1
   \   00000372   0x....             LDR.N    R1,??DataTable5_26
   \   00000374   0x7008             STRB     R0,[R1, #+0]
    167              disable_irq(88);
   \   00000376   0x2058             MOVS     R0,#+88
   \   00000378   0x.... 0x....      BL       disable_irq
    168              enable_irq(91);
   \   0000037C   0x205B             MOVS     R0,#+91
   \   0000037E   0x.... 0x....      BL       enable_irq
    169              //---------
    170              BufBegin=0;
   \   00000382   0x2000             MOVS     R0,#+0
   \   00000384   0x....             LDR.N    R1,??DataTable5_11
   \   00000386   0x7008             STRB     R0,[R1, #+0]
    171              MachineReset=0;
   \   00000388   0x2000             MOVS     R0,#+0
   \   0000038A   0x....             LDR.N    R1,??DataTable5_17
   \   0000038C   0x7008             STRB     R0,[R1, #+0]
    172              slow=0;
   \   0000038E   0x2000             MOVS     R0,#+0
   \   00000390   0x....             LDR.N    R1,??DataTable5_27
   \   00000392   0x7008             STRB     R0,[R1, #+0]
    173              IntCnt=0;
   \   00000394   0x2000             MOVS     R0,#+0
   \   00000396   0x....             LDR.N    R1,??DataTable5_5
   \   00000398   0x8008             STRH     R0,[R1, #+0]
    174              PwmDuty=0; 
   \   0000039A   0x2000             MOVS     R0,#+0
   \   0000039C   0x....             LDR.N    R1,??DataTable5_1
   \   0000039E   0x6008             STR      R0,[R1, #+0]
    175              gpio_ctrl(PORTE,25,1);
   \   000003A0   0x2201             MOVS     R2,#+1
   \   000003A2   0x2119             MOVS     R1,#+25
   \   000003A4   0x....             LDR.N    R0,??DataTable5_7  ;; 0x400ff100
   \   000003A6   0x.... 0x....      BL       gpio_ctrl
    176            }
    177            if(PE24==1)
   \                     ??pit0_isr_11: (+1)
   \   000003AA   0x....             LDR.N    R0,??DataTable5_28
   \   000003AC   0x7800             LDRB     R0,[R0, #+0]
   \   000003AE   0x2801             CMP      R0,#+1
   \   000003B0   0xD11C             BNE.N    ??pit0_isr_12
    178            {
    179              PE24=0;
   \   000003B2   0x2000             MOVS     R0,#+0
   \   000003B4   0x....             LDR.N    R1,??DataTable5_28
   \   000003B6   0x7008             STRB     R0,[R1, #+0]
    180              PE24_flag=1;
   \   000003B8   0x2001             MOVS     R0,#+1
   \   000003BA   0x....             LDR.N    R1,??DataTable5_3
   \   000003BC   0x7008             STRB     R0,[R1, #+0]
    181              PB1_flag=0;
   \   000003BE   0x2000             MOVS     R0,#+0
   \   000003C0   0x....             LDR.N    R1,??DataTable5_18
   \   000003C2   0x7008             STRB     R0,[R1, #+0]
    182              disable_irq(91);
   \   000003C4   0x205B             MOVS     R0,#+91
   \   000003C6   0x.... 0x....      BL       disable_irq
    183              enable_irq(88);
   \   000003CA   0x2058             MOVS     R0,#+88
   \   000003CC   0x.... 0x....      BL       enable_irq
    184              //---------
    185              IntCnt=0;
   \   000003D0   0x2000             MOVS     R0,#+0
   \   000003D2   0x....             LDR.N    R1,??DataTable5_5
   \   000003D4   0x8008             STRH     R0,[R1, #+0]
    186              PwmDuty=0;
   \   000003D6   0x2000             MOVS     R0,#+0
   \   000003D8   0x....             LDR.N    R1,??DataTable5_1
   \   000003DA   0x6008             STR      R0,[R1, #+0]
    187              gpio_ctrl(PORTE,25,1);
   \   000003DC   0x2201             MOVS     R2,#+1
   \   000003DE   0x2119             MOVS     R1,#+25
   \   000003E0   0x....             LDR.N    R0,??DataTable5_7  ;; 0x400ff100
   \   000003E2   0x.... 0x....      BL       gpio_ctrl
    188              test_start=0;
   \   000003E6   0x2000             MOVS     R0,#+0
   \   000003E8   0x....             LDR.N    R1,??DataTable5_2
   \   000003EA   0x7008             STRB     R0,[R1, #+0]
    189            }
    190            
    191            //限幅-------------------------------------------------------------
    192            if(PwmDuty>=9999) PwmDuty=9999;
   \                     ??pit0_isr_12: (+1)
   \   000003EC   0x....             LDR.N    R0,??DataTable5_1
   \   000003EE   0x6800             LDR      R0,[R0, #+0]
   \   000003F0   0xF242 0x710F      MOVW     R1,#+9999
   \   000003F4   0x4288             CMP      R0,R1
   \   000003F6   0xDB03             BLT.N    ??pit0_isr_13
   \   000003F8   0xF242 0x700F      MOVW     R0,#+9999
   \   000003FC   0x....             LDR.N    R1,??DataTable5_1
   \   000003FE   0x6008             STR      R0,[R1, #+0]
    193            if(PwmDuty<=-9999) PwmDuty=-9999;
   \                     ??pit0_isr_13: (+1)
   \   00000400   0x....             LDR.N    R0,??DataTable5_1
   \   00000402   0x6800             LDR      R0,[R0, #+0]
   \   00000404   0x....             LDR.N    R1,??DataTable5_29  ;; 0xffffd8f2
   \   00000406   0x4288             CMP      R0,R1
   \   00000408   0xDA02             BGE.N    ??pit0_isr_14
   \   0000040A   0x....             LDR.N    R0,??DataTable5_30  ;; 0xffffd8f1
   \   0000040C   0x....             LDR.N    R1,??DataTable5_1
   \   0000040E   0x6008             STR      R0,[R1, #+0]
    194            
    195            //PWM矫正
    196            if(PwmDuty<0) 
   \                     ??pit0_isr_14: (+1)
   \   00000410   0x....             LDR.N    R0,??DataTable5_1
   \   00000412   0x6800             LDR      R0,[R0, #+0]
   \   00000414   0x2800             CMP      R0,#+0
   \   00000416   0xD505             BPL.N    ??pit0_isr_15
    197              Duty=-PwmDuty;
   \   00000418   0x....             LDR.N    R0,??DataTable5_1
   \   0000041A   0x6800             LDR      R0,[R0, #+0]
   \   0000041C   0x4240             RSBS     R0,R0,#+0
   \   0000041E   0x....             LDR.N    R1,??DataTable5_31
   \   00000420   0x6008             STR      R0,[R1, #+0]
   \   00000422   0xE003             B.N      ??pit0_isr_16
    198            else
    199              Duty=PwmDuty;
   \                     ??pit0_isr_15: (+1)
   \   00000424   0x....             LDR.N    R0,??DataTable5_1
   \   00000426   0x6800             LDR      R0,[R0, #+0]
   \   00000428   0x....             LDR.N    R1,??DataTable5_31
   \   0000042A   0x6008             STR      R0,[R1, #+0]
    200            
    201            //物理输出
    202            FTM_PWM_ChangeDuty(0,2,Duty);
   \                     ??pit0_isr_16: (+1)
   \   0000042C   0x....             LDR.N    R0,??DataTable5_31
   \   0000042E   0x6802             LDR      R2,[R0, #+0]
   \   00000430   0x2102             MOVS     R1,#+2
   \   00000432   0x2000             MOVS     R0,#+0
   \   00000434   0x.... 0x....      BL       FTM_PWM_ChangeDuty
    203            
    204            //消抖-----
    205            if(GpioIntFlag==1)
   \   00000438   0x....             LDR.N    R0,??DataTable5_32
   \   0000043A   0x7800             LDRB     R0,[R0, #+0]
   \   0000043C   0x2801             CMP      R0,#+1
   \   0000043E   0xD10E             BNE.N    ??pit0_isr_17
    206            {
    207              if(GpioIntCnt++>1000)
   \   00000440   0x....             LDR.N    R0,??DataTable5_33
   \   00000442   0x8800             LDRH     R0,[R0, #+0]
   \   00000444   0x1C41             ADDS     R1,R0,#+1
   \   00000446   0x....             LDR.N    R2,??DataTable5_33
   \   00000448   0x8011             STRH     R1,[R2, #+0]
   \   0000044A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000044C   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000450   0xDD05             BLE.N    ??pit0_isr_17
    208              {
    209                GpioIntFlag=0;
   \   00000452   0x2000             MOVS     R0,#+0
   \   00000454   0x....             LDR.N    R1,??DataTable5_32
   \   00000456   0x7008             STRB     R0,[R1, #+0]
    210                GpioIntCnt=0;
   \   00000458   0x2000             MOVS     R0,#+0
   \   0000045A   0x....             LDR.N    R1,??DataTable5_33
   \   0000045C   0x8008             STRH     R0,[R1, #+0]
    211              }  
    212            }
    213            //5ms定时-----
    214            g_n1msEventCount++;
   \                     ??pit0_isr_17: (+1)
   \   0000045E   0x....             LDR.N    R0,??DataTable5_34
   \   00000460   0x7800             LDRB     R0,[R0, #+0]
   \   00000462   0x1C40             ADDS     R0,R0,#+1
   \   00000464   0x....             LDR.N    R1,??DataTable5_34
   \   00000466   0x7008             STRB     R0,[R1, #+0]
    215            switch(g_n1msEventCount)
   \   00000468   0x....             LDR.N    R0,??DataTable5_34
   \   0000046A   0x7800             LDRB     R0,[R0, #+0]
   \   0000046C   0x2801             CMP      R0,#+1
   \   0000046E   0xD007             BEQ.N    ??pit0_isr_18
   \   00000470   0xD314             BCC.N    ??pit0_isr_19
   \   00000472   0x2803             CMP      R0,#+3
   \   00000474   0xD00D             BEQ.N    ??pit0_isr_20
   \   00000476   0xD306             BCC.N    ??pit0_isr_21
   \   00000478   0x2805             CMP      R0,#+5
   \   0000047A   0xD00C             BEQ.N    ??pit0_isr_22
   \   0000047C   0xD30A             BCC.N    ??pit0_isr_23
   \   0000047E   0xE00D             B.N      ??pit0_isr_19
    216            {
    217            case 1:
    218              GetMotorPulse();
   \                     ??pit0_isr_18: (+1)
   \   00000480   0x.... 0x....      BL       GetMotorPulse
    219              break;
   \   00000484   0xE00A             B.N      ??pit0_isr_19
    220            case 2:
    221              BVCnt++;
   \                     ??pit0_isr_21: (+1)
   \   00000486   0x....             LDR.N    R0,??DataTable5_35
   \   00000488   0x8800             LDRH     R0,[R0, #+0]
   \   0000048A   0x1C40             ADDS     R0,R0,#+1
   \   0000048C   0x....             LDR.N    R1,??DataTable5_35
   \   0000048E   0x8008             STRH     R0,[R1, #+0]
    222              break;
   \   00000490   0xE004             B.N      ??pit0_isr_19
    223            case 3: 
    224              break;  
   \                     ??pit0_isr_20: (+1)
   \   00000492   0xE003             B.N      ??pit0_isr_19
    225            case 4:      
    226              break;
   \                     ??pit0_isr_23: (+1)
   \   00000494   0xE002             B.N      ??pit0_isr_19
    227            case 5:
    228              g_n1msEventCount = 0;
   \                     ??pit0_isr_22: (+1)
   \   00000496   0x2000             MOVS     R0,#+0
   \   00000498   0x....             LDR.N    R1,??DataTable5_34
   \   0000049A   0x7008             STRB     R0,[R1, #+0]
    229              break;
    230            }
    231            
    232            //电量警告
    233            if(BVCnt==200)
   \                     ??pit0_isr_19: (+1)
   \   0000049C   0x....             LDR.N    R0,??DataTable5_35
   \   0000049E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004A2   0x28C8             CMP      R0,#+200
   \   000004A4   0xD11F             BNE.N    ??pit0_isr_24
    234            {
    235              BVCnt=0;
   \   000004A6   0x2000             MOVS     R0,#+0
   \   000004A8   0x....             LDR.N    R1,??DataTable5_35
   \   000004AA   0x8008             STRH     R0,[R1, #+0]
    236              BatteryVoltage = hw_ad_ave(1,7,12,20);
   \   000004AC   0x2314             MOVS     R3,#+20
   \   000004AE   0x220C             MOVS     R2,#+12
   \   000004B0   0x2107             MOVS     R1,#+7
   \   000004B2   0x2001             MOVS     R0,#+1
   \   000004B4   0x.... 0x....      BL       hw_ad_ave
   \   000004B8   0x....             LDR.N    R1,??DataTable5_36
   \   000004BA   0x6008             STR      R0,[R1, #+0]
    237              if(BatteryVoltage<=500)
   \   000004BC   0x....             LDR.N    R0,??DataTable5_36
   \   000004BE   0x6800             LDR      R0,[R0, #+0]
   \   000004C0   0xF5B0 0x7FFA      CMP      R0,#+500
   \   000004C4   0xDC03             BGT.N    ??pit0_isr_25
    238                PowerLowFg=1;
   \   000004C6   0x2001             MOVS     R0,#+1
   \   000004C8   0x....             LDR.N    R1,??DataTable5_37
   \   000004CA   0x7008             STRB     R0,[R1, #+0]
   \   000004CC   0xE002             B.N      ??pit0_isr_26
    239              else
    240                PowerLowFg=0;
   \                     ??pit0_isr_25: (+1)
   \   000004CE   0x2000             MOVS     R0,#+0
   \   000004D0   0x....             LDR.N    R1,??DataTable5_37
   \   000004D2   0x7008             STRB     R0,[R1, #+0]
    241              
    242              if(PowerLowFg==1)
   \                     ??pit0_isr_26: (+1)
   \   000004D4   0x....             LDR.N    R0,??DataTable5_37
   \   000004D6   0x7800             LDRB     R0,[R0, #+0]
   \   000004D8   0x2801             CMP      R0,#+1
   \   000004DA   0xD104             BNE.N    ??pit0_isr_24
    243                  gpio_ctrl(PORTB,3,1);  
   \   000004DC   0x2201             MOVS     R2,#+1
   \   000004DE   0x2103             MOVS     R1,#+3
   \   000004E0   0x....             LDR.N    R0,??DataTable5_38  ;; 0x400ff040
   \   000004E2   0x.... 0x....      BL       gpio_ctrl
    244            }
    245              
    246            //中断处理
    247            PIT_TFLG(0)|=PIT_TFLG_TIF_MASK;          //清中断标志位
   \                     ??pit0_isr_24: (+1)
   \   000004E6   0x....             LDR.N    R0,??DataTable5_39  ;; 0x4003710c
   \   000004E8   0x6800             LDR      R0,[R0, #+0]
   \   000004EA   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000004EE   0x....             LDR.N    R1,??DataTable5_39  ;; 0x4003710c
   \   000004F0   0x6008             STR      R0,[R1, #+0]
    248            enable_pit_interrupt(0);                 //使能PIT中断
   \   000004F2   0x2000             MOVS     R0,#+0
   \   000004F4   0x.... 0x....      BL       enable_pit_interrupt
    249            EnableInterrupts;                        //开总中断
   \   000004F8   0xB662             CPSIE i
    250          }
   \   000004FA   0xBD01             POP      {R0,PC}          ;; return
    251          //--------------------------------------------
    252          //pit1中断服务函数

   \                                 In section .text, align 4, keep-with-next
    253          void pit1_isr(void)
    254          {
   \                     pit1_isr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    255            DisableInterrupts;
   \   00000002   0xB672             CPSID i
    256            
    257            if(pit1_cnt++>=1000) pit1_cnt=0;
   \   00000004   0x....             LDR.N    R0,??DataTable5_40
   \   00000006   0x8800             LDRH     R0,[R0, #+0]
   \   00000008   0x1C41             ADDS     R1,R0,#+1
   \   0000000A   0x....             LDR.N    R2,??DataTable5_40
   \   0000000C   0x8011             STRH     R1,[R2, #+0]
   \   0000000E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000010   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000014   0xDB02             BLT.N    ??pit1_isr_0
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR.N    R1,??DataTable5_40
   \   0000001A   0x8008             STRH     R0,[R1, #+0]
    258            
    259            PIT_TFLG(1)|=PIT_TFLG_TIF_MASK;          //清中断标志位
   \                     ??pit1_isr_0: (+1)
   \   0000001C   0x....             LDR.N    R0,??DataTable5_41  ;; 0x4003711c
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000024   0x....             LDR.N    R1,??DataTable5_41  ;; 0x4003711c
   \   00000026   0x6008             STR      R0,[R1, #+0]
    260            enable_pit_interrupt(1);                 //使能PIT中断
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x.... 0x....      BL       enable_pit_interrupt
    261            EnableInterrupts;                        //开总中断
   \   0000002E   0xB662             CPSIE i
    262          }
   \   00000030   0xBD01             POP      {R0,PC}          ;; return
    263          
    264          //-------------------------------------------

   \                                 In section .bss, align 4
    265          uint8 command_str[10];
   \                     command_str:
   \   00000000                      DS8 12

   \                                 In section .data, align 1
    266          uint8 analyse_over=1;
   \                     analyse_over:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 1
    267          uint8 cnt=0;
   \                     cnt:
   \   00000000                      DS8 1
    268          //串口3数据接收中断 

   \                                 In section .text, align 4, keep-with-next
    269          void uart3_isr(void)
    270          {
    271              //uint8 ch;
    272              DisableInterrupts;		//关总中断
   \                     uart3_isr: (+1)
   \   00000000   0xB672             CPSID i
    273              /*
    274              //接收一个字节数据并回发
    275              if(uart_re1(UART3,&ch))
    276                uart_send1(UART3,ch);
    277              */
    278              if(analyse_over==1)
   \   00000002   0x....             LDR.N    R0,??DataTable5_42
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2801             CMP      R0,#+1
   \   00000008   0xD11C             BNE.N    ??uart3_isr_0
    279              {
    280                if((UART_S1_REG(UART3) & UART_S1_RDRF_MASK)!= 0)
   \   0000000A   0x....             LDR.N    R0,??DataTable5_43  ;; 0x4006d004
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x0680             LSLS     R0,R0,#+26
   \   00000010   0xD518             BPL.N    ??uart3_isr_0
    281                {
    282                  command_str[cnt++]=UART_D_REG(UART3);
   \   00000012   0x....             LDR.N    R0,??DataTable5_44  ;; 0x4006d007
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x....             LDR.N    R1,??DataTable5_45
   \   00000018   0x7809             LDRB     R1,[R1, #+0]
   \   0000001A   0x....             LDR.N    R2,??DataTable5_46
   \   0000001C   0x5488             STRB     R0,[R1, R2]
   \   0000001E   0x....             LDR.N    R0,??DataTable5_45
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0x1C40             ADDS     R0,R0,#+1
   \   00000024   0x....             LDR.N    R1,??DataTable5_45
   \   00000026   0x7008             STRB     R0,[R1, #+0]
    283                  if(command_str[cnt-1]=='*')
   \   00000028   0x....             LDR.N    R0,??DataTable5_45
   \   0000002A   0x7800             LDRB     R0,[R0, #+0]
   \   0000002C   0x....             LDR.N    R1,??DataTable5_46
   \   0000002E   0x1840             ADDS     R0,R0,R1
   \   00000030   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000034   0x282A             CMP      R0,#+42
   \   00000036   0xD105             BNE.N    ??uart3_isr_0
    284                  {
    285                    analyse_over=0;
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x....             LDR.N    R1,??DataTable5_42
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
    286                    cnt=0;
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x....             LDR.N    R1,??DataTable5_45
   \   00000042   0x7008             STRB     R0,[R1, #+0]
    287                  }
    288                }
    289              }
    290              EnableInterrupts;		//开总中断
   \                     ??uart3_isr_0: (+1)
   \   00000044   0xB662             CPSIE i
    291          }
   \   00000046   0x4770             BX       LR               ;; return
    292          
    293          //--------------------------------------------------

   \                                 In section .bss, align 4
    294          int FTM_Count=0;
   \                     FTM_Count:
   \   00000000                      DS8 4
    295          //FTM0中断

   \                                 In section .text, align 2, keep-with-next
    296          void FTM1_isr()
    297          {
    298            FTM_Count++;
   \                     FTM1_isr: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable5_47
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x1C40             ADDS     R0,R0,#+1
   \   00000006   0x....             LDR.N    R1,??DataTable5_47
   \   00000008   0x6008             STR      R0,[R1, #+0]
    299            FTM_SC_REG(FTM1_BASE_PTR)&=~FTM_SC_TOF_MASK;
   \   0000000A   0x....             LDR.N    R0,??DataTable5_48  ;; 0x40039000
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF030 0x0080      BICS     R0,R0,#0x80
   \   00000012   0x....             LDR.N    R1,??DataTable5_48  ;; 0x40039000
   \   00000014   0x6008             STR      R0,[R1, #+0]
    300          }
   \   00000016   0x4770             BX       LR               ;; return
    301          
    302          //---------------------------------------------------
    303          //PB1中断服务函数

   \                                 In section .text, align 4, keep-with-next
    304          void PB1_isr(void)
    305          {
    306              DisableInterrupts;  
   \                     PB1_isr: (+1)
   \   00000000   0xB672             CPSID i
    307          
    308              PORTB_ISFR=1<<1;   // Clear the PTB1 interrupt flags
   \   00000002   0x2002             MOVS     R0,#+2
   \   00000004   0x....             LDR.N    R1,??DataTable5_49  ;; 0x4004a0a0
   \   00000006   0x6008             STR      R0,[R1, #+0]
    309          
    310              if(GpioIntFlag==0)
   \   00000008   0x....             LDR.N    R0,??DataTable5_32
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD104             BNE.N    ??PB1_isr_0
    311                PB1++;  
   \   00000010   0x....             LDR.N    R0,??DataTable5_25
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x....             LDR.N    R1,??DataTable5_25
   \   00000018   0x7008             STRB     R0,[R1, #+0]
    312              
    313              GpioIntFlag=1;
   \                     ??PB1_isr_0: (+1)
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x....             LDR.N    R1,??DataTable5_32
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
    314             
    315              EnableInterrupts;	
   \   00000020   0xB662             CPSIE i
    316          }
   \   00000022   0x4770             BX       LR               ;; return
    317          
    318          //--------------------------------------------
    319          //PE24中断服务函数---为什么PA18/PA19不行

   \                                 In section .text, align 4, keep-with-next
    320          void PE24_isr(void)
    321          {
    322              DisableInterrupts;  
   \                     PE24_isr: (+1)
   \   00000000   0xB672             CPSID i
    323              
    324              PORTE_ISFR=1<<24;   // Clear the PE24 interrupt flags       
   \   00000002   0xF05F 0x7080      MOVS     R0,#+16777216
   \   00000006   0x....             LDR.N    R1,??DataTable5_50  ;; 0x4004d0a0
   \   00000008   0x6008             STR      R0,[R1, #+0]
    325              
    326              if(GpioIntFlag==0)
   \   0000000A   0x....             LDR.N    R0,??DataTable5_32
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD104             BNE.N    ??PE24_isr_0
    327                PE24++;
   \   00000012   0x....             LDR.N    R0,??DataTable5_28
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x1C40             ADDS     R0,R0,#+1
   \   00000018   0x....             LDR.N    R1,??DataTable5_28
   \   0000001A   0x7008             STRB     R0,[R1, #+0]
    328              
    329              GpioIntFlag=1;
   \                     ??PE24_isr_0: (+1)
   \   0000001C   0x2001             MOVS     R0,#+1
   \   0000001E   0x....             LDR.N    R1,??DataTable5_32
   \   00000020   0x7008             STRB     R0,[R1, #+0]
    330              
    331              EnableInterrupts;	
   \   00000022   0xB662             CPSIE i
    332          }
   \   00000024   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     g_n1msEventFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     PwmDuty

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     test_start

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     PE24_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     first

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     IntCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     ForB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     base

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     chainage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x........         DC32     g_nMotorPulseSigma

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x........         DC32     BufBegin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x400CCCCD         DC32     0x400ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x........         DC32     YBack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_15:
   \   00000000   0xFFFFFC18         DC32     0xfffffc18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_16:
   \   00000000   0x........         DC32     g_nMotorPulse

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_17:
   \   00000000   0x........         DC32     MachineReset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_18:
   \   00000000   0x........         DC32     PB1_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_19:
   \   00000000   0x........         DC32     FB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_20:
   \   00000000   0x3F666666         DC32     0x3f666666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_21:
   \   00000000   0x3FE66666         DC32     0x3fe66666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_22:
   \   00000000   0xFFFFEF02         DC32     0xffffef02

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_23:
   \   00000000   0x3DCCCCCD         DC32     0x3dcccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_24:
   \   00000000   0xFFFFE4A8         DC32     0xffffe4a8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_25:
   \   00000000   0x........         DC32     PB1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_26:
   \   00000000   0x........         DC32     StepOk

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_27:
   \   00000000   0x........         DC32     slow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_28:
   \   00000000   0x........         DC32     PE24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_29:
   \   00000000   0xFFFFD8F2         DC32     0xffffd8f2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_30:
   \   00000000   0xFFFFD8F1         DC32     0xffffd8f1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_31:
   \   00000000   0x........         DC32     Duty

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_32:
   \   00000000   0x........         DC32     GpioIntFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_33:
   \   00000000   0x........         DC32     GpioIntCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_34:
   \   00000000   0x........         DC32     g_n1msEventCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_35:
   \   00000000   0x........         DC32     BVCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_36:
   \   00000000   0x........         DC32     BatteryVoltage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_37:
   \   00000000   0x........         DC32     PowerLowFg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_38:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_39:
   \   00000000   0x4003710C         DC32     0x4003710c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_40:
   \   00000000   0x........         DC32     pit1_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_41:
   \   00000000   0x4003711C         DC32     0x4003711c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_42:
   \   00000000   0x........         DC32     analyse_over

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_43:
   \   00000000   0x4006D004         DC32     0x4006d004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_44:
   \   00000000   0x4006D007         DC32     0x4006d007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_45:
   \   00000000   0x........         DC32     cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_46:
   \   00000000   0x........         DC32     command_str

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_47:
   \   00000000   0x........         DC32     FTM_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_48:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_49:
   \   00000000   0x4004A0A0         DC32     0x4004a0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_50:
   \   00000000   0x4004D0A0         DC32     0x4004d0a0
    333          
    334          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   FTM1_isr
       0   PB1_isr
       0   PE24_isr
       8   pit0_isr
         8   -> FTM_PWM_ChangeDuty
         8   -> GetMotorPulse
         8   -> IncPID_Calculate
         8   -> PID_SetKpid
         8   -> PID_SetPoint
         8   -> disable_irq
         8   -> enable_irq
         8   -> enable_pit_interrupt
         8   -> gpio_ctrl
         8   -> hw_ad_ave
       8   pit1_isr
         8   -> enable_pit_interrupt
       0   uart3_isr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_15
       4  ??DataTable5_16
       4  ??DataTable5_17
       4  ??DataTable5_18
       4  ??DataTable5_19
       4  ??DataTable5_2
       4  ??DataTable5_20
       4  ??DataTable5_21
       4  ??DataTable5_22
       4  ??DataTable5_23
       4  ??DataTable5_24
       4  ??DataTable5_25
       4  ??DataTable5_26
       4  ??DataTable5_27
       4  ??DataTable5_28
       4  ??DataTable5_29
       4  ??DataTable5_3
       4  ??DataTable5_30
       4  ??DataTable5_31
       4  ??DataTable5_32
       4  ??DataTable5_33
       4  ??DataTable5_34
       4  ??DataTable5_35
       4  ??DataTable5_36
       4  ??DataTable5_37
       4  ??DataTable5_38
       4  ??DataTable5_39
       4  ??DataTable5_4
       4  ??DataTable5_40
       4  ??DataTable5_41
       4  ??DataTable5_42
       4  ??DataTable5_43
       4  ??DataTable5_44
       4  ??DataTable5_45
       4  ??DataTable5_46
       4  ??DataTable5_47
       4  ??DataTable5_48
       4  ??DataTable5_49
       4  ??DataTable5_5
       4  ??DataTable5_50
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
       2  BVCnt
       4  BatteryVoltage
       1  BufBegin
       4  Duty
       1  FB
      24  FTM1_isr
       4  FTM_Count
       1  ForB
       2  GpioIntCnt
       1  GpioIntFlag
       2  IntCnt
       1  PB1
       1  PB1_flag
      36  PB1_isr
       1  PE24
       1  PE24_flag
      38  PE24_isr
       1  PowerLowFg
       2  PulseControl
       4  PwmBack
       4  PwmDuty
       4  PwmMid
       4  PwmSet
       4  PwmStart
       4  PwmStop
       2  ResetPulseSection
       2  SecBack1
       2  SecBack2
       2  SecMid
       2  SecStart
       2  SecStop
       1  StepOk
       1  analyse_over
       2  base
       2  chainage
       1  cnt
      12  command_str
       1  dir
       1  g_n1msEventCount
       1  g_n1msEventFlag
      80  off_y
    1276  pit0_isr
       2  pit1_cnt
      50  pit1_isr
       1  slow
      72  uart3_isr

 
   141 bytes in section .bss
    29 bytes in section .data
 1 700 bytes in section .text
 
 1 700 bytes of CODE memory
   170 bytes of DATA memory

Errors: none
Warnings: none
