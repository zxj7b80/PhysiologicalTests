###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        08/Apr/2015  15:15:25
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\Administrator\Desktop\PhysiologicalTests\src\Sources\C\Component_C\LQ12864.c
#    Command line =  
#        C:\Users\Administrator\Desktop\PhysiologicalTests\src\Sources\C\Component_C\LQ12864.c
#        -D IAR -D TWR_K60N512 -lCN
#        C:\Users\Administrator\Desktop\PhysiologicalTests\bin\Flash\List\ -lB
#        C:\Users\Administrator\Desktop\PhysiologicalTests\bin\Flash\List\ -o
#        C:\Users\Administrator\Desktop\PhysiologicalTests\bin\Flash\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\MyProgramFiles\iar for
#        arm v7.1\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\Administrator\Desktop\PhysiologicalTests\src\Sources\H\ -I
#        C:\Users\Administrator\Desktop\PhysiologicalTests\src\Sources\H\Component_H\
#        -I
#        C:\Users\Administrator\Desktop\PhysiologicalTests\src\Sources\H\Frame_H\
#        -Ol --use_c++_inline
#    List file    =  
#        C:\Users\Administrator\Desktop\PhysiologicalTests\bin\Flash\List\LQ12864.lst
#    Object file  =  
#        C:\Users\Administrator\Desktop\PhysiologicalTests\bin\Flash\Obj\LQ12864.o
#
###############################################################################

C:\Users\Administrator\Desktop\PhysiologicalTests\src\Sources\C\Component_C\LQ12864.c
      1          /********************************************
      2          龙丘MC9S12XS128多功能开发板 
      3          Designed by Chiu Sir
      4          E-mail:chiusir@yahoo.cn
      5          软件版本:V1.1
      6          最后更新:2011年9月18日
      7          相关信息参考下列地址：
      8          网站：  http://www.lqist.cn
      9          淘宝店：http://shop36265907.taobao.com
     10          ------------------------------------
     11          Code Warrior 5.0/1
     12          Target : MC9S12XS128
     13          Crystal: 16.000Mhz
     14          busclock:16.000MHz
     15          pllclock:32.000MHz    
     16           
     17          使用说明：
     18          OLED电源使用3.3V。   
     19          ----------------
     20          G    电源地
     21          3.3V 接3.3V电源
     22          D0   PORTA_PA14  
     23          D1   PORTA_PA15
     24          RST  PORTA_PA16 
     25          DC   PORTA_PA17
     26          CS   已接地，不用接
     27          ============================================
     28          OLED电源使用5V。   
     29          ----------------
     30          G    电源地
     31          3.3V 接5V电源，电源跟模块之间串接100欧姆电阻，并加3.3V钳位二极管
     32          D0   PORTA_PA14 单片机跟模块之间串接1k-3.3k电阻 
     33          D1   PORTA_PA15 单片机跟模块之间串接1k-3.3k电阻 
     34          RST  PORTA_PA16 单片机跟模块之间串接1k-3.3k电阻 
     35          DC   PORTA_PA17 单片机跟模块之间串接1k-3.3k电阻 
     36          CS   已接地，不用接     
     37          ============================================     
     38          如果用户使用的是5V单片机，请看用户手册，切勿烧毁模块！  
     39          ============================================*/
     40          #include "includes.h"
     41          #include "LQ12864.h"
     42          
     43          //GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(14));	//IO口输出低电平，亮
     44          //GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(14));	//IO口输出高电平，灭
     45          //GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(15));	//IO口输出低电平，亮
     46          //GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(15));	//IO口输出高电平，灭
     47          //GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(16));	//IO口输出低电平，亮
     48          //GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(16));	//IO口输出高电平，灭
     49          //GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(17));	//IO口输出低电平，亮
     50          //GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(17));	//IO口输出高电平，灭
     51          
     52          #define XLevelL		0x00
     53          #define XLevelH		0x10
     54          #define XLevel		((XLevelH&0x0F)*16+XLevelL)
     55          #define Max_Column	128
     56          #define Max_Row		  64
     57          #define	Brightness	0xCF 
     58          
     59          /*
     60          4线SPI使用说明：
     61          VBT 供内部DC-DC电压，3.3~4.3V，如果使用5V电压，为保险起见串一个100~500欧的电阻
     62          VCC 供内部逻辑电压 1.8~6V   
     63          GND 地
     64          
     65          BS0 低电平
     66          BS1 低电平
     67          BS2 低电平
     68          
     69          CS  片选管脚
     70          DC  命令数据选择管脚
     71          RES 模块复位管脚 
     72          D0（SCLK） ，时钟脚，由MCU控制
     73          D1（MOSI） ，主输出从输入数据脚，由MCU控制
     74          
     75          D2 悬空      
     76          D3-D7 ， 低电平 ， 也可悬空，但最好设为低电平
     77          RD  低电平 ，也可悬空，但最好设为低电平
     78          RW  低电平 ，也可悬空，但最好设为低电平
     79          RD  低电平 ，也可悬空，但最好设为低电平   
     80          */
     81          
     82          #define X_WIDTH 128
     83          #define Y_WIDTH 64
     84          //======================================

   \                                 In section .rodata, align 4
     85          const byte F6x8[][6] =
   \                     F6x8:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 7, 0, 7, 0, 0, 20, 127
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x00    
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F         
   \   00000015   0x14 0x7F          DC8 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 98, 100, 8, 19, 35, 0, 54
   \              0x14 0x00    
   \              0x24 0x2A    
   \              0x7F 0x2A    
   \              0x12 0x00    
   \              0x62 0x64    
   \              0x08 0x13    
   \              0x23 0x00    
   \              0x36         
   \   00000026   0x49 0x55          DC8 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28, 34, 65, 0, 0, 0, 65, 34
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x00    
   \              0x00 0x00    
   \              0x41 0x22    
   \   0000003A   0x1C 0x00          DC8 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8, 8, 0, 0, 0, 160, 96, 0
   \              0x00 0x14    
   \              0x08 0x3E    
   \              0x08 0x14    
   \              0x00 0x08    
   \              0x08 0x3E    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0xA0    
   \              0x60 0x00    
   \   0000004E   0x00 0x08          DC8 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32, 16, 8, 4, 2, 0, 62, 81
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51         
   \   00000063   0x49 0x45          DC8 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97, 81, 73, 70, 0, 33, 65
   \              0x3E 0x00    
   \              0x00 0x42    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x42 0x61    
   \              0x51 0x49    
   \              0x46 0x00    
   \              0x21 0x41    
   \   00000075   0x45 0x4B          DC8 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39, 69, 69, 69, 57, 0, 60
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27 0x45    
   \              0x45 0x45    
   \              0x39 0x00    
   \              0x3C         
   \   00000086   0x4A 0x49          DC8 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54, 73, 73, 73, 54, 0, 6, 73
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \              0x49 0x49    
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49         
   \   00000099   0x49 0x29          DC8 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86, 54, 0, 0, 0, 8, 20, 34
   \              0x1E 0x00    
   \              0x00 0x36    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x00 0x56    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22         
   \   000000AC   0x41 0x00          DC8 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34, 20, 8, 0, 2, 1, 81, 9
   \              0x00 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x00 0x00    
   \              0x41 0x22    
   \              0x14 0x08    
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09         
   \   000000BF   0x06 0x00          DC8 6, 0, 50, 73, 89, 81, 62, 0, 124, 18, 17, 18, 124, 0, 127, 73, 73
   \              0x32 0x49    
   \              0x59 0x51    
   \              0x3E 0x00    
   \              0x7C 0x12    
   \              0x11 0x12    
   \              0x7C 0x00    
   \              0x7F 0x49    
   \              0x49         
   \   000000D0   0x49 0x36          DC8 73, 54, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65, 34, 28, 0, 127, 73
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x22    
   \              0x00 0x7F    
   \              0x41 0x41    
   \              0x22 0x1C    
   \              0x00 0x7F    
   \              0x49         
   \   000000E1   0x49 0x49          DC8 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73, 73, 122, 0, 127, 8
   \              0x41 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x01 0x00    
   \              0x3E 0x41    
   \              0x49 0x49    
   \              0x7A 0x00    
   \              0x7F 0x08    
   \   000000F3   0x08 0x08          DC8 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65, 63, 1, 0, 127, 8
   \              0x7F 0x00    
   \              0x00 0x41    
   \              0x7F 0x41    
   \              0x00 0x00    
   \              0x20 0x40    
   \              0x41 0x3F    
   \              0x01 0x00    
   \              0x7F 0x08    
   \   00000105   0x14 0x22          DC8 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 12, 2, 127, 0, 127
   \              0x41 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x7F 0x02    
   \              0x0C 0x02    
   \              0x7F 0x00    
   \              0x7F         
   \   00000116   0x04 0x08          DC8 4, 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9, 9, 6, 0, 62, 65
   \              0x10 0x7F    
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x3E    
   \              0x00 0x7F    
   \              0x09 0x09    
   \              0x09 0x06    
   \              0x00 0x3E    
   \              0x41         
   \   00000129   0x51 0x21          DC8 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73, 73, 49, 0, 1, 1
   \              0x5E 0x00    
   \              0x7F 0x09    
   \              0x19 0x29    
   \              0x46 0x00    
   \              0x46 0x49    
   \              0x49 0x49    
   \              0x31 0x00    
   \              0x01 0x01    
   \   0000013B   0x7F 0x01          DC8 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64, 32, 31, 0, 63, 64
   \              0x01 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x1F 0x20    
   \              0x40 0x20    
   \              0x1F 0x00    
   \              0x3F 0x40    
   \   0000014D   0x38 0x40          DC8 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 7, 8, 112, 8, 7, 0, 97, 81, 73
   \              0x3F 0x00    
   \              0x63 0x14    
   \              0x08 0x14    
   \              0x63 0x00    
   \              0x07 0x08    
   \              0x70 0x08    
   \              0x07 0x00    
   \              0x61 0x51    
   \              0x49         
   \   00000160   0x45 0x43          DC8 69, 67, 0, 0, 127, 65, 65, 0, 0, 85, 42, 85, 42, 85, 0, 0, 65, 65
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x55    
   \              0x2A 0x55    
   \              0x2A 0x55    
   \              0x00 0x00    
   \              0x41 0x41    
   \   00000172   0x7F 0x00          DC8 127, 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64, 0, 0, 1, 2, 4, 0
   \              0x00 0x04    
   \              0x02 0x01    
   \              0x02 0x04    
   \              0x00 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x00    
   \   00000186   0x00 0x20          DC8 0, 32, 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0, 56, 68, 68, 68
   \              0x54 0x54    
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00 0x38    
   \              0x44 0x44    
   \              0x44         
   \   00000197   0x20 0x00          DC8 32, 0, 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24, 0, 8, 126, 9, 1
   \              0x38 0x44    
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18 0x00    
   \              0x08 0x7E    
   \              0x09 0x01    
   \   000001A9   0x02 0x00          DC8 2, 0, 24, 164, 164, 164, 124, 0, 127, 8, 4, 4, 120, 0, 0, 68, 125
   \              0x18 0xA4    
   \              0xA4 0xA4    
   \              0x7C 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x00 0x44    
   \              0x7D         
   \   000001BA   0x40 0x00          DC8 64, 0, 0, 64, 128, 132, 125, 0, 0, 127, 16, 40, 68, 0, 0, 0, 65
   \              0x00 0x40    
   \              0x80 0x84    
   \              0x7D 0x00    
   \              0x00 0x7F    
   \              0x10 0x28    
   \              0x44 0x00    
   \              0x00 0x00    
   \              0x41         
   \   000001CB   0x7F 0x40          DC8 127, 64, 0, 0, 124, 4, 24, 4, 120, 0, 124, 8, 4, 4, 120, 0, 56, 68
   \              0x00 0x00    
   \              0x7C 0x04    
   \              0x18 0x04    
   \              0x78 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x38 0x44    
   \   000001DD   0x44 0x44          DC8 68, 68, 56, 0, 252, 36, 36, 36, 24, 0, 24, 36, 36, 24, 252, 0, 124
   \              0x38 0x00    
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x18 0x00    
   \              0x18 0x24    
   \              0x24 0x18    
   \              0xFC 0x00    
   \              0x7C         
   \   000001EE   0x08 0x04          DC8 8, 4, 4, 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68, 64, 32, 0, 60, 64
   \              0x04 0x08    
   \              0x00 0x48    
   \              0x54 0x54    
   \              0x54 0x20    
   \              0x00 0x04    
   \              0x3F 0x44    
   \              0x40 0x20    
   \              0x00 0x3C    
   \              0x40         
   \   00000201   0x40 0x20          DC8 64, 32, 124, 0, 28, 32, 64, 32, 28, 0, 60, 64, 48, 64, 60, 0, 68
   \              0x7C 0x00    
   \              0x1C 0x20    
   \              0x40 0x20    
   \              0x1C 0x00    
   \              0x3C 0x40    
   \              0x30 0x40    
   \              0x3C 0x00    
   \              0x44         
   \   00000212   0x28 0x10          DC8 40, 16, 40, 68, 0, 28, 160, 160, 160, 124, 0, 68, 100, 84, 76, 68
   \              0x28 0x44    
   \              0x00 0x1C    
   \              0xA0 0xA0    
   \              0xA0 0x7C    
   \              0x00 0x44    
   \              0x64 0x54    
   \              0x4C 0x44    
   \   00000222   0x14 0x14          DC8 20, 20, 20, 20, 20, 20
   \              0x14 0x14    
   \              0x14 0x14    
     86          {
     87              { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
     88              { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
     89              { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
     90              { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
     91              { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
     92              { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
     93              { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
     94              { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
     95              { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
     96              { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
     97              { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
     98              { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
     99              { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
    100              { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
    101              { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
    102              { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
    103              { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
    104              { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
    105              { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
    106              { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
    107              { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
    108              { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
    109              { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
    110              { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
    111              { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
    112              { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
    113              { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
    114              { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
    115              { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
    116              { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
    117              { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
    118              { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
    119              { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
    120              { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
    121              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
    122              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
    123              { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
    124              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
    125              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
    126              { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
    127              { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
    128              { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
    129              { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
    130              { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
    131              { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
    132              { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
    133              { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
    134              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
    135              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
    136              { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
    137              { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
    138              { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
    139              { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
    140              { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
    141              { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
    142              { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
    143              { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
    144              { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
    145              { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
    146              { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
    147              { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
    148              { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
    149              { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
    150              { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
    151              { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
    152              { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
    153              { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
    154              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
    155              { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
    156              { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
    157              { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
    158              { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
    159              { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
    160              { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
    161              { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
    162              { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
    163              { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
    164              { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
    165              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
    166              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
    167              { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
    168              { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
    169              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
    170              { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
    171              { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
    172              { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
    173              { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
    174              { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
    175              { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
    176              { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
    177              { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
    178              { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
    179          };

   \                                 In section .rodata, align 4
    180          const byte F14x16_Idx[] = 
   \                     F14x16_Idx:
   \   00000000   0xB1 0xB1          DC8 0B1H, 0B1H, 0BEH, 0A9H, 0C1H, 0FAH, 0C7H, 0F0H
   \              0xBE 0xA9    
   \              0xC1 0xFA    
   \              0xC7 0xF0    
   \   00000008   0xC7 0xF1          DC8 0C7H, 0F1H, 0BFH, 0C6H, 0BCH, 0BCH, 0BFH, 0AAH
   \              0xBF 0xC6    
   \              0xBC 0xBC    
   \              0xBF 0xAA    
   \   00000010   0xB7 0xA2          DC8 0B7H, 0A2H, 0B0H, 0E5H, 0D6H, 0C7H, 0C4H, 0DCH
   \              0xB0 0xE5    
   \              0xD6 0xC7    
   \              0xC4 0xDC    
   \   00000018   0xB3 0xB5          DC8 0B3H, 0B5H, 0CAH, 0D7H, 0D1H, 0A1H, 0D2H, 0BAH
   \              0xCA 0xD7    
   \              0xD1 0xA1    
   \              0xD2 0xBA    
   \   00000020   0xBE 0xA7          DC8 0BEH, 0A7H, 0CAH, 0D2H, 0CEH, 0C2H, 0B6H, 0C8H
   \              0xCA 0xD2    
   \              0xCE 0xC2    
   \              0xB6 0xC8    
   \   00000028   0xB0 0xB4          DC8 0B0H, 0B4H, 0BCH, 0FCH, 0B4H, 0CEH, 0B5H, 0E7H
   \              0xBC 0xFC    
   \              0xB4 0xCE    
   \              0xB5 0xE7    
   \   00000030   0xD1 0xB9          DC8 0D1H, 0B9H, 0
   \              0x00         
   \   00000033   0x00               DC8 0
    181          {
    182          	"北京龙丘邱科技开发板智能车首选液晶室温度按键次电压"
    183          };

   \                                 In section .rodata, align 4
    184          const byte F14x16[] = {  
   \                     F14x16:
   \   00000000   0x20 0x20          DC8 32, 32, 32, 32, 255, 0, 0, 0, 255, 64, 32, 48, 24, 16, 48, 24, 8, 4
   \              0x20 0x20    
   \              0xFF 0x00    
   \              0x00 0x00    
   \              0xFF 0x40    
   \              0x20 0x30    
   \              0x18 0x10    
   \              0x30 0x18    
   \              0x08 0x04    
   \   00000012   0x7F 0x00          DC8 127, 0, 0, 0, 63, 64, 64, 64, 64, 120, 4, 4, 228, 36, 36, 37, 38
   \              0x00 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x40 0x78    
   \              0x04 0x04    
   \              0xE4 0x24    
   \              0x24 0x25    
   \              0x26         
   \   00000023   0x24 0x24          DC8 36, 36, 36, 228, 6, 4, 0, 32, 16, 25, 13, 65, 129, 127, 1, 1, 5, 13
   \              0x24 0xE4    
   \              0x06 0x04    
   \              0x00 0x20    
   \              0x10 0x19    
   \              0x0D 0x41    
   \              0x81 0x7F    
   \              0x01 0x01    
   \              0x05 0x0D    
   \   00000035   0x38 0x10          DC8 56, 16, 0, 16, 16, 16, 16, 16, 255, 16, 240, 18, 28, 208, 16, 16
   \              0x00 0x10    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0xFF 0x10    
   \              0xF0 0x12    
   \              0x1C 0xD0    
   \              0x10 0x10    
   \   00000045   0x10 0x40          DC8 16, 64, 32, 16, 12, 3, 16, 8, 63, 66, 65, 64, 64, 64, 112, 0, 0
   \              0x20 0x10    
   \              0x0C 0x03    
   \              0x10 0x08    
   \              0x3F 0x42    
   \              0x41 0x40    
   \              0x40 0x40    
   \              0x70 0x00    
   \              0x00         
   \   00000056   0xFE 0x84          DC8 254, 132, 132, 132, 132, 130, 130, 130, 130, 192, 128, 0, 32, 32
   \              0x84 0x84    
   \              0x84 0x82    
   \              0x82 0x82    
   \              0x82 0xC0    
   \              0x80 0x00    
   \              0x20 0x20    
   \   00000064   0x3F 0x20          DC8 63, 32, 32, 32, 32, 32, 63, 32, 32, 32, 48, 32, 0, 252, 36, 36, 226
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \              0x30 0x20    
   \              0x00 0xFC    
   \              0x24 0x24    
   \              0xE2         
   \   00000075   0x22 0x22          DC8 34, 34, 0, 254, 2, 34, 82, 142, 2, 16, 31, 16, 8, 15, 8, 8, 0, 255
   \              0x00 0xFE    
   \              0x02 0x22    
   \              0x52 0x8E    
   \              0x02 0x10    
   \              0x1F 0x10    
   \              0x08 0x0F    
   \              0x08 0x08    
   \              0x00 0xFF    
   \   00000087   0x00 0x08          DC8 0, 8, 8, 16, 15, 18, 146, 114, 254, 81, 145, 0, 34, 204, 0, 0, 255
   \              0x08 0x10    
   \              0x0F 0x12    
   \              0x92 0x72    
   \              0xFE 0x51    
   \              0x91 0x00    
   \              0x22 0xCC    
   \              0x00 0x00    
   \              0xFF         
   \   00000098   0x00 0x00          DC8 0, 0, 2, 1, 0, 255, 0, 4, 4, 4, 2, 2, 2, 255, 1, 1, 8, 136, 255, 72
   \              0x02 0x01    
   \              0x00 0xFF    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x02 0x02    
   \              0x02 0xFF    
   \              0x01 0x01    
   \              0x08 0x88    
   \              0xFF 0x48    
   \   000000AC   0x28 0x00          DC8 40, 0, 200, 72, 72, 127, 72, 200, 72, 8, 65, 128, 127, 0, 64, 64
   \              0xC8 0x48    
   \              0x48 0x7F    
   \              0x48 0xC8    
   \              0x48 0x08    
   \              0x41 0x80    
   \              0x7F 0x00    
   \              0x40 0x40    
   \   000000BC   0x20 0x13          DC8 32, 19, 12, 12, 18, 33, 96, 32, 66, 66, 66, 66, 254, 66, 66, 66, 66
   \              0x0C 0x0C    
   \              0x12 0x21    
   \              0x60 0x20    
   \              0x42 0x42    
   \              0x42 0x42    
   \              0xFE 0x42    
   \              0x42 0x42    
   \              0x42         
   \   000000CD   0xFE 0x42          DC8 254, 66, 66, 66, 66, 64, 32, 16, 12, 3, 0, 0, 0, 0, 127, 0, 0, 0, 0
   \              0x42 0x42    
   \              0x42 0x40    
   \              0x20 0x10    
   \              0x0C 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000E0   0x10 0x3E          DC8 16, 62, 16, 16, 240, 159, 144, 144, 146, 148, 28, 16, 16, 16, 32
   \              0x10 0x10    
   \              0xF0 0x9F    
   \              0x90 0x90    
   \              0x92 0x94    
   \              0x1C 0x10    
   \              0x10 0x10    
   \              0x20         
   \   000000EF   0x10 0x88          DC8 16, 136, 135, 65, 70, 40, 16, 40, 39, 64, 192, 64, 0, 16, 208, 255
   \              0x87 0x41    
   \              0x46 0x28    
   \              0x10 0x28    
   \              0x27 0x40    
   \              0xC0 0x40    
   \              0x00 0x10    
   \              0xD0 0xFF    
   \   000000FF   0x50 0x90          DC8 80, 144, 0, 254, 98, 162, 34, 33, 161, 97, 0, 3, 0, 127, 0, 17, 14
   \              0x00 0xFE    
   \              0x62 0xA2    
   \              0x22 0x21    
   \              0xA1 0x61    
   \              0x00 0x03    
   \              0x00 0x7F    
   \              0x00 0x11    
   \              0x0E         
   \   00000110   0x41 0x20          DC8 65, 32, 17, 10, 14, 49, 96, 32, 20, 19, 146, 126, 50, 82, 146, 0
   \              0x11 0x0A    
   \              0x0E 0x31    
   \              0x60 0x20    
   \              0x14 0x13    
   \              0x92 0x7E    
   \              0x32 0x52    
   \              0x92 0x00    
   \   00000120   0x7C 0x44          DC8 124, 68, 68, 68, 124, 0, 1, 1, 0, 255, 73, 73, 73, 73, 73, 73, 255
   \              0x44 0x44    
   \              0x7C 0x00    
   \              0x01 0x01    
   \              0x00 0xFF    
   \              0x49 0x49    
   \              0x49 0x49    
   \              0x49 0x49    
   \              0xFF         
   \   00000131   0x00 0x00          DC8 0, 0, 0, 184, 151, 146, 144, 148, 184, 16, 0, 127, 72, 72, 68, 116
   \              0x00 0xB8    
   \              0x97 0x92    
   \              0x90 0x94    
   \              0xB8 0x10    
   \              0x00 0x7F    
   \              0x48 0x48    
   \              0x44 0x74    
   \   00000141   0x20 0xFF          DC8 32, 255, 10, 10, 74, 138, 127, 0, 0, 63, 68, 68, 66, 114, 32, 4
   \              0x0A 0x0A    
   \              0x4A 0x8A    
   \              0x7F 0x00    
   \              0x00 0x3F    
   \              0x44 0x44    
   \              0x42 0x72    
   \              0x20 0x04    
   \   00000151   0x84 0xC4          DC8 132, 196, 164, 156, 135, 132, 244, 132, 132, 132, 132, 132, 0, 4, 4
   \              0xA4 0x9C    
   \              0x87 0x84    
   \              0xF4 0x84    
   \              0x84 0x84    
   \              0x84 0x84    
   \              0x00 0x04    
   \              0x04         
   \   00000160   0x04 0x04          DC8 4, 4, 4, 4, 4, 255, 4, 4, 4, 4, 4, 4, 4, 4, 228, 37, 38, 52, 44, 36
   \              0x04 0x04    
   \              0x04 0xFF    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0xE4 0x25    
   \              0x26 0x34    
   \              0x2C 0x24    
   \   00000174   0x24 0x26          DC8 36, 38, 229, 4, 4, 4, 0, 0, 127, 37, 37, 37, 37, 37, 37, 37, 127, 0
   \              0xE5 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x7F 0x25    
   \              0x25 0x25    
   \              0x25 0x25    
   \              0x25 0x25    
   \              0x7F 0x00    
   \   00000186   0x00 0x00          DC8 0, 0, 64, 66, 204, 0, 80, 78, 200, 72, 127, 200, 72, 72, 64, 0, 64
   \              0x40 0x42    
   \              0xCC 0x00    
   \              0x50 0x4E    
   \              0xC8 0x48    
   \              0x7F 0xC8    
   \              0x48 0x48    
   \              0x40 0x00    
   \              0x40         
   \   00000197   0x20 0x1F          DC8 32, 31, 32, 72, 70, 65, 64, 64, 71, 72, 72, 78, 64, 97, 6, 224, 24
   \              0x20 0x48    
   \              0x46 0x41    
   \              0x40 0x40    
   \              0x47 0x48    
   \              0x48 0x4E    
   \              0x40 0x61    
   \              0x06 0xE0    
   \              0x18         
   \   000001A8   0x84 0xE4          DC8 132, 228, 28, 132, 101, 190, 36, 164, 100, 4, 4, 255, 0, 1, 0, 255
   \              0x1C 0x84    
   \              0x65 0xBE    
   \              0x24 0xA4    
   \              0x64 0x04    
   \              0x04 0xFF    
   \              0x00 0x01    
   \              0x00 0xFF    
   \   000001B8   0x41 0x21          DC8 65, 33, 18, 12, 27, 97, 192, 64, 0, 0, 0, 126, 42, 42, 42, 42, 42
   \              0x12 0x0C    
   \              0x1B 0x61    
   \              0xC0 0x40    
   \              0x00 0x00    
   \              0x00 0x7E    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A         
   \   000001C9   0x2A 0x7E          DC8 42, 126, 0, 0, 0, 127, 37, 37, 37, 37, 127, 0, 0, 127, 37, 37, 37
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x25 0x25    
   \              0x25 0x25    
   \              0x7F 0x00    
   \              0x00 0x7F    
   \              0x25 0x25    
   \              0x25         
   \   000001DA   0x25 0x7F          DC8 37, 127, 16, 44, 36, 164, 100, 37, 38, 36, 36, 164, 36, 52, 44, 4
   \              0x10 0x2C    
   \              0x24 0xA4    
   \              0x64 0x25    
   \              0x26 0x24    
   \              0x24 0xA4    
   \              0x24 0x34    
   \              0x2C 0x04    
   \   000001EA   0x40 0x48          DC8 64, 72, 73, 73, 73, 73, 127, 73, 73, 73, 75, 72, 64, 64, 33, 134
   \              0x49 0x49    
   \              0x49 0x49    
   \              0x7F 0x49    
   \              0x49 0x49    
   \              0x4B 0x48    
   \              0x40 0x40    
   \              0x21 0x86    
   \   000001FA   0x70 0x00          DC8 112, 0, 126, 74, 74, 74, 74, 74, 126, 0, 0, 0, 254, 1, 64, 127, 65
   \              0x7E 0x4A    
   \              0x4A 0x4A    
   \              0x4A 0x4A    
   \              0x7E 0x00    
   \              0x00 0x00    
   \              0xFE 0x01    
   \              0x40 0x7F    
   \              0x41         
   \   0000020B   0x41 0x7F          DC8 65, 127, 65, 65, 127, 65, 65, 127, 64, 0, 252, 4, 36, 36, 252, 165
   \              0x41 0x41    
   \              0x7F 0x41    
   \              0x41 0x7F    
   \              0x40 0x00    
   \              0xFC 0x04    
   \              0x24 0x24    
   \              0xFC 0xA5    
   \   0000021B   0xA6 0xA4          DC8 166, 164, 252, 36, 36, 36, 4, 96, 31, 128, 128, 66, 70, 42, 18, 18
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x04 0x60    
   \              0x1F 0x80    
   \              0x80 0x42    
   \              0x46 0x2A    
   \              0x12 0x12    
   \   0000022B   0x2A 0x26          DC8 42, 38, 66, 192, 64, 16, 16, 255, 144, 80, 152, 136, 136, 233, 142
   \              0x42 0xC0    
   \              0x40 0x10    
   \              0x10 0xFF    
   \              0x90 0x50    
   \              0x98 0x88    
   \              0x88 0xE9    
   \              0x8E         
   \   0000023A   0x88 0x88          DC8 136, 136, 152, 136, 66, 129, 127, 0, 64, 64, 38, 37, 24, 8, 22, 49
   \              0x98 0x88    
   \              0x42 0x81    
   \              0x7F 0x00    
   \              0x40 0x40    
   \              0x26 0x25    
   \              0x18 0x08    
   \              0x16 0x31    
   \   0000024A   0x60 0x20          DC8 96, 32, 48, 239, 40, 40, 68, 100, 220, 16, 84, 255, 84, 84, 124, 16
   \              0x30 0xEF    
   \              0x28 0x28    
   \              0x44 0x64    
   \              0xDC 0x10    
   \              0x54 0xFF    
   \              0x54 0x54    
   \              0x7C 0x10    
   \   0000025A   0x01 0x7F          DC8 1, 127, 33, 81, 34, 20, 15, 20, 37, 63, 69, 69, 69, 68, 2, 28, 192
   \              0x21 0x51    
   \              0x22 0x14    
   \              0x0F 0x14    
   \              0x25 0x3F    
   \              0x45 0x45    
   \              0x45 0x44    
   \              0x02 0x1C    
   \              0xC0         
   \   0000026B   0x30 0x4C          DC8 48, 76, 48, 15, 8, 248, 8, 8, 40, 24, 8, 94, 67, 32, 32, 16, 8, 4
   \              0x30 0x0F    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x28 0x18    
   \              0x08 0x5E    
   \              0x43 0x20    
   \              0x20 0x10    
   \              0x08 0x04    
   \   0000027D   0x03 0x01          DC8 3, 1, 6, 8, 48, 96, 32, 0, 248, 72, 72, 72, 72, 255, 72, 72, 72, 72
   \              0x06 0x08    
   \              0x30 0x60    
   \              0x20 0x00    
   \              0xF8 0x48    
   \              0x48 0x48    
   \              0x48 0xFF    
   \              0x48 0x48    
   \              0x48 0x48    
   \   0000028F   0xF8 0x00          DC8 248, 0, 0, 0, 15, 4, 4, 4, 4, 63, 68, 68, 68, 68, 79, 64, 112, 0
   \              0x00 0x00    
   \              0x0F 0x04    
   \              0x04 0x04    
   \              0x04 0x3F    
   \              0x44 0x44    
   \              0x44 0x44    
   \              0x4F 0x40    
   \              0x70 0x00    
   \   000002A1   0xFE 0x02          DC8 254, 2, 66, 66, 66, 66, 250, 66, 66, 66, 98, 66, 2, 24, 39, 32, 32
   \              0x42 0x42    
   \              0x42 0x42    
   \              0xFA 0x42    
   \              0x42 0x42    
   \              0x62 0x42    
   \              0x02 0x18    
   \              0x27 0x20    
   \              0x20         
   \   000002B2   0x20 0x20          DC8 32, 32, 32, 63, 32, 33, 46, 36, 32, 32
   \              0x20 0x3F    
   \              0x20 0x21    
   \              0x2E 0x24    
   \              0x20 0x20    
    185          0x20,0x20,0x20,0x20,0xFF,0x00,0x00,0x00,0xFF,0x40,0x20,0x30,0x18,0x10,
    186          0x30,0x18,0x08,0x04,0x7F,0x00,0x00,0x00,0x3F,0x40,0x40,0x40,0x40,0x78,//北0
    187          0x04,0x04,0xE4,0x24,0x24,0x25,0x26,0x24,0x24,0x24,0xE4,0x06,0x04,0x00,
    188          0x20,0x10,0x19,0x0D,0x41,0x81,0x7F,0x01,0x01,0x05,0x0D,0x38,0x10,0x00,//京1
    189          0x10,0x10,0x10,0x10,0x10,0xFF,0x10,0xF0,0x12,0x1C,0xD0,0x10,0x10,0x10,
    190          0x40,0x20,0x10,0x0C,0x03,0x10,0x08,0x3F,0x42,0x41,0x40,0x40,0x40,0x70,//龙2
    191          0x00,0x00,0xFE,0x84,0x84,0x84,0x84,0x82,0x82,0x82,0x82,0xC0,0x80,0x00,
    192          0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x30,0x20,//丘3
    193          0x00,0xFC,0x24,0x24,0xE2,0x22,0x22,0x00,0xFE,0x02,0x22,0x52,0x8E,0x02,
    194          0x10,0x1F,0x10,0x08,0x0F,0x08,0x08,0x00,0xFF,0x00,0x08,0x08,0x10,0x0F,//邱4
    195          0x12,0x92,0x72,0xFE,0x51,0x91,0x00,0x22,0xCC,0x00,0x00,0xFF,0x00,0x00,
    196          0x02,0x01,0x00,0xFF,0x00,0x04,0x04,0x04,0x02,0x02,0x02,0xFF,0x01,0x01,//科5
    197          0x08,0x88,0xFF,0x48,0x28,0x00,0xC8,0x48,0x48,0x7F,0x48,0xC8,0x48,0x08,
    198          0x41,0x80,0x7F,0x00,0x40,0x40,0x20,0x13,0x0C,0x0C,0x12,0x21,0x60,0x20,//技6
    199          0x42,0x42,0x42,0x42,0xFE,0x42,0x42,0x42,0x42,0xFE,0x42,0x42,0x42,0x42,
    200          0x40,0x20,0x10,0x0C,0x03,0x00,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,0x00,//开7
    201          0x10,0x3E,0x10,0x10,0xF0,0x9F,0x90,0x90,0x92,0x94,0x1C,0x10,0x10,0x10,
    202          0x20,0x10,0x88,0x87,0x41,0x46,0x28,0x10,0x28,0x27,0x40,0xC0,0x40,0x00,//发8
    203          0x10,0xD0,0xFF,0x50,0x90,0x00,0xFE,0x62,0xA2,0x22,0x21,0xA1,0x61,0x00,
    204          0x03,0x00,0x7F,0x00,0x11,0x0E,0x41,0x20,0x11,0x0A,0x0E,0x31,0x60,0x20,//板9
    205          0x14,0x13,0x92,0x7E,0x32,0x52,0x92,0x00,0x7C,0x44,0x44,0x44,0x7C,0x00,
    206          0x01,0x01,0x00,0xFF,0x49,0x49,0x49,0x49,0x49,0x49,0xFF,0x00,0x00,0x00,//智10
    207          0xB8,0x97,0x92,0x90,0x94,0xB8,0x10,0x00,0x7F,0x48,0x48,0x44,0x74,0x20,
    208          0xFF,0x0A,0x0A,0x4A,0x8A,0x7F,0x00,0x00,0x3F,0x44,0x44,0x42,0x72,0x20,//能11
    209          0x04,0x84,0xC4,0xA4,0x9C,0x87,0x84,0xF4,0x84,0x84,0x84,0x84,0x84,0x00,
    210          0x04,0x04,0x04,0x04,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x04,0x04,//车12
    211          0x04,0x04,0xE4,0x25,0x26,0x34,0x2C,0x24,0x24,0x26,0xE5,0x04,0x04,0x04,
    212          0x00,0x00,0x7F,0x25,0x25,0x25,0x25,0x25,0x25,0x25,0x7F,0x00,0x00,0x00,//首13
    213          0x40,0x42,0xCC,0x00,0x50,0x4E,0xC8,0x48,0x7F,0xC8,0x48,0x48,0x40,0x00,
    214          0x40,0x20,0x1F,0x20,0x48,0x46,0x41,0x40,0x40,0x47,0x48,0x48,0x4E,0x40,//选14
    215          0x61,0x06,0xE0,0x18,0x84,0xE4,0x1C,0x84,0x65,0xBE,0x24,0xA4,0x64,0x04,
    216          0x04,0xFF,0x00,0x01,0x00,0xFF,0x41,0x21,0x12,0x0C,0x1B,0x61,0xC0,0x40,//液15
    217          0x00,0x00,0x00,0x7E,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x7E,0x00,0x00,0x00,
    218          0x7F,0x25,0x25,0x25,0x25,0x7F,0x00,0x00,0x7F,0x25,0x25,0x25,0x25,0x7F,//晶16
    219          0x10,0x2C,0x24,0xA4,0x64,0x25,0x26,0x24,0x24,0xA4,0x24,0x34,0x2C,0x04,
    220          0x40,0x48,0x49,0x49,0x49,0x49,0x7F,0x49,0x49,0x49,0x4B,0x48,0x40,0x40,//室17
    221          0x21,0x86,0x70,0x00,0x7E,0x4A,0x4A,0x4A,0x4A,0x4A,0x7E,0x00,0x00,0x00,
    222          0xFE,0x01,0x40,0x7F,0x41,0x41,0x7F,0x41,0x41,0x7F,0x41,0x41,0x7F,0x40,//温18
    223          0x00,0xFC,0x04,0x24,0x24,0xFC,0xA5,0xA6,0xA4,0xFC,0x24,0x24,0x24,0x04,
    224          0x60,0x1F,0x80,0x80,0x42,0x46,0x2A,0x12,0x12,0x2A,0x26,0x42,0xC0,0x40,//度19
    225          0x10,0x10,0xFF,0x90,0x50,0x98,0x88,0x88,0xE9,0x8E,0x88,0x88,0x98,0x88,
    226          0x42,0x81,0x7F,0x00,0x40,0x40,0x26,0x25,0x18,0x08,0x16,0x31,0x60,0x20,//按20
    227          0x30,0xEF,0x28,0x28,0x44,0x64,0xDC,0x10,0x54,0xFF,0x54,0x54,0x7C,0x10,
    228          0x01,0x7F,0x21,0x51,0x22,0x14,0x0F,0x14,0x25,0x3F,0x45,0x45,0x45,0x44,//键21
    229          0x02,0x1C,0xC0,0x30,0x4C,0x30,0x0F,0x08,0xF8,0x08,0x08,0x28,0x18,0x08,
    230          0x5E,0x43,0x20,0x20,0x10,0x08,0x04,0x03,0x01,0x06,0x08,0x30,0x60,0x20,//次22
    231          0x00,0xF8,0x48,0x48,0x48,0x48,0xFF,0x48,0x48,0x48,0x48,0xF8,0x00,0x00,
    232          0x00,0x0F,0x04,0x04,0x04,0x04,0x3F,0x44,0x44,0x44,0x44,0x4F,0x40,0x70,//电23
    233          0x00,0xFE,0x02,0x42,0x42,0x42,0x42,0xFA,0x42,0x42,0x42,0x62,0x42,0x02,
    234          0x18,0x27,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x21,0x2E,0x24,0x20,0x20,//压24  
    235          };
    236          
    237          //======================================================
    238          // 128X64I液晶底层驱动[8X16]字体库
    239          // 设计者: powerint
    240          // 描  述: [8X16]西文字符的字模数据 (纵向取模,字节倒序)
    241          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
    242          //======================================================

   \                                 In section .rodata, align 4
    243          const byte F8X16[]=
   \                     F8X16:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x00 0x00    
   \   00000016   0x00 0x00          DC8 0, 0, 0, 0, 0, 51, 48, 0, 0, 0, 0, 16, 12, 6, 16, 12, 6, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x33    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x10    
   \              0x0C 0x06    
   \              0x10 0x0C    
   \              0x06 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002B   0x00 0x00          DC8 0, 0, 0, 0, 0, 64, 192, 120, 64, 192, 120, 64, 0, 4, 63, 4, 4, 63
   \              0x00 0x00    
   \              0x00 0x40    
   \              0xC0 0x78    
   \              0x40 0xC0    
   \              0x78 0x40    
   \              0x00 0x04    
   \              0x3F 0x04    
   \              0x04 0x3F    
   \   0000003D   0x04 0x04          DC8 4, 4, 0, 0, 112, 136, 252, 8, 48, 0, 0, 0, 24, 32, 255, 33, 30, 0
   \              0x00 0x00    
   \              0x70 0x88    
   \              0xFC 0x08    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x18 0x20    
   \              0xFF 0x21    
   \              0x1E 0x00    
   \   0000004F   0x00 0xF0          DC8 0, 240, 8, 240, 0, 224, 24, 0, 0, 0, 33, 28, 3, 30, 33, 30, 0, 0
   \              0x08 0xF0    
   \              0x00 0xE0    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x21 0x1C    
   \              0x03 0x1E    
   \              0x21 0x1E    
   \              0x00 0x00    
   \   00000061   0xF0 0x08          DC8 240, 8, 136, 112, 0, 0, 0, 30, 33, 35, 36, 25, 39, 33, 16, 16, 22
   \              0x88 0x70    
   \              0x00 0x00    
   \              0x00 0x1E    
   \              0x21 0x23    
   \              0x24 0x19    
   \              0x27 0x21    
   \              0x10 0x10    
   \              0x16         
   \   00000072   0x0E 0x00          DC8 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 24, 4, 2
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE0    
   \              0x18 0x04    
   \              0x02         
   \   00000087   0x00 0x00          DC8 0, 0, 0, 0, 7, 24, 32, 64, 0, 0, 2, 4, 24, 224, 0, 0, 0, 0, 64, 32
   \              0x00 0x00    
   \              0x07 0x18    
   \              0x20 0x40    
   \              0x00 0x00    
   \              0x02 0x04    
   \              0x18 0xE0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x20    
   \   0000009B   0x18 0x07          DC8 24, 7, 0, 0, 0, 64, 64, 128, 240, 128, 64, 64, 0, 2, 2, 1, 15, 1, 2
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x40 0x80    
   \              0xF0 0x80    
   \              0x40 0x40    
   \              0x00 0x02    
   \              0x02 0x01    
   \              0x0F 0x01    
   \              0x02         
   \   000000AE   0x02 0x00          DC8 2, 0, 0, 0, 0, 240, 0, 0, 0, 0, 1, 1, 1, 31, 1, 1, 1, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x1F    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 128, 176, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x80 0xB0    
   \              0x70 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000D9   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 0, 0, 0
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000EF   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 96, 24, 4, 0, 96, 24, 6, 1, 0, 0, 0, 0, 224, 16
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x18    
   \              0x04 0x00    
   \              0x60 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE0 0x10    
   \   00000103   0x08 0x08          DC8 8, 8, 16, 224, 0, 0, 15, 16, 32, 32, 16, 15, 0, 0, 16, 16, 248, 0
   \              0x10 0xE0    
   \              0x00 0x00    
   \              0x0F 0x10    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xF8 0x00    
   \   00000115   0x00 0x00          DC8 0, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0, 0, 112, 8, 8, 8, 136, 112, 0
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x70 0x08    
   \              0x08 0x08    
   \              0x88 0x70    
   \              0x00         
   \   00000128   0x00 0x30          DC8 0, 48, 40, 36, 34, 33, 48, 0, 0, 48, 8, 136, 136, 72, 48, 0, 0, 24
   \              0x28 0x24    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x30    
   \              0x08 0x88    
   \              0x88 0x48    
   \              0x30 0x00    
   \              0x00 0x18    
   \   0000013A   0x20 0x20          DC8 32, 32, 32, 17, 14, 0, 0, 0, 192, 32, 16, 248, 0, 0, 0, 7, 4, 36
   \              0x20 0x11    
   \              0x0E 0x00    
   \              0x00 0x00    
   \              0xC0 0x20    
   \              0x10 0xF8    
   \              0x00 0x00    
   \              0x00 0x07    
   \              0x04 0x24    
   \   0000014C   0x24 0x3F          DC8 36, 63, 36, 0, 0, 248, 8, 136, 136, 8, 8, 0, 0, 25, 33, 32, 32, 17
   \              0x24 0x00    
   \              0x00 0xF8    
   \              0x08 0x88    
   \              0x88 0x08    
   \              0x08 0x00    
   \              0x00 0x19    
   \              0x21 0x20    
   \              0x20 0x11    
   \   0000015E   0x0E 0x00          DC8 14, 0, 0, 224, 16, 136, 136, 24, 0, 0, 0, 15, 17, 32, 32, 17, 14, 0
   \              0x00 0xE0    
   \              0x10 0x88    
   \              0x88 0x18    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x11 0x20    
   \              0x20 0x11    
   \              0x0E 0x00    
   \   00000170   0x00 0x38          DC8 0, 56, 8, 8, 200, 56, 8, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 112, 136, 8
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x70    
   \              0x88 0x08    
   \   00000184   0x08 0x88          DC8 8, 136, 112, 0, 0, 28, 34, 33, 33, 34, 28, 0, 0, 224, 16, 8, 8, 16
   \              0x70 0x00    
   \              0x00 0x1C    
   \              0x22 0x21    
   \              0x21 0x22    
   \              0x1C 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x10    
   \   00000196   0xE0 0x00          DC8 224, 0, 0, 0, 49, 34, 34, 17, 15, 0, 0, 0, 0, 192, 192, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x31 0x22    
   \              0x22 0x11    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A9   0x00 0x00          DC8 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 128, 96, 0
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x00    
   \   000001BD   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 64, 32, 16, 8, 0, 0, 1, 2, 4, 8, 16, 32, 0, 64
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x40 0x20    
   \              0x10 0x08    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x08    
   \              0x10 0x20    
   \              0x00 0x40    
   \   000001D1   0x40 0x40          DC8 64, 64, 64, 64, 64, 64, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 8, 16, 32, 64
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x08 0x10    
   \              0x20 0x40    
   \   000001E5   0x80 0x00          DC8 128, 0, 0, 0, 32, 16, 8, 4, 2, 1, 0, 0, 112, 72, 8, 8, 8, 240, 0, 0
   \              0x00 0x00    
   \              0x20 0x10    
   \              0x08 0x04    
   \              0x02 0x01    
   \              0x00 0x00    
   \              0x70 0x48    
   \              0x08 0x08    
   \              0x08 0xF0    
   \              0x00 0x00    
   \   000001F9   0x00 0x00          DC8 0, 0, 48, 54, 1, 0, 0, 192, 48, 200, 40, 232, 16, 224, 0, 7, 24, 39
   \              0x30 0x36    
   \              0x01 0x00    
   \              0x00 0xC0    
   \              0x30 0xC8    
   \              0x28 0xE8    
   \              0x10 0xE0    
   \              0x00 0x07    
   \              0x18 0x27    
   \   0000020B   0x24 0x23          DC8 36, 35, 20, 11, 0, 0, 0, 192, 56, 224, 0, 0, 0, 32, 60, 35, 2, 2
   \              0x14 0x0B    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x38 0xE0    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x3C 0x23    
   \              0x02 0x02    
   \   0000021D   0x27 0x38          DC8 39, 56, 32, 8, 248, 136, 136, 136, 112, 0, 0, 32, 63, 32, 32, 32
   \              0x20 0x08    
   \              0xF8 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \   0000022D   0x11 0x0E          DC8 17, 14, 0, 192, 48, 8, 8, 8, 8, 56, 0, 7, 24, 32, 32, 32, 16, 8, 0
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x08 0x38    
   \              0x00 0x07    
   \              0x18 0x20    
   \              0x20 0x20    
   \              0x10 0x08    
   \              0x00         
   \   00000240   0x08 0xF8          DC8 8, 248, 8, 8, 8, 16, 224, 0, 32, 63, 32, 32, 32, 16, 15, 0, 8, 248
   \              0x08 0x08    
   \              0x08 0x10    
   \              0xE0 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x0F 0x00    
   \              0x08 0xF8    
   \   00000252   0x88 0x88          DC8 136, 136, 232, 8, 16, 0, 32, 63, 32, 32, 35, 32, 24, 0, 8, 248, 136
   \              0xE8 0x08    
   \              0x10 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x23 0x20    
   \              0x18 0x00    
   \              0x08 0xF8    
   \              0x88         
   \   00000263   0x88 0xE8          DC8 136, 232, 8, 16, 0, 32, 63, 32, 0, 3, 0, 0, 0, 192, 48, 8, 8, 8, 56
   \              0x08 0x10    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x03    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x38         
   \   00000276   0x00 0x00          DC8 0, 0, 7, 24, 32, 32, 34, 30, 2, 0, 8, 248, 8, 0, 0, 8, 248, 8, 32
   \              0x07 0x18    
   \              0x20 0x20    
   \              0x22 0x1E    
   \              0x02 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x20         
   \   00000289   0x3F 0x21          DC8 63, 33, 1, 1, 33, 63, 32, 0, 8, 8, 248, 8, 8, 0, 0, 0, 32, 32, 63
   \              0x01 0x01    
   \              0x21 0x3F    
   \              0x20 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F         
   \   0000029C   0x20 0x20          DC8 32, 32, 0, 0, 0, 0, 8, 8, 248, 8, 8, 0, 192, 128, 128, 128, 127, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0xC0 0x80    
   \              0x80 0x80    
   \              0x7F 0x00    
   \   000002AE   0x00 0x00          DC8 0, 0, 8, 248, 136, 192, 40, 24, 8, 0, 32, 63, 32, 1, 38, 56, 32, 0
   \              0x08 0xF8    
   \              0x88 0xC0    
   \              0x28 0x18    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x20 0x01    
   \              0x26 0x38    
   \              0x20 0x00    
   \   000002C0   0x08 0xF8          DC8 8, 248, 8, 0, 0, 0, 0, 0, 32, 63, 32, 32, 32, 32, 48, 0, 8, 248
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x00    
   \              0x08 0xF8    
   \   000002D2   0xF8 0x00          DC8 248, 0, 248, 248, 8, 0, 32, 63, 0, 63, 0, 63, 32, 0, 8, 248, 48
   \              0xF8 0xF8    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x00 0x3F    
   \              0x00 0x3F    
   \              0x20 0x00    
   \              0x08 0xF8    
   \              0x30         
   \   000002E3   0xC0 0x00          DC8 192, 0, 8, 248, 8, 32, 63, 32, 0, 7, 24, 63, 0, 224, 16, 8, 8, 8
   \              0x08 0xF8    
   \              0x08 0x20    
   \              0x3F 0x20    
   \              0x00 0x07    
   \              0x18 0x3F    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \   000002F5   0x10 0xE0          DC8 16, 224, 0, 15, 16, 32, 32, 32, 16, 15, 0, 8, 248, 8, 8, 8, 8, 240
   \              0x00 0x0F    
   \              0x10 0x20    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x08 0x08    
   \              0x08 0xF0    
   \   00000307   0x00 0x20          DC8 0, 32, 63, 33, 1, 1, 1, 0, 0, 224, 16, 8, 8, 8, 16, 224, 0, 15, 24
   \              0x3F 0x21    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0x10 0xE0    
   \              0x00 0x0F    
   \              0x18         
   \   0000031A   0x24 0x24          DC8 36, 36, 56, 80, 79, 0, 8, 248, 136, 136, 136, 136, 112, 0, 32, 63
   \              0x38 0x50    
   \              0x4F 0x00    
   \              0x08 0xF8    
   \              0x88 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x20 0x3F    
   \   0000032A   0x20 0x00          DC8 32, 0, 3, 12, 48, 32, 0, 112, 136, 8, 8, 8, 56, 0, 0, 56, 32, 33
   \              0x03 0x0C    
   \              0x30 0x20    
   \              0x00 0x70    
   \              0x88 0x08    
   \              0x08 0x08    
   \              0x38 0x00    
   \              0x00 0x38    
   \              0x20 0x21    
   \   0000033C   0x21 0x22          DC8 33, 34, 28, 0, 24, 8, 8, 248, 8, 8, 24, 0, 0, 0, 32, 63, 32, 0, 0
   \              0x1C 0x00    
   \              0x18 0x08    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x00    
   \              0x00         
   \   0000034F   0x00 0x08          DC8 0, 8, 248, 8, 0, 0, 8, 248, 8, 0, 31, 32, 32, 32, 32, 31, 0, 8, 120
   \              0xF8 0x08    
   \              0x00 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x1F 0x20    
   \              0x20 0x20    
   \              0x20 0x1F    
   \              0x00 0x08    
   \              0x78         
   \   00000362   0x88 0x00          DC8 136, 0, 0, 200, 56, 8, 0, 0, 7, 56, 14, 1, 0, 0, 248, 8, 0, 248, 0
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x07 0x38    
   \              0x0E 0x01    
   \              0x00 0x00    
   \              0xF8 0x08    
   \              0x00 0xF8    
   \              0x00         
   \   00000375   0x08 0xF8          DC8 8, 248, 0, 3, 60, 7, 0, 7, 60, 3, 0, 8, 24, 104, 128, 128, 104, 24
   \              0x00 0x03    
   \              0x3C 0x07    
   \              0x00 0x07    
   \              0x3C 0x03    
   \              0x00 0x08    
   \              0x18 0x68    
   \              0x80 0x80    
   \              0x68 0x18    
   \   00000387   0x08 0x20          DC8 8, 32, 48, 44, 3, 3, 44, 48, 32, 8, 56, 200, 0, 200, 56, 8, 0, 0, 0
   \              0x30 0x2C    
   \              0x03 0x03    
   \              0x2C 0x30    
   \              0x20 0x08    
   \              0x38 0xC8    
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x00         
   \   0000039A   0x20 0x3F          DC8 32, 63, 32, 0, 0, 0, 16, 8, 8, 8, 200, 56, 8, 0, 32, 56, 38, 33, 32
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x20 0x38    
   \              0x26 0x21    
   \              0x20         
   \   000003AD   0x20 0x18          DC8 32, 24, 0, 0, 0, 0, 254, 2, 2, 2, 0, 0, 0, 0, 127, 64, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFE 0x02    
   \              0x02 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \   000003C1   0x0C 0x30          DC8 12, 48, 192, 0, 0, 0, 0, 0, 0, 0, 1, 6, 56, 192, 0, 0, 2, 2, 2, 254
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x06    
   \              0x38 0xC0    
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x02 0xFE    
   \   000003D5   0x00 0x00          DC8 0, 0, 0, 0, 64, 64, 64, 127, 0, 0, 0, 0, 0, 4, 2, 2, 2, 4, 0, 0, 0
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x40 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0x02 0x02    
   \              0x02 0x04    
   \              0x00 0x00    
   \              0x00         
   \   000003EA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000003FD   0x80 0x80          DC8 128, 128, 128, 0, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x80 0x00    
   \              0x02 0x02    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000412   0x80 0x80          DC8 128, 128, 128, 128, 0, 0, 0, 25, 36, 34, 34, 34, 63, 32, 8, 248, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x19    
   \              0x24 0x22    
   \              0x22 0x22    
   \              0x3F 0x20    
   \              0x08 0xF8    
   \              0x00         
   \   00000423   0x80 0x80          DC8 128, 128, 0, 0, 0, 0, 63, 17, 32, 32, 17, 14, 0, 0, 0, 0, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x11    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \   00000435   0x80 0x00          DC8 128, 0, 0, 0, 14, 17, 32, 32, 32, 17, 0, 0, 0, 0, 128, 128, 136
   \              0x00 0x00    
   \              0x0E 0x11    
   \              0x20 0x20    
   \              0x20 0x11    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x88         
   \   00000446   0xF8 0x00          DC8 248, 0, 0, 14, 17, 32, 32, 16, 63, 32, 0, 0, 128, 128, 128, 128, 0
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000457   0x00 0x00          DC8 0, 0, 31, 34, 34, 34, 34, 19, 0, 0, 128, 128, 240, 136, 136, 136
   \              0x1F 0x22    
   \              0x22 0x22    
   \              0x22 0x13    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0x88    
   \              0x88 0x88    
   \   00000467   0x18 0x00          DC8 24, 0, 32, 32, 63, 32, 32, 0, 0, 0, 0, 128, 128, 128, 128, 128, 0
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000478   0x00 0x6B          DC8 0, 107, 148, 148, 148, 147, 96, 0, 8, 248, 0, 128, 128, 128, 0, 0
   \              0x94 0x94    
   \              0x94 0x93    
   \              0x60 0x00    
   \              0x08 0xF8    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000488   0x20 0x3F          DC8 32, 63, 33, 0, 0, 32, 63, 32, 0, 128, 152, 152, 0, 0, 0, 0, 0, 32
   \              0x21 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \   0000049A   0x20 0x3F          DC8 32, 63, 32, 32, 0, 0, 0, 0, 0, 128, 152, 152, 0, 0, 0, 192, 128
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x80         
   \   000004AB   0x80 0x80          DC8 128, 128, 127, 0, 0, 8, 248, 0, 0, 128, 128, 128, 0, 32, 63, 36, 2
   \              0x7F 0x00    
   \              0x00 0x08    
   \              0xF8 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x24    
   \              0x02         
   \   000004BC   0x2D 0x30          DC8 45, 48, 32, 0, 0, 8, 8, 248, 0, 0, 0, 0, 0, 32, 32, 63, 32, 32, 0
   \              0x20 0x00    
   \              0x00 0x08    
   \              0x08 0xF8    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x00         
   \   000004CF   0x00 0x80          DC8 0, 128, 128, 128, 128, 128, 128, 128, 0, 32, 63, 32, 0, 63, 32, 0
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x3F    
   \              0x20 0x00    
   \   000004DF   0x3F 0x80          DC8 63, 128, 128, 0, 128, 128, 128, 0, 0, 32, 63, 33, 0, 0, 32, 63, 32
   \              0x80 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x20    
   \              0x3F 0x21    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20         
   \   000004F0   0x00 0x00          DC8 0, 0, 128, 128, 128, 128, 0, 0, 0, 31, 32, 32, 32, 32, 31, 0, 128
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x1F 0x00    
   \              0x80         
   \   00000501   0x80 0x00          DC8 128, 0, 128, 128, 0, 0, 0, 128, 255, 161, 32, 32, 17, 14, 0, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xFF 0xA1    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00         
   \   00000512   0x00 0x80          DC8 0, 128, 128, 128, 128, 0, 0, 14, 17, 32, 32, 160, 255, 128, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0xA0    
   \              0xFF 0x80    
   \              0x80         
   \   00000521   0x80 0x80          DC8 128, 128, 0, 128, 128, 128, 0, 32, 32, 63, 33, 32, 0, 1, 0, 0, 0
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x21 0x20    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x00         
   \   00000532   0x80 0x80          DC8 128, 128, 128, 128, 128, 0, 0, 51, 36, 36, 36, 36, 25, 0, 0, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x33    
   \              0x24 0x24    
   \              0x24 0x24    
   \              0x19 0x00    
   \              0x00 0x80    
   \   00000542   0x80 0xE0          DC8 128, 224, 128, 128, 0, 0, 0, 0, 0, 31, 32, 32, 0, 0, 128, 128, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000554   0x00 0x80          DC8 0, 128, 128, 0, 0, 31, 32, 32, 32, 16, 63, 32, 128, 128, 128, 0, 0
   \              0x80 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00         
   \   00000565   0x80 0x80          DC8 128, 128, 128, 0, 1, 14, 48, 8, 6, 1, 0, 128, 128, 0, 128, 0, 128
   \              0x80 0x00    
   \              0x01 0x0E    
   \              0x30 0x08    
   \              0x06 0x01    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x00    
   \              0x80         
   \   00000576   0x80 0x80          DC8 128, 128, 15, 48, 12, 3, 12, 48, 15, 0, 0, 128, 128, 0, 128, 128
   \              0x0F 0x30    
   \              0x0C 0x03    
   \              0x0C 0x30    
   \              0x0F 0x00    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x80    
   \   00000586   0x80 0x00          DC8 128, 0, 0, 32, 49, 46, 14, 49, 32, 0, 128, 128, 128, 0, 0, 128, 128
   \              0x00 0x20    
   \              0x31 0x2E    
   \              0x0E 0x31    
   \              0x20 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x80    
   \              0x80         
   \   00000597   0x80 0x80          DC8 128, 128, 129, 142, 112, 24, 6, 1, 0, 0, 128, 128, 128, 128, 128
   \              0x81 0x8E    
   \              0x70 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000005A6   0x80 0x00          DC8 128, 0, 0, 33, 48, 44, 34, 33, 48, 0, 0, 0, 0, 0, 128, 124, 2, 2, 0
   \              0x00 0x21    
   \              0x30 0x2C    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x7C    
   \              0x02 0x02    
   \              0x00         
   \   000005B9   0x00 0x00          DC8 0, 0, 0, 0, 63, 64, 64, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 255
   \              0x00 0x00    
   \              0x3F 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \   000005CD   0x00 0x00          DC8 0, 0, 0, 0, 2, 2, 124, 128, 0, 0, 0, 0, 64, 64, 63, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x7C 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005E1   0x06 0x01          DC8 6, 1, 1, 2, 2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x01 0x02    
   \              0x02 0x04    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    244          {
    245          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
    246            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
    247            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
    248            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
    249            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
    250            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
    251            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
    252            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
    253            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
    254            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
    255            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
    256            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
    257            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
    258            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
    259            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
    260            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
    261            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
    262            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
    263            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
    264            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
    265            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
    266            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
    267            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
    268            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
    269            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
    270            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
    271            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
    272            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
    273            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
    274            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
    275            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
    276            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
    277            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
    278            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
    279            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
    280            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
    281            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
    282            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
    283            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
    284            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
    285            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
    286            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
    287            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
    288            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
    289            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
    290            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
    291            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
    292            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
    293            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
    294            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
    295            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
    296            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
    297            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
    298            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
    299            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
    300            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
    301            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
    302            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
    303            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
    304            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
    305            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
    306            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
    307            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
    308            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
    309            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
    310            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
    311            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
    312            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
    313            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
    314            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
    315            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
    316            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
    317            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
    318            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
    319            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
    320            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
    321            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
    322            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
    323            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
    324            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
    325            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
    326            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
    327            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
    328            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
    329            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
    330            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u85
    331            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
    332            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
    333            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
    334            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
    335            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
    336            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
    337            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
    338            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
    339            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~94
    340          
    341          };
    342          //数据水平，字节垂直

   \                                 In section .data, align 4
    343          byte longqiu96x64[768] = {
   \                     longqiu96x64:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 192
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xC0         
   \   00000015   0xC0 0xC0          DC8 192, 192, 96, 96, 96, 48, 48, 48, 56, 24, 24, 24, 24, 12, 12, 12
   \              0x60 0x60    
   \              0x60 0x30    
   \              0x30 0x30    
   \              0x38 0x18    
   \              0x18 0x18    
   \              0x18 0x0C    
   \              0x0C 0x0C    
   \   00000025   0x0C 0x0C          DC8 12, 12, 14, 14, 14, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 14, 14
   \              0x0E 0x0E    
   \              0x0E 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x06 0x06    
   \              0x0E 0x0E    
   \   00000039   0x0C 0x0C          DC8 12, 12, 12, 12, 12, 28, 24, 24, 24, 24, 48, 48, 48, 112, 96, 96
   \              0x0C 0x0C    
   \              0x0C 0x1C    
   \              0x18 0x18    
   \              0x18 0x18    
   \              0x30 0x30    
   \              0x30 0x70    
   \              0x60 0x60    
   \   00000049   0xE0 0xC0          DC8 224, 192, 192, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xC0 0x80    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000005C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 192, 224, 112, 48, 56, 28, 12
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xC0 0xE0    
   \              0x70 0x30    
   \              0x38 0x1C    
   \              0x0C         
   \   0000006F   0x06 0x07          DC8 6, 7, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x03 0x03    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000086   0x80 0x80          DC8 128, 128, 128, 0, 0, 0, 0, 0, 128, 128, 240, 248, 248, 240, 128, 0
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0xF8    
   \              0xF8 0xF0    
   \              0x80 0x00    
   \   00000096   0x00 0x80          DC8 0, 128, 224, 240, 248, 252, 60, 28, 12, 12, 28, 252, 248, 240, 224
   \              0xE0 0xF0    
   \              0xF8 0xFC    
   \              0x3C 0x1C    
   \              0x0C 0x0C    
   \              0x1C 0xFC    
   \              0xF8 0xF0    
   \              0xE0         
   \   000000A5   0x80 0x00          DC8 128, 0, 0, 0, 192, 192, 193, 1, 3, 3, 7, 6, 14, 12, 24, 56, 112, 96
   \              0x00 0x00    
   \              0xC0 0xC0    
   \              0xC1 0x01    
   \              0x03 0x03    
   \              0x07 0x06    
   \              0x0E 0x0C    
   \              0x18 0x38    
   \              0x70 0x60    
   \   000000B7   0xC0 0x80          DC8 192, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 192, 240, 120, 30, 7, 51, 49
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xF0 0x78    
   \              0x1E 0x07    
   \              0x33 0x31    
   \   000000C9   0x38 0x78          DC8 56, 120, 252, 254, 246, 192, 128, 0, 0, 0, 0, 192, 192, 128, 0, 248
   \              0xFC 0xFE    
   \              0xF6 0xC0    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x80    
   \              0x00 0xF8    
   \   000000D9   0xFC 0xDE          DC8 252, 222, 14, 15, 30, 190, 252, 240, 6, 255, 255, 255, 255, 3, 7
   \              0x0E 0x0F    
   \              0x1E 0xBE    
   \              0xFC 0xF0    
   \              0x06 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0x03    
   \              0x07         
   \   000000E8   0xFF 0xFF          DC8 255, 255, 254, 128, 30, 63, 255, 255, 249, 249, 255, 255, 127, 31
   \              0xFE 0x80    
   \              0x1E 0x3F    
   \              0xFF 0xFF    
   \              0xF9 0xF9    
   \              0xFF 0xFF    
   \              0x7F 0x1F    
   \   000000F6   0x0E 0x7F          DC8 14, 127, 255, 255, 255, 193, 128, 206, 206, 198, 192, 255, 255, 255
   \              0xFF 0xFF    
   \              0xFF 0xC1    
   \              0x80 0xCE    
   \              0xCE 0xC6    
   \              0xC0 0xFF    
   \              0xFF 0xFF    
   \   00000104   0xFF 0x3F          DC8 255, 63, 128, 252, 252, 253, 125, 1, 192, 248, 248, 240, 112, 0
   \              0x80 0xFC    
   \              0xFC 0xFD    
   \              0x7D 0x01    
   \              0xC0 0xF8    
   \              0xF8 0xF0    
   \              0x70 0x00    
   \   00000112   0xC0 0x80          DC8 192, 128, 128, 128, 0, 0, 1, 7, 14, 60, 248, 224, 128, 0, 0, 254
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x01 0x07    
   \              0x0E 0x3C    
   \              0xF8 0xE0    
   \              0x80 0x00    
   \              0x00 0xFE    
   \   00000122   0xFF 0x03          DC8 255, 3, 0, 0, 0, 0, 0, 0, 0, 1, 3, 15, 31, 127, 254, 252, 240, 240
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x03 0x0F    
   \              0x1F 0x7F    
   \              0xFE 0xFC    
   \              0xF0 0xF0    
   \   00000134   0xF0 0x7F          DC8 240, 127, 127, 62, 16, 3, 3, 15, 31, 31, 15, 15, 3, 4, 7, 7, 7, 7
   \              0x7F 0x3E    
   \              0x10 0x03    
   \              0x03 0x0F    
   \              0x1F 0x1F    
   \              0x0F 0x0F    
   \              0x03 0x04    
   \              0x07 0x07    
   \              0x07 0x07    
   \   00000146   0x06 0x00          DC8 6, 0, 7, 7, 7, 15, 30, 63, 127, 127, 127, 121, 115, 63, 63, 31, 14
   \              0x07 0x07    
   \              0x07 0x0F    
   \              0x1E 0x3F    
   \              0x7F 0x7F    
   \              0x7F 0x79    
   \              0x73 0x3F    
   \              0x3F 0x1F    
   \              0x0E         
   \   00000157   0x00 0x01          DC8 0, 1, 3, 3, 7, 7, 6, 14, 15, 15, 31, 63, 61, 8, 12, 31, 31, 31, 25
   \              0x03 0x03    
   \              0x07 0x07    
   \              0x06 0x0E    
   \              0x0F 0x0F    
   \              0x1F 0x3F    
   \              0x3D 0x08    
   \              0x0C 0x1F    
   \              0x1F 0x1F    
   \              0x19         
   \   0000016A   0x3C 0x7F          DC8 60, 127, 127, 127, 243, 240, 252, 254, 63, 31, 7, 1, 0, 0, 0, 0, 0
   \              0x7F 0x7F    
   \              0xF3 0xF0    
   \              0xFC 0xFE    
   \              0x3F 0x1F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000017B   0x00 0x00          DC8 0, 0, 207, 255, 112, 0, 3, 31, 126, 240, 192, 0, 0, 0, 0, 0, 0, 0
   \              0xCF 0xFF    
   \              0x70 0x00    
   \              0x03 0x1F    
   \              0x7E 0xF0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000018D   0x00 0x00          DC8 0, 0, 0, 3, 3, 1, 1, 0, 0, 0, 0, 192, 192, 64, 64, 64, 64, 248, 120
   \              0x00 0x03    
   \              0x03 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x40    
   \              0x40 0x40    
   \              0x40 0xF8    
   \              0x78         
   \   000001A0   0x40 0xC0          DC8 64, 192, 64, 88, 88, 64, 64, 64, 0, 0, 0, 0, 0, 128, 128, 128, 0, 0
   \              0x40 0x58    
   \              0x58 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \   000001B2   0x00 0x00          DC8 0, 0, 0, 0, 96, 240, 224, 32, 32, 32, 32, 48, 48, 56, 24, 16, 0, 0
   \              0x00 0x00    
   \              0x60 0xF0    
   \              0xE0 0x20    
   \              0x20 0x20    
   \              0x20 0x30    
   \              0x30 0x38    
   \              0x18 0x10    
   \              0x00 0x00    
   \   000001C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001DA   0x80 0xE0          DC8 128, 224, 248, 63, 15, 0, 0, 0, 0, 0, 0, 3, 7, 14, 28, 56, 48, 96
   \              0xF8 0x3F    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x03    
   \              0x07 0x0E    
   \              0x1C 0x38    
   \              0x30 0x60    
   \   000001EC   0xE0 0xC0          DC8 224, 192, 128, 0, 0, 0, 0, 0, 0, 0, 64, 96, 96, 112, 48, 24, 12, 7
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x60    
   \              0x60 0x70    
   \              0x30 0x18    
   \              0x0C 0x07    
   \   000001FE   0x11 0x08          DC8 17, 8, 63, 125, 102, 231, 227, 192, 192, 192, 224, 96, 0, 0, 0, 3
   \              0x3F 0x7D    
   \              0x66 0xE7    
   \              0xE3 0xC0    
   \              0xC0 0xC0    
   \              0xE0 0x60    
   \              0x00 0x00    
   \              0x00 0x03    
   \   0000020E   0x03 0x03          DC8 3, 3, 0, 0, 96, 96, 96, 96, 96, 127, 127, 97, 97, 97, 97, 127, 127
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x60 0x60    
   \              0x60 0x7F    
   \              0x7F 0x61    
   \              0x61 0x61    
   \              0x61 0x7F    
   \              0x7F         
   \   0000021F   0x61 0x61          DC8 97, 97, 225, 224, 224, 192, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xE1 0xE0    
   \              0xE0 0xC0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000231   0x80 0xC0          DC8 128, 192, 192, 224, 112, 56, 24, 12, 7, 3, 1, 0, 0, 0, 0, 0, 0, 0
   \              0xC0 0xE0    
   \              0x70 0x38    
   \              0x18 0x0C    
   \              0x07 0x03    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000243   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 3, 6, 6, 12, 12, 24, 24, 56
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x03 0x03    
   \              0x06 0x06    
   \              0x0C 0x0C    
   \              0x18 0x18    
   \              0x38         
   \   00000258   0x30 0x30          DC8 48, 48, 112, 96, 96, 224, 192, 192, 192, 192, 192, 128, 128, 128
   \              0x70 0x60    
   \              0x60 0xE0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0x80    
   \              0x80 0x80    
   \   00000266   0x81 0x80          DC8 129, 128, 128, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80         
   \   00000277   0x80 0x80          DC8 128, 128, 128, 128, 128, 128, 128, 192, 192, 192, 192, 192, 96, 96
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0x60 0x60    
   \   00000285   0x60 0x30          DC8 96, 48, 48, 48, 24, 24, 28, 12, 14, 6, 7, 3, 3, 1, 0, 0, 0, 0, 0, 0
   \              0x30 0x30    
   \              0x18 0x18    
   \              0x1C 0x0C    
   \              0x0E 0x06    
   \              0x07 0x03    
   \              0x03 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000299   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000002B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01         
   \   000002C7   0x01 0x01          DC8 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01         
   \   000002DE   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000002F5   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    344          /* 
    345            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    346            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0X80,0XC0,0XC0,0XC0,
    347            0XC0,0XC0,0X60,0X60,0X60,0X60,0X60,0X70,0X70,0X70,0X30,0X30,0X30,0X30,0X30,0X30,
    348            0X30,0X30,0X30,0X30,0X30,0X30,0X30,0X70,0X70,0X60,0X60,0X60,0X60,0X60,0XE0,0XC0,
    349            0XC0,0XC0,0XC0,0X80,0X80,0X80,0X80,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    350            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    351            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0XC0,0XE0,0X60,0X30,
    352            0X38,0X18,0X1C,0X0C,0X0E,0X06,0X06,0X03,0X03,0X03,0X01,0X01,0X01,0X01,0X00,0X00,
    353            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    354            0X80,0XC0,0XC0,0X80,0X00,0X00,0X00,0X00,0X00,0X80,0XC0,0XE0,0XE0,0XE0,0X60,0X60,
    355            0XE0,0XE0,0XC0,0X81,0X01,0X01,0X03,0X03,0X03,0X07,0X06,0X0E,0X0C,0X1C,0X18,0X38,
    356            0X30,0X70,0X60,0XC0,0XC0,0X80,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    357            0X00,0X00,0X00,0X80,0XC0,0XF0,0X38,0X9C,0X8E,0XC7,0XC3,0XE1,0XF1,0XB0,0X00,0X00,
    358            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XC0,0XE0,0XF0,0X70,0X78,0XF0,0XF0,0XE0,
    359            0X80,0X30,0XF8,0XF8,0XF8,0XF8,0X1C,0X3C,0XFC,0XF8,0XF0,0X00,0XF0,0XF8,0XFC,0XFC,
    360            0XCF,0XCF,0XFF,0XFF,0XFC,0XF8,0X70,0XFC,0XFF,0XFF,0XFF,0X0F,0X01,0X70,0X70,0X30,
    361            0X00,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,0XE0,0XE0,0XEE,0XEE,0X0E,0X00,0XC0,0XC0,0X80,
    362            0X80,0X00,0X00,0X00,0X01,0X03,0X03,0X06,0X0C,0X3C,0X70,0XE0,0XC0,0X00,0X00,0X00,
    363            0X00,0XF0,0XFE,0X1F,0X03,0X00,0X00,0X01,0X01,0X01,0X03,0X0F,0X1F,0X7F,0XFE,0XFC,
    364            0XF0,0XE0,0X80,0X80,0X86,0XFE,0XFC,0XF0,0X87,0X1F,0X1E,0X78,0XF8,0XF8,0X7D,0X7F,
    365            0X1F,0X20,0X3F,0X3F,0X3F,0X3F,0X30,0X00,0X3F,0X3F,0X3F,0X7C,0XF0,0XF9,0XFF,0XFF,
    366            0XFF,0XCF,0X9F,0XFF,0XFB,0XF8,0X70,0X03,0X0F,0X1F,0X1F,0X3E,0X3C,0X36,0X76,0X7E,
    367            0X7E,0XFF,0XFF,0XEF,0X47,0X61,0XFC,0XFF,0XFF,0XCF,0XE3,0XF8,0XFE,0XFF,0X9F,0X87,
    368            0XE3,0XF0,0XFE,0XFC,0X3C,0X0C,0X00,0X00,0X00,0X00,0X00,0X01,0X07,0X7F,0XFC,0X80,
    369            0X00,0X1F,0XFF,0XF0,0X80,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,
    370            0X1F,0X1F,0X0F,0X0F,0X07,0X03,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0XC0,0XC0,
    371            0X00,0X00,0X00,0XC0,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X03,
    372            0X03,0X03,0X03,0X01,0X01,0X00,0X00,0X80,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0XC0,
    373            0XC0,0X80,0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X03,0X03,0X07,0X0F,
    374            0X0F,0X0F,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XC0,0XFE,0X7F,0X03,
    375            0X00,0X00,0X00,0X03,0X07,0X1E,0X38,0X70,0XE0,0XC0,0X80,0X00,0X00,0X00,0X00,0X00,
    376            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X06,0X86,0X82,0XC2,0X62,0X3A,0X8F,0X43,
    377            0XFA,0XEE,0X32,0X3A,0X1A,0X02,0X02,0X02,0X00,0X00,0X00,0X00,0X00,0X1C,0X1C,0X1C,
    378            0X00,0X00,0X00,0X00,0X00,0X00,0X03,0XFF,0XFF,0X09,0X09,0X09,0X09,0XF9,0XF9,0X09,
    379            0X08,0X08,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    380            0X00,0X00,0X00,0X00,0X00,0X80,0XC0,0XC0,0X60,0X38,0X1C,0X0F,0X07,0X01,0X00,0X00,
    381            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X01,0X03,0X07,0X0E,0X0C,0X18,
    382            0X18,0X30,0X30,0X60,0X60,0XC0,0XC2,0XC3,0X83,0X83,0X81,0X00,0X00,0X00,0X00,0X00,
    383            0X01,0X03,0X03,0X07,0X07,0X06,0X0E,0X06,0X07,0X03,0X00,0X00,0X00,0X00,0X00,0X00,
    384            0X00,0X00,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X03,
    385            0X03,0X07,0X07,0X07,0X06,0X06,0X80,0X80,0X80,0XC0,0XC0,0XE0,0X60,0X70,0X30,0X38,
    386            0X18,0X1C,0X0E,0X06,0X07,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    387            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    388            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X01,0X01,0X03,0X03,0X03,0X07,0X06,0X06,
    389            0X06,0X06,0X0E,0X0C,0X0C,0X0C,0X0C,0X0C,0X0C,0X1C,0X1C,0X1C,0X18,0X18,0X18,0X18,
    390            0X18,0X18,0X18,0X18,0X1C,0X1C,0X1C,0X0C,0X0C,0X0C,0X0C,0X0C,0X0C,0X0C,0X06,0X06,
    391            0X06,0X06,0X06,0X03,0X03,0X03,0X01,0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    392            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    393          */
    394          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    395          0X00,0X00,0X80,0X80,0XC0,0XC0,0XC0,0X60,0X60,0X60,0X30,0X30,0X30,0X38,0X18,0X18,
    396          0X18,0X18,0X0C,0X0C,0X0C,0X0C,0X0C,0X0E,0X0E,0X0E,0X06,0X06,0X06,0X06,0X06,0X06,
    397          0X06,0X06,0X06,0X06,0X06,0X06,0X06,0X0E,0X0E,0X0C,0X0C,0X0C,0X0C,0X0C,0X1C,0X18,
    398          0X18,0X18,0X18,0X30,0X30,0X30,0X70,0X60,0X60,0XE0,0XC0,0XC0,0X80,0X80,0X00,0X00,
    399          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    400          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0XC0,0XE0,0X70,0X30,0X38,0X1C,0X0C,0X06,
    401          0X07,0X03,0X03,0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    402          0X00,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0X80,0X00,0X00,0X00,0X00,0X00,0X80,0X80,
    403          0XF0,0XF8,0XF8,0XF0,0X80,0X00,0X00,0X80,0XE0,0XF0,0XF8,0XFC,0X3C,0X1C,0X0C,0X0C,
    404          0X1C,0XFC,0XF8,0XF0,0XE0,0X80,0X00,0X00,0X00,0XC0,0XC0,0XC1,0X01,0X03,0X03,0X07,
    405          0X06,0X0E,0X0C,0X18,0X38,0X70,0X60,0XC0,0X80,0X80,0X00,0X00,0X00,0X00,0X00,0X00,
    406          0X00,0X00,0XC0,0XF0,0X78,0X1E,0X07,0X33,0X31,0X38,0X78,0XFC,0XFE,0XF6,0XC0,0X80,
    407          0X00,0X00,0X00,0X00,0XC0,0XC0,0X80,0X00,0XF8,0XFC,0XDE,0X0E,0X0F,0X1E,0XBE,0XFC,
    408          0XF0,0X06,0XFF,0XFF,0XFF,0XFF,0X03,0X07,0XFF,0XFF,0XFE,0X80,0X1E,0X3F,0XFF,0XFF,
    409          0XF9,0XF9,0XFF,0XFF,0X7F,0X1F,0X0E,0X7F,0XFF,0XFF,0XFF,0XC1,0X80,0XCE,0XCE,0XC6,
    410          0XC0,0XFF,0XFF,0XFF,0XFF,0X3F,0X80,0XFC,0XFC,0XFD,0X7D,0X01,0XC0,0XF8,0XF8,0XF0,
    411          0X70,0X00,0XC0,0X80,0X80,0X80,0X00,0X00,0X01,0X07,0X0E,0X3C,0XF8,0XE0,0X80,0X00,
    412          0X00,0XFE,0XFF,0X03,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X0F,0X1F,0X7F,
    413          0XFE,0XFC,0XF0,0XF0,0XF0,0X7F,0X7F,0X3E,0X10,0X03,0X03,0X0F,0X1F,0X1F,0X0F,0X0F,
    414          0X03,0X04,0X07,0X07,0X07,0X07,0X06,0X00,0X07,0X07,0X07,0X0F,0X1E,0X3F,0X7F,0X7F,
    415          0X7F,0X79,0X73,0X3F,0X3F,0X1F,0X0E,0X00,0X01,0X03,0X03,0X07,0X07,0X06,0X0E,0X0F,
    416          0X0F,0X1F,0X3F,0X3D,0X08,0X0C,0X1F,0X1F,0X1F,0X19,0X3C,0X7F,0X7F,0X7F,0XF3,0XF0,
    417          0XFC,0XFE,0X3F,0X1F,0X07,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XCF,0XFF,0X70,
    418          0X00,0X03,0X1F,0X7E,0XF0,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    419          0X03,0X03,0X01,0X01,0X00,0X00,0X00,0X00,0XC0,0XC0,0X40,0X40,0X40,0X40,0XF8,0X78,
    420          0X40,0XC0,0X40,0X58,0X58,0X40,0X40,0X40,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0X80,
    421          0X00,0X00,0X00,0X00,0X00,0X00,0X60,0XF0,0XE0,0X20,0X20,0X20,0X20,0X30,0X30,0X38,
    422          0X18,0X10,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,
    423          0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0XE0,0XF8,0X3F,0X0F,0X00,
    424          0X00,0X00,0X00,0X00,0X00,0X03,0X07,0X0E,0X1C,0X38,0X30,0X60,0XE0,0XC0,0X80,0X00,
    425          0X00,0X00,0X00,0X00,0X00,0X00,0X40,0X60,0X60,0X70,0X30,0X18,0X0C,0X07,0X11,0X08,
    426          0X3F,0X7D,0X66,0XE7,0XE3,0XC0,0XC0,0XC0,0XE0,0X60,0X00,0X00,0X00,0X03,0X03,0X03,
    427          0X00,0X00,0X60,0X60,0X60,0X60,0X60,0X7F,0X7F,0X61,0X61,0X61,0X61,0X7F,0X7F,0X61,
    428          0X61,0XE1,0XE0,0XE0,0XC0,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    429          0X00,0X80,0XC0,0XC0,0XE0,0X70,0X38,0X18,0X0C,0X07,0X03,0X01,0X00,0X00,0X00,0X00,
    430          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X01,0X03,
    431          0X03,0X06,0X06,0X0C,0X0C,0X18,0X18,0X38,0X30,0X30,0X70,0X60,0X60,0XE0,0XC0,0XC0,
    432          0XC0,0XC0,0XC0,0X80,0X80,0X80,0X81,0X80,0X80,0X80,0X80,0X80,0X00,0X00,0X00,0X00,
    433          0X00,0X00,0X00,0X00,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0XC0,0XC0,
    434          0XC0,0XC0,0XC0,0X60,0X60,0X60,0X30,0X30,0X30,0X18,0X18,0X1C,0X0C,0X0E,0X06,0X07,
    435          0X03,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    436          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    437          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    438          0X00,0X00,0X01,0X01,0X01,0X01,0X01,0X01,0X01,0X03,0X03,0X03,0X03,0X03,0X03,0X03,
    439          0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X01,0X01,0X01,0X01,0X01,0X01,0X01,0X00,0X00,
    440          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    441          0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    442          
    443          };

   \                                 In section .rodata, align 4
    444          const byte LIBLOGO60x58[480] = { 
   \                     LIBLOGO60x58:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xC0         
   \   00000043   0xE0 0xF8          DC8 224, 248, 252, 254, 127, 63, 15, 15, 7, 7, 7, 135, 199, 199, 199
   \              0xFC 0xFE    
   \              0x7F 0x3F    
   \              0x0F 0x0F    
   \              0x07 0x07    
   \              0x07 0x87    
   \              0xC7 0xC7    
   \              0xC7         
   \   00000052   0xE7 0xEF          DC8 231, 239, 255, 255, 255, 239, 231, 231, 231, 231, 231, 239, 255
   \              0xFF 0xFF    
   \              0xFF 0xEF    
   \              0xE7 0xE7    
   \              0xE7 0xE7    
   \              0xE7 0xEF    
   \              0xFF         
   \   0000005F   0xFF 0xFF          DC8 255, 255, 239, 231, 231, 231, 231, 231, 247, 7, 15, 63, 127, 255
   \              0xEF 0xE7    
   \              0xE7 0xE7    
   \              0xE7 0xE7    
   \              0xF7 0x07    
   \              0x0F 0x3F    
   \              0x7F 0xFF    
   \   0000006D   0xFE 0xFC          DC8 254, 252, 240, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 220, 223
   \              0xF0 0xC0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xD8 0xDC    
   \              0xDF         
   \   0000007E   0xDF 0xDF          DC8 223, 223, 223, 215, 1, 0, 0, 0, 0, 0, 0, 62, 127, 255, 255, 227
   \              0xDF 0xD7    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x3E    
   \              0x7F 0xFF    
   \              0xFF 0xE3    
   \   0000008E   0xE1 0xE1          DC8 225, 225, 255, 255, 255, 224, 224, 224, 224, 224, 224, 224, 255
   \              0xFF 0xFF    
   \              0xFF 0xE0    
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xFF         
   \   0000009B   0xFF 0xFF          DC8 255, 255, 224, 224, 224, 224, 193, 131, 7, 0, 0, 0, 0, 1, 215, 223
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xC1 0x83    
   \              0x07 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0xD7 0xDF    
   \   000000AB   0xDF 0xDF          DC8 223, 223, 223, 220, 216, 0, 0, 0, 0, 0, 0, 0, 1, 3, 15, 31, 63, 255
   \              0xDF 0xDC    
   \              0xD8 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x03    
   \              0x0F 0x1F    
   \              0x3F 0xFF    
   \   000000BD   0xFF 0xFE          DC8 255, 254, 248, 240, 224, 192, 128, 0, 0, 248, 240, 224, 192, 192
   \              0xF8 0xF0    
   \              0xE0 0xC0    
   \              0x80 0x00    
   \              0x00 0xF8    
   \              0xF0 0xE0    
   \              0xC0 0xC0    
   \   000000CB   0xC0 0xFF          DC8 192, 255, 255, 255, 192, 192, 192, 192, 192, 192, 192, 255, 255
   \              0xFF 0xFF    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xFF    
   \              0xFF         
   \   000000D8   0xFF 0xC0          DC8 255, 192, 224, 225, 243, 255, 127, 63, 0, 192, 224, 248, 254, 255
   \              0xE0 0xE1    
   \              0xF3 0xFF    
   \              0x7F 0x3F    
   \              0x00 0xC0    
   \              0xE0 0xF8    
   \              0xFE 0xFF    
   \   000000E6   0xFF 0xFF          DC8 255, 255, 63, 31, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
   \              0x3F 0x1F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01         
   \   000000FB   0x07 0x0F          DC8 7, 15, 63, 127, 255, 254, 252, 249, 243, 193, 129, 1, 1, 255, 255
   \              0x3F 0x7F    
   \              0xFF 0xFE    
   \              0xFC 0xF9    
   \              0xF3 0xC1    
   \              0x81 0x01    
   \              0x01 0xFF    
   \              0xFF         
   \   0000010A   0xFF 0x01          DC8 255, 1, 1, 1, 1, 1, 1, 1, 255, 255, 255, 3, 1, 129, 192, 240, 252
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0xFF 0xFF    
   \              0xFF 0x03    
   \              0x01 0x81    
   \              0xC0 0xF0    
   \              0xFC         
   \   0000011B   0xFE 0xFF          DC8 254, 255, 255, 127, 63, 15, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xFF 0x7F    
   \              0x3F 0x0F    
   \              0x07 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000012E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 7, 15, 63, 127, 255
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x07    
   \              0x0F 0x3F    
   \              0x7F 0xFF    
   \   00000142   0xFF 0xFF          DC8 255, 255, 251, 243, 227, 195, 3, 3, 3, 3, 3, 131, 195, 243, 243
   \              0xFB 0xF3    
   \              0xE3 0xC3    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x83    
   \              0xC3 0xF3    
   \              0xF3         
   \   00000151   0xFB 0xFF          DC8 251, 255, 255, 255, 127, 63, 15, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xFF 0xFF    
   \              0x7F 0x3F    
   \              0x0F 0x03    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000164   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000017B   0x00 0x00          DC8 0, 0, 0, 3, 7, 7, 31, 63, 127, 255, 254, 252, 252, 254, 255, 255
   \              0x00 0x03    
   \              0x07 0x07    
   \              0x1F 0x3F    
   \              0x7F 0xFF    
   \              0xFE 0xFC    
   \              0xFC 0xFE    
   \              0xFF 0xFF    
   \   0000018B   0x7F 0x3F          DC8 127, 63, 15, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0F 0x07    
   \              0x03 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001B7   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 7, 15, 15, 7, 1, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x07    
   \              0x0F 0x0F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001CD   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    445            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    446            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    447            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    448            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    449            0X00,0X00,0XC0,0XE0,0XF8,0XFC,0XFE,0X7F,0X3F,0X0F,0X0F,0X07,0X07,0X07,0X87,0XC7,
    450            0XC7,0XC7,0XE7,0XEF,0XFF,0XFF,0XFF,0XEF,0XE7,0XE7,0XE7,0XE7,0XE7,0XEF,0XFF,0XFF,
    451            0XFF,0XEF,0XE7,0XE7,0XE7,0XE7,0XE7,0XF7,0X07,0X0F,0X3F,0X7F,0XFF,0XFE,0XFC,0XF0,
    452            0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XD8,0XDC,0XDF,0XDF,0XDF,
    453            0XDF,0XD7,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X3E,0X7F,0XFF,0XFF,0XE3,0XE1,0XE1,
    454            0XFF,0XFF,0XFF,0XE0,0XE0,0XE0,0XE0,0XE0,0XE0,0XE0,0XFF,0XFF,0XFF,0XE0,0XE0,0XE0,
    455            0XE0,0XC1,0X83,0X07,0X00,0X00,0X00,0X00,0X01,0XD7,0XDF,0XDF,0XDF,0XDF,0XDC,0XD8,
    456            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X0F,0X1F,0X3F,0XFF,0XFF,0XFE,0XF8,
    457            0XF0,0XE0,0XC0,0X80,0X00,0X00,0XF8,0XF0,0XE0,0XC0,0XC0,0XC0,0XFF,0XFF,0XFF,0XC0,
    458            0XC0,0XC0,0XC0,0XC0,0XC0,0XC0,0XFF,0XFF,0XFF,0XC0,0XE0,0XE1,0XF3,0XFF,0X7F,0X3F,
    459            0X00,0XC0,0XE0,0XF8,0XFE,0XFF,0XFF,0XFF,0X3F,0X1F,0X07,0X01,0X00,0X00,0X00,0X00,
    460            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X07,0X0F,0X3F,0X7F,0XFF,
    461            0XFE,0XFC,0XF9,0XF3,0XC1,0X81,0X01,0X01,0XFF,0XFF,0XFF,0X01,0X01,0X01,0X01,0X01,
    462            0X01,0X01,0XFF,0XFF,0XFF,0X03,0X01,0X81,0XC0,0XF0,0XFC,0XFE,0XFF,0XFF,0X7F,0X3F,
    463            0X0F,0X07,0X03,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    464            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,0X07,0X0F,0X3F,
    465            0X7F,0XFF,0XFF,0XFF,0XFB,0XF3,0XE3,0XC3,0X03,0X03,0X03,0X03,0X03,0X83,0XC3,0XF3,
    466            0XF3,0XFB,0XFF,0XFF,0XFF,0X7F,0X3F,0X0F,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,
    467            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    468            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,0X07,
    469            0X07,0X1F,0X3F,0X7F,0XFF,0XFE,0XFC,0XFC,0XFE,0XFF,0XFF,0X7F,0X3F,0X0F,0X07,0X03,
    470            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    471            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    472            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    473            0X00,0X03,0X07,0X0F,0X0F,0X07,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    474            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    475          }; 

   \                                 In section .text, align 4, keep-with-next
    476          void LCD_WrDat(byte data)
    477          {
    478          	byte i=8;
   \                     LCD_WrDat: (+1)
   \   00000000   0x2108             MOVS     R1,#+8
    479          	//LCD_CS=0;;
    480          	GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(17));;;;
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x400ff000
   \   00000006   0x6812             LDR      R2,[R2, #+0]
   \   00000008   0xF452 0x3200      ORRS     R2,R2,#0x20000
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable11  ;; 0x400ff000
   \   00000010   0x601A             STR      R2,[R3, #+0]
    481                  asm("nop"); 
   \   00000012   0xBF00             nop
    482                GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(14));;;;
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x400ff000
   \   00000018   0x6812             LDR      R2,[R2, #+0]
   \   0000001A   0xF432 0x4280      BICS     R2,R2,#0x4000
   \   0000001E   0x.... 0x....      LDR.W    R3,??DataTable11  ;; 0x400ff000
   \   00000022   0x601A             STR      R2,[R3, #+0]
    483                asm("nop");    
   \   00000024   0xBF00             nop
   \   00000026   0xE019             B.N      ??LCD_WrDat_0
    484            while(i--)
    485            {
    486              if(data&0x80){GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(15));;;;}
    487              else{GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(15));;;;}
   \                     ??LCD_WrDat_1: (+1)
   \   00000028   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x400ff000
   \   0000002C   0x6812             LDR      R2,[R2, #+0]
   \   0000002E   0xF432 0x4200      BICS     R2,R2,#0x8000
   \   00000032   0x.... 0x....      LDR.W    R3,??DataTable11  ;; 0x400ff000
   \   00000036   0x601A             STR      R2,[R3, #+0]
    488              GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(14)); 
   \                     ??LCD_WrDat_2: (+1)
   \   00000038   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x400ff000
   \   0000003C   0x6812             LDR      R2,[R2, #+0]
   \   0000003E   0xF452 0x4280      ORRS     R2,R2,#0x4000
   \   00000042   0x.... 0x....      LDR.W    R3,??DataTable11  ;; 0x400ff000
   \   00000046   0x601A             STR      R2,[R3, #+0]
    489              asm("nop");;;;
   \   00000048   0xBF00             nop
    490          		//asm("nop");            
    491              GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(14));;;;;    
   \   0000004A   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x400ff000
   \   0000004E   0x6812             LDR      R2,[R2, #+0]
   \   00000050   0xF432 0x4280      BICS     R2,R2,#0x4000
   \   00000054   0x.... 0x....      LDR.W    R3,??DataTable11  ;; 0x400ff000
   \   00000058   0x601A             STR      R2,[R3, #+0]
    492              data<<=1;    
   \   0000005A   0x0040             LSLS     R0,R0,#+1
   \                     ??LCD_WrDat_0: (+1)
   \   0000005C   0x000A             MOVS     R2,R1
   \   0000005E   0x1E51             SUBS     R1,R2,#+1
   \   00000060   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000062   0x2A00             CMP      R2,#+0
   \   00000064   0xD00A             BEQ.N    ??LCD_WrDat_3
   \   00000066   0x0602             LSLS     R2,R0,#+24
   \   00000068   0xD5DE             BPL.N    ??LCD_WrDat_1
   \   0000006A   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x400ff000
   \   0000006E   0x6812             LDR      R2,[R2, #+0]
   \   00000070   0xF452 0x4200      ORRS     R2,R2,#0x8000
   \   00000074   0x.... 0x....      LDR.W    R3,??DataTable11  ;; 0x400ff000
   \   00000078   0x601A             STR      R2,[R3, #+0]
   \   0000007A   0xE7DD             B.N      ??LCD_WrDat_2
    493            }
    494          	//LCD_CS=1;
    495          }
   \                     ??LCD_WrDat_3: (+1)
   \   0000007C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
    496          void LCD_WrCmd(byte cmd)
    497          {
    498          	byte i=8;
   \                     LCD_WrCmd: (+1)
   \   00000000   0x2108             MOVS     R1,#+8
    499          	
    500          	//LCD_CS=0;;
    501            GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(17));;;;;
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x400ff000
   \   00000006   0x6812             LDR      R2,[R2, #+0]
   \   00000008   0xF432 0x3200      BICS     R2,R2,#0x20000
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable11  ;; 0x400ff000
   \   00000010   0x601A             STR      R2,[R3, #+0]
    502            GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(14));;;;;
   \   00000012   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x400ff000
   \   00000016   0x6812             LDR      R2,[R2, #+0]
   \   00000018   0xF432 0x4280      BICS     R2,R2,#0x4000
   \   0000001C   0x.... 0x....      LDR.W    R3,??DataTable11  ;; 0x400ff000
   \   00000020   0x601A             STR      R2,[R3, #+0]
   \   00000022   0xE019             B.N      ??LCD_WrCmd_0
    503            //asm("nop");   
    504            while(i--)
    505            {
    506              if(cmd&0x80){GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(15));;;;;}
    507              else{GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(15));;;;;;}
   \                     ??LCD_WrCmd_1: (+1)
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x400ff000
   \   00000028   0x6812             LDR      R2,[R2, #+0]
   \   0000002A   0xF432 0x4200      BICS     R2,R2,#0x8000
   \   0000002E   0x.... 0x....      LDR.W    R3,??DataTable11  ;; 0x400ff000
   \   00000032   0x601A             STR      R2,[R3, #+0]
    508              GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(14));;;;;
   \                     ??LCD_WrCmd_2: (+1)
   \   00000034   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x400ff000
   \   00000038   0x6812             LDR      R2,[R2, #+0]
   \   0000003A   0xF452 0x4280      ORRS     R2,R2,#0x4000
   \   0000003E   0x.... 0x....      LDR.W    R3,??DataTable11  ;; 0x400ff000
   \   00000042   0x601A             STR      R2,[R3, #+0]
    509              asm("nop");;;;
   \   00000044   0xBF00             nop
    510          		//asm("nop");             
    511              GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(14));;;;;    
   \   00000046   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x400ff000
   \   0000004A   0x6812             LDR      R2,[R2, #+0]
   \   0000004C   0xF432 0x4280      BICS     R2,R2,#0x4000
   \   00000050   0x.... 0x....      LDR.W    R3,??DataTable11  ;; 0x400ff000
   \   00000054   0x601A             STR      R2,[R3, #+0]
    512              cmd<<=1;;;;;   
   \   00000056   0x0040             LSLS     R0,R0,#+1
   \                     ??LCD_WrCmd_0: (+1)
   \   00000058   0x000A             MOVS     R2,R1
   \   0000005A   0x1E51             SUBS     R1,R2,#+1
   \   0000005C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005E   0x2A00             CMP      R2,#+0
   \   00000060   0xD00A             BEQ.N    ??LCD_WrCmd_3
   \   00000062   0x0602             LSLS     R2,R0,#+24
   \   00000064   0xD5DE             BPL.N    ??LCD_WrCmd_1
   \   00000066   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x400ff000
   \   0000006A   0x6812             LDR      R2,[R2, #+0]
   \   0000006C   0xF452 0x4200      ORRS     R2,R2,#0x8000
   \   00000070   0x.... 0x....      LDR.W    R3,??DataTable11  ;; 0x400ff000
   \   00000074   0x601A             STR      R2,[R3, #+0]
   \   00000076   0xE7DD             B.N      ??LCD_WrCmd_2
    513            } 	
    514          	//LCD_CS=1;
    515          }
   \                     ??LCD_WrCmd_3: (+1)
   \   00000078   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    516          void LCD_Set_Pos(byte x, byte y)
    517          { 
   \                     LCD_Set_Pos: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    518            LCD_WrCmd(0xb0+y);
   \   00000004   0xF1B1 0x0050      SUBS     R0,R1,#+80
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       LCD_WrCmd
    519            LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x0920             LSRS     R0,R4,#+4
   \   00000012   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       LCD_WrCmd
    520            LCD_WrCmd((x&0x0f)|0x01); 
   \   0000001C   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000020   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LCD_WrCmd
    521          } 
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    522          void LCD_Fill(byte bmp_data)
    523          {
   \                     LCD_Fill: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    524          	byte y,x;
    525          	
    526          	for(y=0;y<8;y++)
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0xE008             B.N      ??LCD_Fill_0
    527          	{
    528          		LCD_WrCmd(0xb0+y);
    529          		LCD_WrCmd(0x01);
    530          		LCD_WrCmd(0x10);
    531          		for(x=0;x<X_WIDTH;x++)
    532          			LCD_WrDat(bmp_data);
   \                     ??LCD_Fill_1: (+1)
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       LCD_WrDat
   \   00000010   0x1C76             ADDS     R6,R6,#+1
   \                     ??LCD_Fill_2: (+1)
   \   00000012   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000014   0x2E80             CMP      R6,#+128
   \   00000016   0xDBF7             BLT.N    ??LCD_Fill_1
   \   00000018   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_Fill_0: (+1)
   \   0000001A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001C   0x2D08             CMP      R5,#+8
   \   0000001E   0xDA0C             BGE.N    ??LCD_Fill_3
   \   00000020   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LCD_WrCmd
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       LCD_WrCmd
   \   00000030   0x2010             MOVS     R0,#+16
   \   00000032   0x.... 0x....      BL       LCD_WrCmd
   \   00000036   0x2600             MOVS     R6,#+0
   \   00000038   0xE7EB             B.N      ??LCD_Fill_2
    533          	}
    534          }
   \                     ??LCD_Fill_3: (+1)
   \   0000003A   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
    535          void LCD_CLS(void)
    536          {
   \                     LCD_CLS: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    537          	byte y,x;	
    538          	for(y=0;y<8;y++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE007             B.N      ??LCD_CLS_0
    539          	{
    540          		LCD_WrCmd(0xb0+y);
    541          		LCD_WrCmd(0x01);
    542          		LCD_WrCmd(0x10); 
    543          		for(x=0;x<X_WIDTH;x++)
    544          			LCD_WrDat(0);
   \                     ??LCD_CLS_1: (+1)
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       LCD_WrDat
   \   0000000C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_CLS_2: (+1)
   \   0000000E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000010   0x2D80             CMP      R5,#+128
   \   00000012   0xDBF8             BLT.N    ??LCD_CLS_1
   \   00000014   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_CLS_0: (+1)
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x2C08             CMP      R4,#+8
   \   0000001A   0xDA0C             BGE.N    ??LCD_CLS_3
   \   0000001C   0xF1B4 0x0050      SUBS     R0,R4,#+80
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x.... 0x....      BL       LCD_WrCmd
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x.... 0x....      BL       LCD_WrCmd
   \   0000002C   0x2010             MOVS     R0,#+16
   \   0000002E   0x.... 0x....      BL       LCD_WrCmd
   \   00000032   0x2500             MOVS     R5,#+0
   \   00000034   0xE7EB             B.N      ??LCD_CLS_2
    545          	}
    546          }
   \                     ??LCD_CLS_3: (+1)
   \   00000036   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    547          void LCD_DLY_ms(word ms)
    548          {                         
   \                     LCD_DLY_ms: (+1)
   \   00000000   0xE007             B.N      ??LCD_DLY_ms_0
    549            word a;
    550            while(ms)
    551            {
    552              a=13350;
   \                     ??LCD_DLY_ms_1: (+1)
   \   00000002   0xF243 0x4126      MOVW     R1,#+13350
    553              while(a--);
   \                     ??LCD_DLY_ms_2: (+1)
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x1E51             SUBS     R1,R2,#+1
   \   0000000A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000000C   0x2A00             CMP      R2,#+0
   \   0000000E   0xD1FA             BNE.N    ??LCD_DLY_ms_2
    554              ms--;
   \   00000010   0x1E40             SUBS     R0,R0,#+1
    555            }
   \                     ??LCD_DLY_ms_0: (+1)
   \   00000012   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD1F4             BNE.N    ??LCD_DLY_ms_1
    556            return;
   \   00000018   0x4770             BX       LR               ;; return
    557          }
    558          

   \                                 In section .text, align 2, keep-with-next
    559          void LCD_Init(void)        
    560          {
   \                     LCD_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    561                  //设置PORTA pin14,pin15为GPIO口 
    562          	PORTA_PCR14=(0|PORT_PCR_MUX(1));
   \   00000002   0xF44F 0x7080      MOV      R0,#+256
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable11_1  ;; 0x40049038
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    563          	PORTA_PCR15=(0|PORT_PCR_MUX(1)); 
   \   0000000C   0xF44F 0x7080      MOV      R0,#+256
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable11_2  ;; 0x4004903c
   \   00000014   0x6008             STR      R0,[R1, #+0]
    564          	PORTA_PCR16=(0|PORT_PCR_MUX(1));
   \   00000016   0xF44F 0x7080      MOV      R0,#+256
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable11_3  ;; 0x40049040
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    565          	PORTA_PCR17=(0|PORT_PCR_MUX(1)); 
   \   00000020   0xF44F 0x7080      MOV      R0,#+256
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable11_4  ;; 0x40049044
   \   00000028   0x6008             STR      R0,[R1, #+0]
    566          	
    567          	//设置PORTA pin14,pin15为输出方向;pin16,pin17为输入方向
    568          	GPIOA_PDDR=GPIO_PDDR_PDD(GPIO_PIN(14)|GPIO_PIN(15)|GPIO_PIN(16)|GPIO_PIN(17));
   \   0000002A   0xF45F 0x3070      MOVS     R0,#+245760
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable11_5  ;; 0x400ff014
   \   00000032   0x6008             STR      R0,[R1, #+0]
    569          	
    570            
    571          	GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(14));
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x400ff000
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xF450 0x4080      ORRS     R0,R0,#0x4000
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable11  ;; 0x400ff000
   \   00000042   0x6008             STR      R0,[R1, #+0]
    572          	//LCD_CS=1;	//预制SLK和SS为高电平   	
    573          	
    574          	GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(16));
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x400ff000
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF430 0x3080      BICS     R0,R0,#0x10000
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable11  ;; 0x400ff000
   \   00000052   0x6008             STR      R0,[R1, #+0]
    575          	LCD_DLY_ms(50);
   \   00000054   0x2032             MOVS     R0,#+50
   \   00000056   0x.... 0x....      BL       LCD_DLY_ms
    576          	GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(16));
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x400ff000
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0xF450 0x3080      ORRS     R0,R0,#0x10000
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable11  ;; 0x400ff000
   \   00000068   0x6008             STR      R0,[R1, #+0]
    577          
    578            LCD_WrCmd(0xae);//--turn off oled panel
   \   0000006A   0x20AE             MOVS     R0,#+174
   \   0000006C   0x.... 0x....      BL       LCD_WrCmd
    579            LCD_WrCmd(0x00);//---set low column address
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0x.... 0x....      BL       LCD_WrCmd
    580            LCD_WrCmd(0x10);//---set high column address
   \   00000076   0x2010             MOVS     R0,#+16
   \   00000078   0x.... 0x....      BL       LCD_WrCmd
    581            LCD_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
   \   0000007C   0x2040             MOVS     R0,#+64
   \   0000007E   0x.... 0x....      BL       LCD_WrCmd
    582            LCD_WrCmd(0x81);//--set contrast control register
   \   00000082   0x2081             MOVS     R0,#+129
   \   00000084   0x.... 0x....      BL       LCD_WrCmd
    583            LCD_WrCmd(0xcf); // Set SEG Output Current Brightness
   \   00000088   0x20CF             MOVS     R0,#+207
   \   0000008A   0x.... 0x....      BL       LCD_WrCmd
    584            LCD_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
   \   0000008E   0x20A1             MOVS     R0,#+161
   \   00000090   0x.... 0x....      BL       LCD_WrCmd
    585            LCD_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
   \   00000094   0x20C8             MOVS     R0,#+200
   \   00000096   0x.... 0x....      BL       LCD_WrCmd
    586            LCD_WrCmd(0xa6);//--set normal display
   \   0000009A   0x20A6             MOVS     R0,#+166
   \   0000009C   0x.... 0x....      BL       LCD_WrCmd
    587            LCD_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
   \   000000A0   0x20A8             MOVS     R0,#+168
   \   000000A2   0x.... 0x....      BL       LCD_WrCmd
    588            LCD_WrCmd(0x3f);//--1/64 duty
   \   000000A6   0x203F             MOVS     R0,#+63
   \   000000A8   0x.... 0x....      BL       LCD_WrCmd
    589            LCD_WrCmd(0xd3);//-set display offset	Shift Mapping RAM Counter (0x00~0x3F)
   \   000000AC   0x20D3             MOVS     R0,#+211
   \   000000AE   0x.... 0x....      BL       LCD_WrCmd
    590            LCD_WrCmd(0x00);//-not offset
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x.... 0x....      BL       LCD_WrCmd
    591            LCD_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
   \   000000B8   0x20D5             MOVS     R0,#+213
   \   000000BA   0x.... 0x....      BL       LCD_WrCmd
    592            LCD_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
   \   000000BE   0x2080             MOVS     R0,#+128
   \   000000C0   0x.... 0x....      BL       LCD_WrCmd
    593            LCD_WrCmd(0xd9);//--set pre-charge period
   \   000000C4   0x20D9             MOVS     R0,#+217
   \   000000C6   0x.... 0x....      BL       LCD_WrCmd
    594            LCD_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
   \   000000CA   0x20F1             MOVS     R0,#+241
   \   000000CC   0x.... 0x....      BL       LCD_WrCmd
    595            LCD_WrCmd(0xda);//--set com pins hardware configuration
   \   000000D0   0x20DA             MOVS     R0,#+218
   \   000000D2   0x.... 0x....      BL       LCD_WrCmd
    596            LCD_WrCmd(0x12);
   \   000000D6   0x2012             MOVS     R0,#+18
   \   000000D8   0x.... 0x....      BL       LCD_WrCmd
    597            LCD_WrCmd(0xdb);//--set vcomh
   \   000000DC   0x20DB             MOVS     R0,#+219
   \   000000DE   0x.... 0x....      BL       LCD_WrCmd
    598            LCD_WrCmd(0x40);//Set VCOM Deselect Level
   \   000000E2   0x2040             MOVS     R0,#+64
   \   000000E4   0x.... 0x....      BL       LCD_WrCmd
    599            LCD_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
   \   000000E8   0x2020             MOVS     R0,#+32
   \   000000EA   0x.... 0x....      BL       LCD_WrCmd
    600            LCD_WrCmd(0x02);//
   \   000000EE   0x2002             MOVS     R0,#+2
   \   000000F0   0x.... 0x....      BL       LCD_WrCmd
    601            LCD_WrCmd(0x8d);//--set Charge Pump enable/disable
   \   000000F4   0x208D             MOVS     R0,#+141
   \   000000F6   0x.... 0x....      BL       LCD_WrCmd
    602            LCD_WrCmd(0x14);//--set(0x10) disable
   \   000000FA   0x2014             MOVS     R0,#+20
   \   000000FC   0x.... 0x....      BL       LCD_WrCmd
    603            LCD_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
   \   00000100   0x20A4             MOVS     R0,#+164
   \   00000102   0x.... 0x....      BL       LCD_WrCmd
    604            LCD_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
   \   00000106   0x20A6             MOVS     R0,#+166
   \   00000108   0x.... 0x....      BL       LCD_WrCmd
    605            LCD_WrCmd(0xaf);//--turn on oled panel
   \   0000010C   0x20AF             MOVS     R0,#+175
   \   0000010E   0x.... 0x....      BL       LCD_WrCmd
    606            LCD_Fill(0x00);  //初始清屏
   \   00000112   0x2000             MOVS     R0,#+0
   \   00000114   0x.... 0x....      BL       LCD_Fill
    607            LCD_Set_Pos(0,0); 
   \   00000118   0x2100             MOVS     R1,#+0
   \   0000011A   0x2000             MOVS     R0,#+0
   \   0000011C   0x.... 0x....      BL       LCD_Set_Pos
    608            LCD_Fill(0xff);//黑屏 
   \   00000120   0x20FF             MOVS     R0,#+255
   \   00000122   0x.... 0x....      BL       LCD_Fill
    609            delay_ms(100); 
   \   00000126   0x2064             MOVS     R0,#+100
   \   00000128   0x.... 0x....      BL       delay_ms
    610            LCD_Fill(0x00);//亮屏
   \   0000012C   0x2000             MOVS     R0,#+0
   \   0000012E   0x.... 0x....      BL       LCD_Fill
    611            delay_ms(100);     
   \   00000132   0x2064             MOVS     R0,#+100
   \   00000134   0x.... 0x....      BL       delay_ms
    612          }
   \   00000138   0xBD01             POP      {R0,PC}          ;; return
    613          
    614          
    615          //==============================================================
    616          //函数名： void LCD_PutPixel(byte x,byte y)
    617          //功能描述：绘制一个点（x,y）
    618          //参数：真实坐标值(x,y),x的范围0～127，y的范围0～64
    619          //返回：无
    620          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    621          void LCD_PutPixel(byte x,byte y)
    622          {
   \                     LCD_PutPixel: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    623            byte data1;  //data1当前点的数据 
    624          	 
    625            LCD_Set_Pos(x,y); 
   \   00000006   0x0029             MOVS     R1,R5
   \   00000008   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_Set_Pos
    626            data1 = 0x01<<(y%8); 	
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000016   0x2108             MOVS     R1,#+8
   \   00000018   0xFB95 0xF2F1      SDIV     R2,R5,R1
   \   0000001C   0xFB02 0x5211      MLS      R2,R2,R1,R5
   \   00000020   0xFA10 0xF602      LSLS     R6,R0,R2
    627            LCD_WrCmd(0xb0+(y>>3));
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x08E8             LSRS     R0,R5,#+3
   \   00000028   0x3850             SUBS     R0,R0,#+80
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       LCD_WrCmd
    628            LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x0920             LSRS     R0,R4,#+4
   \   00000034   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0x.... 0x....      BL       LCD_WrCmd
    629            LCD_WrCmd((x&0x0f)|0x00);
   \   0000003E   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000042   0x.... 0x....      BL       LCD_WrCmd
    630            LCD_WrDat(data1); 	 	
   \   00000046   0x0030             MOVS     R0,R6
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0x.... 0x....      BL       LCD_WrDat
    631          }
   \   0000004E   0xBD70             POP      {R4-R6,PC}       ;; return
    632          
    633          
    634          //==============================================================
    635          //函数名： void LCD_Rectangle(byte x1,byte y1,
    636          //                   byte x2,byte y2,byte color,byte gif)
    637          //功能描述：绘制一个实心矩形
    638          //参数：左上角坐标（x1,y1）,右下角坐标（x2，y2）
    639          //      其中x1、x2的范围0～127，y1，y2的范围0～63，即真实坐标值
    640          //返回：无
    641          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    642          void LCD_Rectangle(byte x1,byte y1,byte x2,byte y2,byte gif)
    643          {
   \                     LCD_Rectangle: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0017             MOVS     R7,R2
   \   0000000A   0x4698             MOV      R8,R3
    644            byte n; 
    645          		
    646            LCD_Set_Pos(x1,y1>>3);
   \   0000000C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000000E   0x08F1             LSRS     R1,R6,#+3
   \   00000010   0x0028             MOVS     R0,R5
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      BL       LCD_Set_Pos
    647            for(n=x1;n<=x2;n++)
   \   00000018   0x46A9             MOV      R9,R5
   \   0000001A   0x9C08             LDR      R4,[SP, #+32]
   \   0000001C   0xE012             B.N      ??LCD_Rectangle_0
    648            {
    649              LCD_WrDat(0x01<<(y1%8)); 			
   \                     ??LCD_Rectangle_1: (+1)
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000022   0x2108             MOVS     R1,#+8
   \   00000024   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000028   0xFB02 0x6211      MLS      R2,R2,R1,R6
   \   0000002C   0x4090             LSLS     R0,R0,R2
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x.... 0x....      BL       LCD_WrDat
    650              if(gif == 1) LCD_DLY_ms(50);
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0x2C01             CMP      R4,#+1
   \   00000038   0xD102             BNE.N    ??LCD_Rectangle_2
   \   0000003A   0x2032             MOVS     R0,#+50
   \   0000003C   0x.... 0x....      BL       LCD_DLY_ms
    651            }  
   \                     ??LCD_Rectangle_2: (+1)
   \   00000040   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_Rectangle_0: (+1)
   \   00000044   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000046   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004A   0x454F             CMP      R7,R9
   \   0000004C   0xD2E7             BCS.N    ??LCD_Rectangle_1
    652            LCD_Set_Pos(x1,y2>>3);
   \   0000004E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000052   0xEA5F 0x01D8      LSRS     R1,R8,#+3
   \   00000056   0x0028             MOVS     R0,R5
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x.... 0x....      BL       LCD_Set_Pos
    653            for(n=x1;n<=x2;n++)
   \   0000005E   0x46A9             MOV      R9,R5
   \   00000060   0xE013             B.N      ??LCD_Rectangle_3
    654            {
    655              LCD_WrDat(0x01<<(y2%8)); 			
   \                     ??LCD_Rectangle_4: (+1)
   \   00000062   0x2001             MOVS     R0,#+1
   \   00000064   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000068   0x2108             MOVS     R1,#+8
   \   0000006A   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   0000006E   0xFB02 0x8211      MLS      R2,R2,R1,R8
   \   00000072   0x4090             LSLS     R0,R0,R2
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x.... 0x....      BL       LCD_WrDat
    656              if(gif == 1) LCD_DLY_ms(5);
   \   0000007A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007C   0x2C01             CMP      R4,#+1
   \   0000007E   0xD102             BNE.N    ??LCD_Rectangle_5
   \   00000080   0x2005             MOVS     R0,#+5
   \   00000082   0x.... 0x....      BL       LCD_DLY_ms
    657            }
   \                     ??LCD_Rectangle_5: (+1)
   \   00000086   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_Rectangle_3: (+1)
   \   0000008A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000008C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000090   0x454F             CMP      R7,R9
   \   00000092   0xD2E6             BCS.N    ??LCD_Rectangle_4
    658          } 
   \   00000094   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    659          
    660          
    661          //直接输出数字------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    662          void LCD_P8x16_number(byte x,byte y,int data)         //x:列号,y:行号
    663          {
   \                     LCD_P8x16_number: (+1)
   \   00000000   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    664            byte c=0,i=0,j=0;  
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    665            byte num[5];
    666            
    667            num[0]=data/100;
   \   00000010   0x2064             MOVS     R0,#+100
   \   00000012   0xFB92 0xF0F0      SDIV     R0,R2,R0
   \   00000016   0xF88D 0x0000      STRB     R0,[SP, #+0]
    668            num[1]=data%100/10;
   \   0000001A   0x2064             MOVS     R0,#+100
   \   0000001C   0xFB92 0xF1F0      SDIV     R1,R2,R0
   \   00000020   0xFB00 0x2011      MLS      R0,R0,R1,R2
   \   00000024   0x210A             MOVS     R1,#+10
   \   00000026   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000002A   0xF88D 0x0001      STRB     R0,[SP, #+1]
    669            num[2]=data%10;
   \   0000002E   0x200A             MOVS     R0,#+10
   \   00000030   0xFB92 0xF1F0      SDIV     R1,R2,R0
   \   00000034   0xFB00 0x2011      MLS      R0,R0,R1,R2
   \   00000038   0xF88D 0x0002      STRB     R0,[SP, #+2]
    670            
    671            for(j=0;j<3;j++)
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x4680             MOV      R8,R0
   \   00000040   0xE010             B.N      ??LCD_P8x16_number_0
    672            {    
    673              c=num[j]+16;
    674              if(x>120){x=0;y++;}
    675              LCD_Set_Pos(x,y);    
    676              for(i=0;i<8;i++)     
    677                LCD_WrDat(F8X16[c*16+i]);
    678              LCD_Set_Pos(x,y+1);    
    679              for(i=0;i<8;i++)     
    680                LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16_number_1: (+1)
   \   00000042   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000044   0x0130             LSLS     R0,R6,#+4
   \   00000046   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable11_6
   \   0000004E   0x1840             ADDS     R0,R0,R1
   \   00000050   0x7A00             LDRB     R0,[R0, #+8]
   \   00000052   0x.... 0x....      BL       LCD_WrDat
   \   00000056   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P8x16_number_2: (+1)
   \   00000058   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000005A   0x2F08             CMP      R7,#+8
   \   0000005C   0xDBF1             BLT.N    ??LCD_P8x16_number_1
    681              x+=8;
   \   0000005E   0x3408             ADDS     R4,R4,#+8
   \   00000060   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16_number_0: (+1)
   \   00000064   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000068   0xF1B8 0x0F03      CMP      R8,#+3
   \   0000006C   0xDA28             BGE.N    ??LCD_P8x16_number_3
   \   0000006E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000072   0xA800             ADD      R0,SP,#+0
   \   00000074   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   00000078   0xF110 0x0610      ADDS     R6,R0,#+16
   \   0000007C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007E   0x2C79             CMP      R4,#+121
   \   00000080   0xDB01             BLT.N    ??LCD_P8x16_number_4
   \   00000082   0x2400             MOVS     R4,#+0
   \   00000084   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P8x16_number_4: (+1)
   \   00000086   0x0029             MOVS     R1,R5
   \   00000088   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000008A   0x0020             MOVS     R0,R4
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x.... 0x....      BL       LCD_Set_Pos
   \   00000092   0x2700             MOVS     R7,#+0
   \   00000094   0xE009             B.N      ??LCD_P8x16_number_5
   \                     ??LCD_P8x16_number_6: (+1)
   \   00000096   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000098   0x0130             LSLS     R0,R6,#+4
   \   0000009A   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable11_6
   \   000000A2   0x5C40             LDRB     R0,[R0, R1]
   \   000000A4   0x.... 0x....      BL       LCD_WrDat
   \   000000A8   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P8x16_number_5: (+1)
   \   000000AA   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000AC   0x2F08             CMP      R7,#+8
   \   000000AE   0xDBF2             BLT.N    ??LCD_P8x16_number_6
   \   000000B0   0x1C69             ADDS     R1,R5,#+1
   \   000000B2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B4   0x0020             MOVS     R0,R4
   \   000000B6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B8   0x.... 0x....      BL       LCD_Set_Pos
   \   000000BC   0x2700             MOVS     R7,#+0
   \   000000BE   0xE7CB             B.N      ??LCD_P8x16_number_2
    682            }
    683          } 
   \                     ??LCD_P8x16_number_3: (+1)
   \   000000C0   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    684           
    685          

   \                                 In section .text, align 2, keep-with-next
    686          void LCD_P8x16_number_4(byte x,byte y,int data)
    687          {
   \                     LCD_P8x16_number_4: (+1)
   \   00000000   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    688            byte c=0,i=0,j=0;
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    689            byte num[5];
    690            
    691            num[0]=data/1000;
   \   00000010   0xF44F 0x707A      MOV      R0,#+1000
   \   00000014   0xFB92 0xF0F0      SDIV     R0,R2,R0
   \   00000018   0xF88D 0x0000      STRB     R0,[SP, #+0]
    692            num[1]=data%1000/100;
   \   0000001C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000020   0xFB92 0xF1F0      SDIV     R1,R2,R0
   \   00000024   0xFB00 0x2011      MLS      R0,R0,R1,R2
   \   00000028   0x2164             MOVS     R1,#+100
   \   0000002A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000002E   0xF88D 0x0001      STRB     R0,[SP, #+1]
    693            num[2]=data%100/10;
   \   00000032   0x2064             MOVS     R0,#+100
   \   00000034   0xFB92 0xF1F0      SDIV     R1,R2,R0
   \   00000038   0xFB00 0x2011      MLS      R0,R0,R1,R2
   \   0000003C   0x210A             MOVS     R1,#+10
   \   0000003E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000042   0xF88D 0x0002      STRB     R0,[SP, #+2]
    694            num[3]=data%10;
   \   00000046   0x200A             MOVS     R0,#+10
   \   00000048   0xFB92 0xF1F0      SDIV     R1,R2,R0
   \   0000004C   0xFB00 0x2011      MLS      R0,R0,R1,R2
   \   00000050   0xF88D 0x0003      STRB     R0,[SP, #+3]
    695            for(j=0;j<4;j++)
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x4680             MOV      R8,R0
   \   00000058   0xE010             B.N      ??LCD_P8x16_number_4_0
    696            {    
    697              c=num[j]+16;
    698              if(x>120){x=0;y++;}
    699              LCD_Set_Pos(x,y);    
    700              for(i=0;i<8;i++)     
    701                LCD_WrDat(F8X16[c*16+i]);
    702              LCD_Set_Pos(x,y+1);    
    703              for(i=0;i<8;i++)     
    704                LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16_number_4_1: (+1)
   \   0000005A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005C   0x0130             LSLS     R0,R6,#+4
   \   0000005E   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable11_6
   \   00000066   0x1840             ADDS     R0,R0,R1
   \   00000068   0x7A00             LDRB     R0,[R0, #+8]
   \   0000006A   0x.... 0x....      BL       LCD_WrDat
   \   0000006E   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P8x16_number_4_2: (+1)
   \   00000070   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000072   0x2F08             CMP      R7,#+8
   \   00000074   0xDBF1             BLT.N    ??LCD_P8x16_number_4_1
    705              x+=8;
   \   00000076   0x3408             ADDS     R4,R4,#+8
   \   00000078   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16_number_4_0: (+1)
   \   0000007C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000080   0xF1B8 0x0F04      CMP      R8,#+4
   \   00000084   0xDA28             BGE.N    ??LCD_P8x16_number_4_3
   \   00000086   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000008A   0xA800             ADD      R0,SP,#+0
   \   0000008C   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   00000090   0xF110 0x0610      ADDS     R6,R0,#+16
   \   00000094   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000096   0x2C79             CMP      R4,#+121
   \   00000098   0xDB01             BLT.N    ??LCD_P8x16_number_4_4
   \   0000009A   0x2400             MOVS     R4,#+0
   \   0000009C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P8x16_number_4_4: (+1)
   \   0000009E   0x0029             MOVS     R1,R5
   \   000000A0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A2   0x0020             MOVS     R0,R4
   \   000000A4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A6   0x.... 0x....      BL       LCD_Set_Pos
   \   000000AA   0x2700             MOVS     R7,#+0
   \   000000AC   0xE009             B.N      ??LCD_P8x16_number_4_5
   \                     ??LCD_P8x16_number_4_6: (+1)
   \   000000AE   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000B0   0x0130             LSLS     R0,R6,#+4
   \   000000B2   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable11_6
   \   000000BA   0x5C40             LDRB     R0,[R0, R1]
   \   000000BC   0x.... 0x....      BL       LCD_WrDat
   \   000000C0   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P8x16_number_4_5: (+1)
   \   000000C2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000C4   0x2F08             CMP      R7,#+8
   \   000000C6   0xDBF2             BLT.N    ??LCD_P8x16_number_4_6
   \   000000C8   0x1C69             ADDS     R1,R5,#+1
   \   000000CA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000CC   0x0020             MOVS     R0,R4
   \   000000CE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D0   0x.... 0x....      BL       LCD_Set_Pos
   \   000000D4   0x2700             MOVS     R7,#+0
   \   000000D6   0xE7CB             B.N      ??LCD_P8x16_number_4_2
    706            }
    707          } 
   \                     ??LCD_P8x16_number_4_3: (+1)
   \   000000D8   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    708          
    709          
    710          //====================================================================
    711          //函数名：void LCD_P8x16_number(uint8 x,uint8 y,uint32 data)
    712          //功能描述：可以直接显示一个5位数字
    713          //参数：显示的位置（x,y）,显示的内容
    714          //返回：无
    715          //====================================================================

   \                                 In section .text, align 2, keep-with-next
    716          void LCD_P8x16_number_5(byte x,byte y,int data)
    717          {
   \                     LCD_P8x16_number_5: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB086             SUB      SP,SP,#+24
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
    718            int c=0,i=0,j=0;
   \   0000000A   0x2600             MOVS     R6,#+0
   \   0000000C   0x2700             MOVS     R7,#+0
   \   0000000E   0xF05F 0x0800      MOVS     R8,#+0
    719            
    720            int num[5];
    721            
    722            num[0]=data/10000;
   \   00000012   0xF242 0x7010      MOVW     R0,#+10000
   \   00000016   0xFB92 0xF0F0      SDIV     R0,R2,R0
   \   0000001A   0x9000             STR      R0,[SP, #+0]
    723            num[1]=data/1000%10;
   \   0000001C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000020   0xFB92 0xF0F0      SDIV     R0,R2,R0
   \   00000024   0x210A             MOVS     R1,#+10
   \   00000026   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   0000002A   0xFB01 0x0013      MLS      R0,R1,R3,R0
   \   0000002E   0x9001             STR      R0,[SP, #+4]
    724            num[2]=data/100%10;
   \   00000030   0x2064             MOVS     R0,#+100
   \   00000032   0xFB92 0xF0F0      SDIV     R0,R2,R0
   \   00000036   0x210A             MOVS     R1,#+10
   \   00000038   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   0000003C   0xFB01 0x0013      MLS      R0,R1,R3,R0
   \   00000040   0x9002             STR      R0,[SP, #+8]
    725            num[3]=data/10%10;
   \   00000042   0x200A             MOVS     R0,#+10
   \   00000044   0xFB92 0xF0F0      SDIV     R0,R2,R0
   \   00000048   0x210A             MOVS     R1,#+10
   \   0000004A   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   0000004E   0xFB01 0x0013      MLS      R0,R1,R3,R0
   \   00000052   0x9003             STR      R0,[SP, #+12]
    726            num[4]=data%10;
   \   00000054   0x200A             MOVS     R0,#+10
   \   00000056   0xFB92 0xF1F0      SDIV     R1,R2,R0
   \   0000005A   0xFB00 0x2011      MLS      R0,R0,R1,R2
   \   0000005E   0x9004             STR      R0,[SP, #+16]
    727            
    728            for(j=0;j<5;j++)
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x4680             MOV      R8,R0
   \   00000064   0xE00D             B.N      ??LCD_P8x16_number_5_0
    729            {    
    730              c=num[j]+16;
    731              if(x>120){x=0;y++;}
    732              LCD_Set_Pos(x,y);    
    733              for(i=0;i<8;i++)     
    734                LCD_WrDat(F8X16[c*16+i]);
    735              LCD_Set_Pos(x,y+1);    
    736              for(i=0;i<8;i++)     
    737                LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16_number_5_1: (+1)
   \   00000066   0xEB17 0x1006      ADDS     R0,R7,R6, LSL #+4
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable11_6
   \   0000006E   0x1840             ADDS     R0,R0,R1
   \   00000070   0x7A00             LDRB     R0,[R0, #+8]
   \   00000072   0x.... 0x....      BL       LCD_WrDat
   \   00000076   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P8x16_number_5_2: (+1)
   \   00000078   0x2F08             CMP      R7,#+8
   \   0000007A   0xDBF4             BLT.N    ??LCD_P8x16_number_5_1
    738              x+=8;
   \   0000007C   0x3408             ADDS     R4,R4,#+8
   \   0000007E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16_number_5_0: (+1)
   \   00000082   0xF1B8 0x0F05      CMP      R8,#+5
   \   00000086   0xDA23             BGE.N    ??LCD_P8x16_number_5_3
   \   00000088   0xA800             ADD      R0,SP,#+0
   \   0000008A   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000008E   0xF110 0x0610      ADDS     R6,R0,#+16
   \   00000092   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000094   0x2C79             CMP      R4,#+121
   \   00000096   0xDB01             BLT.N    ??LCD_P8x16_number_5_4
   \   00000098   0x2400             MOVS     R4,#+0
   \   0000009A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P8x16_number_5_4: (+1)
   \   0000009C   0x0029             MOVS     R1,R5
   \   0000009E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A0   0x0020             MOVS     R0,R4
   \   000000A2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A4   0x.... 0x....      BL       LCD_Set_Pos
   \   000000A8   0x2700             MOVS     R7,#+0
   \   000000AA   0xE007             B.N      ??LCD_P8x16_number_5_5
   \                     ??LCD_P8x16_number_5_6: (+1)
   \   000000AC   0xEB17 0x1006      ADDS     R0,R7,R6, LSL #+4
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable11_6
   \   000000B4   0x5C40             LDRB     R0,[R0, R1]
   \   000000B6   0x.... 0x....      BL       LCD_WrDat
   \   000000BA   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P8x16_number_5_5: (+1)
   \   000000BC   0x2F08             CMP      R7,#+8
   \   000000BE   0xDBF5             BLT.N    ??LCD_P8x16_number_5_6
   \   000000C0   0x1C69             ADDS     R1,R5,#+1
   \   000000C2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C4   0x0020             MOVS     R0,R4
   \   000000C6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C8   0x.... 0x....      BL       LCD_Set_Pos
   \   000000CC   0x2700             MOVS     R7,#+0
   \   000000CE   0xE7D3             B.N      ??LCD_P8x16_number_5_2
    739            }
    740          }
   \                     ??LCD_P8x16_number_5_3: (+1)
   \   000000D0   0xB006             ADD      SP,SP,#+24
   \   000000D2   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    741          
    742          
    743          //==============================================================
    744          //函数名：LCD_P6x8Str(byte x,byte y,byte *p)
    745          //功能描述：写入一组标准ASCII字符串
    746          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    747          //返回：无
    748          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    749          void LCD_P6x8Str(byte x,byte y,byte ch[])
    750          {
   \                     LCD_P6x8Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    751            byte c=0,i=0,j=0;      
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE015             B.N      ??LCD_P6x8Str_0
    752            while (ch[j]!='\0')
    753            {    
    754              c =ch[j]-32;
    755              if(x>126){x=0;y++;}
    756              LCD_Set_Pos(x,y);    
    757              for(i=0;i<6;i++)     
    758                LCD_WrDat(F6x8[c][i]);  
   \                     ??LCD_P6x8Str_1: (+1)
   \   00000016   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000001A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001C   0x2006             MOVS     R0,#+6
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   00000022   0xFB00 0x1007      MLA      R0,R0,R7,R1
   \   00000026   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   0000002A   0x.... 0x....      BL       LCD_WrDat
   \   0000002E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P6x8Str_2: (+1)
   \   00000032   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000036   0xF1B8 0x0F06      CMP      R8,#+6
   \   0000003A   0xDBEC             BLT.N    ??LCD_P6x8Str_1
    759              x+=6;
   \   0000003C   0x1DA4             ADDS     R4,R4,#+6
    760              j++;
   \   0000003E   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P6x8Str_0: (+1)
   \   00000042   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000046   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD013             BEQ.N    ??LCD_P6x8Str_3
   \   0000004E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000052   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000056   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   0000005A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005C   0x2C7F             CMP      R4,#+127
   \   0000005E   0xDB01             BLT.N    ??LCD_P6x8Str_4
   \   00000060   0x2400             MOVS     R4,#+0
   \   00000062   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P6x8Str_4: (+1)
   \   00000064   0x0029             MOVS     R1,R5
   \   00000066   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000068   0x0020             MOVS     R0,R4
   \   0000006A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006C   0x.... 0x....      BL       LCD_Set_Pos
   \   00000070   0xF05F 0x0800      MOVS     R8,#+0
   \   00000074   0xE7DD             B.N      ??LCD_P6x8Str_2
    761            }
    762          }
   \                     ??LCD_P6x8Str_3: (+1)
   \   00000076   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    763          
    764          
    765          //==============================================================
    766          //函数名：LCD_P8x16Str(byte x,byte y,byte *p)
    767          //功能描述：写入一组标准ASCII字符串
    768          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    769          //返回：无
    770          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    771          void LCD_P8x16Str(byte x,byte y,byte ch[])
    772          {
   \                     LCD_P8x16Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    773            byte c=0,i=0,j=0;
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE013             B.N      ??LCD_P8x16Str_0
    774                  
    775            while (ch[j]!='\0')
    776            {    
    777              c =ch[j]-32;
    778              if(x>120){x=0;y++;}
    779              LCD_Set_Pos(x,y);    
    780              for(i=0;i<8;i++)     
    781                LCD_WrDat(F8X16[c*16+i]);
    782              LCD_Set_Pos(x,y+1);    
    783              for(i=0;i<8;i++)     
    784                LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16Str_1: (+1)
   \   00000016   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000018   0x0138             LSLS     R0,R7,#+4
   \   0000001A   0xFA50 0xF088      UXTAB    R0,R0,R8
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable11_6
   \   00000022   0x1840             ADDS     R0,R0,R1
   \   00000024   0x7A00             LDRB     R0,[R0, #+8]
   \   00000026   0x.... 0x....      BL       LCD_WrDat
   \   0000002A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Str_2: (+1)
   \   0000002E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000032   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000036   0xDBEE             BLT.N    ??LCD_P8x16Str_1
    785              x+=8;
   \   00000038   0x3408             ADDS     R4,R4,#+8
    786              j++;
   \   0000003A   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P8x16Str_0: (+1)
   \   0000003E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000042   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD02C             BEQ.N    ??LCD_P8x16Str_3
   \   0000004A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004E   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000052   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   00000056   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000058   0x2C79             CMP      R4,#+121
   \   0000005A   0xDB01             BLT.N    ??LCD_P8x16Str_4
   \   0000005C   0x2400             MOVS     R4,#+0
   \   0000005E   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P8x16Str_4: (+1)
   \   00000060   0x0029             MOVS     R1,R5
   \   00000062   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000064   0x0020             MOVS     R0,R4
   \   00000066   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   0x.... 0x....      BL       LCD_Set_Pos
   \   0000006C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000070   0xE00A             B.N      ??LCD_P8x16Str_5
   \                     ??LCD_P8x16Str_6: (+1)
   \   00000072   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000074   0x0138             LSLS     R0,R7,#+4
   \   00000076   0xFA50 0xF088      UXTAB    R0,R0,R8
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable11_6
   \   0000007E   0x5C40             LDRB     R0,[R0, R1]
   \   00000080   0x.... 0x....      BL       LCD_WrDat
   \   00000084   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Str_5: (+1)
   \   00000088   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000008C   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000090   0xDBEF             BLT.N    ??LCD_P8x16Str_6
   \   00000092   0x1C69             ADDS     R1,R5,#+1
   \   00000094   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000096   0x0020             MOVS     R0,R4
   \   00000098   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009A   0x.... 0x....      BL       LCD_Set_Pos
   \   0000009E   0xF05F 0x0800      MOVS     R8,#+0
   \   000000A2   0xE7C4             B.N      ??LCD_P8x16Str_2
    787            }
    788          }
   \                     ??LCD_P8x16Str_3: (+1)
   \   000000A4   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    789          
    790          
    791          //输出汉字字符串

   \                                 In section .text, align 2, keep-with-next
    792          void LCD_P14x16Str(byte x,byte y,byte ch[])
    793          {
   \                     LCD_P14x16Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0006             MOVS     R6,R0
   \   00000006   0x000C             MOVS     R4,R1
   \   00000008   0x0015             MOVS     R5,R2
    794            byte wm=0,ii = 0;
   \   0000000A   0xF05F 0x0900      MOVS     R9,#+0
   \   0000000E   0x2700             MOVS     R7,#+0
    795            word adder=1; 
   \   00000010   0xF05F 0x0801      MOVS     R8,#+1
   \   00000014   0xE00B             B.N      ??LCD_P14x16Str_0
    796          	
    797            while(ch[ii] != '\0')
    798            {
    799              wm = 0;
    800              adder = 1;
    801              while(F14x16_Idx[wm] > 127)
    802              {
    803                if(F14x16_Idx[wm] == ch[ii])
    804                {
    805                  if(F14x16_Idx[wm + 1] == ch[ii + 1])
    806                  {
    807                    adder = wm * 14;
    808                    break;
    809                  }
    810                }
    811                wm += 2;			
    812              }
    813              if(x>118){x=0;y++;}
    814              LCD_Set_Pos(x , y); 
    815              if(adder != 1)// 显示汉字					
    816              {
    817                LCD_Set_Pos(x , y);
    818                for(wm = 0;wm < 14;wm++)               
    819                {
    820                  LCD_WrDat(F14x16[adder]);	
    821                  adder += 1;
    822                }      
    823                LCD_Set_Pos(x,y + 1); 
    824                for(wm = 0;wm < 14;wm++)          
    825                {
    826                  LCD_WrDat(F14x16[adder]);
    827                  adder += 1;
    828                }   		
    829              }
    830              else			  //显示空白字符			
    831              {
    832                ii += 1;
    833                LCD_Set_Pos(x,y);
    834                for(wm = 0;wm < 16;wm++)
    835                {
    836                  LCD_WrDat(0);
    837                }
    838                LCD_Set_Pos(x,y + 1);
    839                for(wm = 0;wm < 16;wm++)
    840                {   		
    841                  LCD_WrDat(0);	
   \                     ??LCD_P14x16Str_1: (+1)
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x.... 0x....      BL       LCD_WrDat
    842                }
   \   0000001C   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P14x16Str_2: (+1)
   \   00000020   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000024   0xF1B9 0x0F10      CMP      R9,#+16
   \   00000028   0xDBF5             BLT.N    ??LCD_P14x16Str_1
    843              }
    844              x += 14;
   \                     ??LCD_P14x16Str_3: (+1)
   \   0000002A   0x360E             ADDS     R6,R6,#+14
    845              ii += 2;
   \   0000002C   0x1CBF             ADDS     R7,R7,#+2
   \                     ??LCD_P14x16Str_0: (+1)
   \   0000002E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000030   0x5D78             LDRB     R0,[R7, R5]
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xF000 0x8086      BEQ.W    ??LCD_P14x16Str_4
   \   00000038   0xF05F 0x0900      MOVS     R9,#+0
   \   0000003C   0xF05F 0x0801      MOVS     R8,#+1
   \   00000040   0xE001             B.N      ??LCD_P14x16Str_5
   \                     ??LCD_P14x16Str_6: (+1)
   \   00000042   0xF119 0x0902      ADDS     R9,R9,#+2
   \                     ??LCD_P14x16Str_5: (+1)
   \   00000046   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004A   0x....             LDR.N    R0,??DataTable11_8
   \   0000004C   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   00000050   0x2880             CMP      R0,#+128
   \   00000052   0xDB18             BLT.N    ??LCD_P14x16Str_7
   \   00000054   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000058   0x....             LDR.N    R0,??DataTable11_8
   \   0000005A   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   0000005E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000060   0x5D79             LDRB     R1,[R7, R5]
   \   00000062   0x4288             CMP      R0,R1
   \   00000064   0xD1ED             BNE.N    ??LCD_P14x16Str_6
   \   00000066   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000006A   0x....             LDR.N    R0,??DataTable11_8
   \   0000006C   0xEB19 0x0000      ADDS     R0,R9,R0
   \   00000070   0x7840             LDRB     R0,[R0, #+1]
   \   00000072   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000074   0x1979             ADDS     R1,R7,R5
   \   00000076   0x7849             LDRB     R1,[R1, #+1]
   \   00000078   0x4288             CMP      R0,R1
   \   0000007A   0xD1E2             BNE.N    ??LCD_P14x16Str_6
   \   0000007C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000080   0x200E             MOVS     R0,#+14
   \   00000082   0xFB19 0xF800      SMULBB   R8,R9,R0
   \                     ??LCD_P14x16Str_7: (+1)
   \   00000086   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000088   0x2E77             CMP      R6,#+119
   \   0000008A   0xDB01             BLT.N    ??LCD_P14x16Str_8
   \   0000008C   0x2600             MOVS     R6,#+0
   \   0000008E   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_P14x16Str_8: (+1)
   \   00000090   0x0021             MOVS     R1,R4
   \   00000092   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000094   0x0030             MOVS     R0,R6
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x.... 0x....      BL       LCD_Set_Pos
   \   0000009C   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   000000A0   0xF1B8 0x0F01      CMP      R8,#+1
   \   000000A4   0xD031             BEQ.N    ??LCD_P14x16Str_9
   \   000000A6   0x0021             MOVS     R1,R4
   \   000000A8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000AA   0x0030             MOVS     R0,R6
   \   000000AC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AE   0x.... 0x....      BL       LCD_Set_Pos
   \   000000B2   0xF05F 0x0900      MOVS     R9,#+0
   \   000000B6   0xE00A             B.N      ??LCD_P14x16Str_10
   \                     ??LCD_P14x16Str_11: (+1)
   \   000000B8   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   000000BC   0x....             LDR.N    R0,??DataTable11_9
   \   000000BE   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   000000C2   0x.... 0x....      BL       LCD_WrDat
   \   000000C6   0xF118 0x0801      ADDS     R8,R8,#+1
   \   000000CA   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P14x16Str_10: (+1)
   \   000000CE   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000D2   0xF1B9 0x0F0E      CMP      R9,#+14
   \   000000D6   0xDBEF             BLT.N    ??LCD_P14x16Str_11
   \   000000D8   0x1C61             ADDS     R1,R4,#+1
   \   000000DA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000DC   0x0030             MOVS     R0,R6
   \   000000DE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E0   0x.... 0x....      BL       LCD_Set_Pos
   \   000000E4   0xF05F 0x0900      MOVS     R9,#+0
   \                     ??LCD_P14x16Str_12: (+1)
   \   000000E8   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000EC   0xF1B9 0x0F0E      CMP      R9,#+14
   \   000000F0   0xDA9B             BGE.N    ??LCD_P14x16Str_3
   \   000000F2   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   000000F6   0x....             LDR.N    R0,??DataTable11_9
   \   000000F8   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   000000FC   0x.... 0x....      BL       LCD_WrDat
   \   00000100   0xF118 0x0801      ADDS     R8,R8,#+1
   \   00000104   0xF119 0x0901      ADDS     R9,R9,#+1
   \   00000108   0xE7EE             B.N      ??LCD_P14x16Str_12
   \                     ??LCD_P14x16Str_9: (+1)
   \   0000010A   0x1C7F             ADDS     R7,R7,#+1
   \   0000010C   0x0021             MOVS     R1,R4
   \   0000010E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000110   0x0030             MOVS     R0,R6
   \   00000112   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000114   0x.... 0x....      BL       LCD_Set_Pos
   \   00000118   0xF05F 0x0900      MOVS     R9,#+0
   \   0000011C   0xE004             B.N      ??LCD_P14x16Str_13
   \                     ??LCD_P14x16Str_14: (+1)
   \   0000011E   0x2000             MOVS     R0,#+0
   \   00000120   0x.... 0x....      BL       LCD_WrDat
   \   00000124   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P14x16Str_13: (+1)
   \   00000128   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000012C   0xF1B9 0x0F10      CMP      R9,#+16
   \   00000130   0xDBF5             BLT.N    ??LCD_P14x16Str_14
   \   00000132   0x1C61             ADDS     R1,R4,#+1
   \   00000134   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000136   0x0030             MOVS     R0,R6
   \   00000138   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000013A   0x.... 0x....      BL       LCD_Set_Pos
   \   0000013E   0xF05F 0x0900      MOVS     R9,#+0
   \   00000142   0xE76D             B.N      ??LCD_P14x16Str_2
    846            }
    847          }
   \                     ??LCD_P14x16Str_4: (+1)
   \   00000144   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    848          
    849          
    850          //输出汉字和字符混合字符串

   \                                 In section .text, align 2, keep-with-next
    851          void LCD_Print(byte x, byte y, byte ch[])
    852          {
   \                     LCD_Print: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    853            byte ch2[3];
    854            byte ii=0;        
   \   00000008   0x2700             MOVS     R7,#+0
   \   0000000A   0xE014             B.N      ??LCD_Print_0
    855            while(ch[ii] != '\0')
    856            {
    857              if(ch[ii] > 127)
    858              {
    859                ch2[0] = ch[ii];
   \                     ??LCD_Print_1: (+1)
   \   0000000C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000000E   0x5DB8             LDRB     R0,[R7, R6]
   \   00000010   0xF88D 0x0000      STRB     R0,[SP, #+0]
    860                ch2[1] = ch[ii + 1];
   \   00000014   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000016   0x19B8             ADDS     R0,R7,R6
   \   00000018   0x7840             LDRB     R0,[R0, #+1]
   \   0000001A   0xF88D 0x0001      STRB     R0,[SP, #+1]
    861                ch2[2] = '\0';			//汉字为两个字节
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0xF88D 0x0002      STRB     R0,[SP, #+2]
    862                LCD_P14x16Str(x , y, ch2);	//显示汉字
   \   00000024   0xAA00             ADD      R2,SP,#+0
   \   00000026   0x0029             MOVS     R1,R5
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       LCD_P14x16Str
    863                x += 14;
   \   00000032   0x340E             ADDS     R4,R4,#+14
    864                ii += 2;
   \   00000034   0x1CBF             ADDS     R7,R7,#+2
    865              }
   \                     ??LCD_Print_0: (+1)
   \   00000036   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000038   0x5DB8             LDRB     R0,[R7, R6]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD014             BEQ.N    ??LCD_Print_2
   \   0000003E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000040   0x5DB8             LDRB     R0,[R7, R6]
   \   00000042   0x2880             CMP      R0,#+128
   \   00000044   0xDAE2             BGE.N    ??LCD_Print_1
    866              else
    867              {
    868                ch2[0] = ch[ii];	
   \   00000046   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000048   0x5DB8             LDRB     R0,[R7, R6]
   \   0000004A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    869                ch2[1] = '\0';			//字母占一个字节
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0xF88D 0x0001      STRB     R0,[SP, #+1]
    870                LCD_P8x16Str(x , y , ch2);	//显示字母
   \   00000054   0xAA00             ADD      R2,SP,#+0
   \   00000056   0x0029             MOVS     R1,R5
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0x.... 0x....      BL       LCD_P8x16Str
    871                x += 8;
   \   00000062   0x3408             ADDS     R4,R4,#+8
    872                ii+= 1;
   \   00000064   0x1C7F             ADDS     R7,R7,#+1
   \   00000066   0xE7E6             B.N      ??LCD_Print_0
    873              }
    874            }
    875          } 
   \                     ??LCD_Print_2: (+1)
   \   00000068   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    876          
    877          
    878          //==============================================================
    879          //函数名： void Draw_BMP(byte x,byte y)
    880          //功能描述：显示BMP图片128×64
    881          //参数：起始点坐标(x,y),x的范围0～127，y为页的范围0～7
    882          //返回：无
    883          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    884          void Draw_BMP(byte x0,byte y0,byte x1,byte y1,byte bmp[])
    885          { 	
   \                     Draw_BMP: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
    886            word ii=0;
   \   0000000A   0x2700             MOVS     R7,#+0
    887            byte x,y;
    888            
    889            if(y1%8==0) y=y1/8;      
   \   0000000C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000000E   0x2008             MOVS     R0,#+8
   \   00000010   0xFB96 0xF2F0      SDIV     R2,R6,R0
   \   00000014   0xFB02 0x6210      MLS      R2,R2,R0,R6
   \   00000018   0x2A00             CMP      R2,#+0
   \   0000001A   0xD104             BNE.N    ??Draw_BMP_0
   \   0000001C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000001E   0x2008             MOVS     R0,#+8
   \   00000020   0xFB96 0xFAF0      SDIV     R10,R6,R0
   \   00000024   0xE005             B.N      ??Draw_BMP_1
    890            else y=y1/8+1;
   \                     ??Draw_BMP_0: (+1)
   \   00000026   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000028   0x2008             MOVS     R0,#+8
   \   0000002A   0xFB96 0xF0F0      SDIV     R0,R6,R0
   \   0000002E   0xF110 0x0A01      ADDS     R10,R0,#+1
    891            
    892            for(y=y0;y<=y1;y++)
   \                     ??Draw_BMP_1: (+1)
   \   00000032   0x468A             MOV      R10,R1
   \   00000034   0xF8DD 0x8020      LDR      R8,[SP, #+32]
   \   00000038   0xE00E             B.N      ??Draw_BMP_2
    893            {
    894              LCD_Set_Pos(x0,y);				
    895              for(x=x0;x<x1;x++)
    896              {      
    897                LCD_WrDat(bmp[ii++]);	    	
   \                     ??Draw_BMP_3: (+1)
   \   0000003A   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000003C   0xF817 0x0008      LDRB     R0,[R7, R8]
   \   00000040   0x.... 0x....      BL       LCD_WrDat
   \   00000044   0x1C7F             ADDS     R7,R7,#+1
    898              }
   \   00000046   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??Draw_BMP_4: (+1)
   \   0000004A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000050   0x45A9             CMP      R9,R5
   \   00000052   0xD3F2             BCC.N    ??Draw_BMP_3
   \   00000054   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??Draw_BMP_2: (+1)
   \   00000058   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005A   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000005E   0x4556             CMP      R6,R10
   \   00000060   0xD307             BCC.N    ??Draw_BMP_5
   \   00000062   0x4651             MOV      R1,R10
   \   00000064   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000066   0x0020             MOVS     R0,R4
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0x.... 0x....      BL       LCD_Set_Pos
   \   0000006E   0x46A1             MOV      R9,R4
   \   00000070   0xE7EB             B.N      ??Draw_BMP_4
    899            }
    900          }
   \                     ??Draw_BMP_5: (+1)
   \   00000072   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    901          
    902          
    903          //====================================================================
    904          //函数名：void LCD_P8x16_num3wei(uint8 x,uint8 y,uint32 data)
    905          //功能描述：可以直接显示一个数字
    906          //参数：显示的位置（x,y）,显示的内容
    907          //返回：无
    908          //====================================================================

   \                                 In section .text, align 2, keep-with-next
    909          void LCD_P8x16_num3wei(uint8 x,uint8 y,uint32 data)
    910          {
   \                     LCD_P8x16_num3wei: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB082             SUB      SP,SP,#+8
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
    911            uint8 c=0,i=0,j=0;
   \   0000000A   0x2600             MOVS     R6,#+0
   \   0000000C   0x2700             MOVS     R7,#+0
   \   0000000E   0xF05F 0x0800      MOVS     R8,#+0
    912            
    913            uint8 num[3];
    914            num[0]=data/100;
   \   00000012   0x2064             MOVS     R0,#+100
   \   00000014   0xFBB2 0xF0F0      UDIV     R0,R2,R0
   \   00000018   0xF88D 0x0000      STRB     R0,[SP, #+0]
    915            num[1]=data/10%10;
   \   0000001C   0x200A             MOVS     R0,#+10
   \   0000001E   0xFBB2 0xF0F0      UDIV     R0,R2,R0
   \   00000022   0x210A             MOVS     R1,#+10
   \   00000024   0xFBB0 0xF3F1      UDIV     R3,R0,R1
   \   00000028   0xFB01 0x0013      MLS      R0,R1,R3,R0
   \   0000002C   0xF88D 0x0001      STRB     R0,[SP, #+1]
    916            num[2]=data%10;
   \   00000030   0x200A             MOVS     R0,#+10
   \   00000032   0xFBB2 0xF1F0      UDIV     R1,R2,R0
   \   00000036   0xFB00 0x2011      MLS      R0,R0,R1,R2
   \   0000003A   0xF88D 0x0002      STRB     R0,[SP, #+2]
    917            
    918           for(j=0;j<3;j++)
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x4680             MOV      R8,R0
   \   00000042   0xE00F             B.N      ??LCD_P8x16_num3wei_0
    919           {    
    920              c=num[j]+16;
    921              if(x>120){x=0;y++;}
    922              LCD_Set_Pos(x,y);    
    923              for(i=0;i<8;i++)     
    924                LCD_WrDat(F8X16[c*16+i]);
    925              LCD_Set_Pos(x,y+1);    
    926              for(i=0;i<8;i++)     
    927                LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16_num3wei_1: (+1)
   \   00000044   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000046   0x0130             LSLS     R0,R6,#+4
   \   00000048   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   0000004C   0x....             LDR.N    R1,??DataTable11_6
   \   0000004E   0x1840             ADDS     R0,R0,R1
   \   00000050   0x7A00             LDRB     R0,[R0, #+8]
   \   00000052   0x.... 0x....      BL       LCD_WrDat
   \   00000056   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P8x16_num3wei_2: (+1)
   \   00000058   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000005A   0x2F08             CMP      R7,#+8
   \   0000005C   0xDBF2             BLT.N    ??LCD_P8x16_num3wei_1
    928              x+=8;
   \   0000005E   0x3408             ADDS     R4,R4,#+8
   \   00000060   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16_num3wei_0: (+1)
   \   00000064   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000068   0xF1B8 0x0F03      CMP      R8,#+3
   \   0000006C   0xDA27             BGE.N    ??LCD_P8x16_num3wei_3
   \   0000006E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000072   0xA800             ADD      R0,SP,#+0
   \   00000074   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   00000078   0xF110 0x0610      ADDS     R6,R0,#+16
   \   0000007C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007E   0x2C79             CMP      R4,#+121
   \   00000080   0xDB01             BLT.N    ??LCD_P8x16_num3wei_4
   \   00000082   0x2400             MOVS     R4,#+0
   \   00000084   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P8x16_num3wei_4: (+1)
   \   00000086   0x0029             MOVS     R1,R5
   \   00000088   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000008A   0x0020             MOVS     R0,R4
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x.... 0x....      BL       LCD_Set_Pos
   \   00000092   0x2700             MOVS     R7,#+0
   \   00000094   0xE008             B.N      ??LCD_P8x16_num3wei_5
   \                     ??LCD_P8x16_num3wei_6: (+1)
   \   00000096   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000098   0x0130             LSLS     R0,R6,#+4
   \   0000009A   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   0000009E   0x....             LDR.N    R1,??DataTable11_6
   \   000000A0   0x5C40             LDRB     R0,[R0, R1]
   \   000000A2   0x.... 0x....      BL       LCD_WrDat
   \   000000A6   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P8x16_num3wei_5: (+1)
   \   000000A8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000AA   0x2F08             CMP      R7,#+8
   \   000000AC   0xDBF3             BLT.N    ??LCD_P8x16_num3wei_6
   \   000000AE   0x1C69             ADDS     R1,R5,#+1
   \   000000B0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B2   0x0020             MOVS     R0,R4
   \   000000B4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B6   0x.... 0x....      BL       LCD_Set_Pos
   \   000000BA   0x2700             MOVS     R7,#+0
   \   000000BC   0xE7CC             B.N      ??LCD_P8x16_num3wei_2
    929           }
    930          } 
   \                     ??LCD_P8x16_num3wei_3: (+1)
   \   000000BE   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    931          
    932          

   \                                 In section .text, align 2, keep-with-next
    933          void Draw_LQLogo(void)
    934          { 	
   \                     Draw_LQLogo: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    935            word ii=0;
   \   00000002   0x2400             MOVS     R4,#+0
    936            byte x,y;       
    937            
    938            for(y=0;y<8;y++)
   \   00000004   0x2600             MOVS     R6,#+0
   \   00000006   0xE00A             B.N      ??Draw_LQLogo_0
    939            {
    940              LCD_Set_Pos(16,y);				
    941              for(x=16;x<112;x++)
    942              {     
    943                LCD_WrDat(longqiu96x64[ii++]);	    	
   \                     ??Draw_LQLogo_1: (+1)
   \   00000008   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000000A   0x....             LDR.N    R0,??DataTable11_10
   \   0000000C   0x5C20             LDRB     R0,[R4, R0]
   \   0000000E   0x.... 0x....      BL       LCD_WrDat
   \   00000012   0x1C64             ADDS     R4,R4,#+1
    944              }
   \   00000014   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Draw_LQLogo_2: (+1)
   \   00000016   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000018   0x2D70             CMP      R5,#+112
   \   0000001A   0xDBF5             BLT.N    ??Draw_LQLogo_1
   \   0000001C   0x1C76             ADDS     R6,R6,#+1
   \                     ??Draw_LQLogo_0: (+1)
   \   0000001E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000020   0x2E08             CMP      R6,#+8
   \   00000022   0xDA06             BGE.N    ??Draw_LQLogo_3
   \   00000024   0x0031             MOVS     R1,R6
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0x2010             MOVS     R0,#+16
   \   0000002A   0x.... 0x....      BL       LCD_Set_Pos
   \   0000002E   0x2510             MOVS     R5,#+16
   \   00000030   0xE7F1             B.N      ??Draw_LQLogo_2
    945            }
    946          }
   \                     ??Draw_LQLogo_3: (+1)
   \   00000032   0xBD70             POP      {R4-R6,PC}       ;; return
    947          
    948          

   \                                 In section .text, align 2, keep-with-next
    949          void Draw_LibLogo(void)
    950          { 	
   \                     Draw_LibLogo: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    951            word ii=0;
   \   00000002   0x2400             MOVS     R4,#+0
    952            byte x,y;       
    953            
    954            for(y=0;y<8;y++)
   \   00000004   0x2600             MOVS     R6,#+0
   \   00000006   0xE00A             B.N      ??Draw_LibLogo_0
    955            {
    956              LCD_Set_Pos(34,y);				
    957              for(x=34;x<94;x++)
    958              {      
    959                LCD_WrDat(LIBLOGO60x58[ii++]);	    	
   \                     ??Draw_LibLogo_1: (+1)
   \   00000008   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000000A   0x....             LDR.N    R0,??DataTable11_11
   \   0000000C   0x5C20             LDRB     R0,[R4, R0]
   \   0000000E   0x.... 0x....      BL       LCD_WrDat
   \   00000012   0x1C64             ADDS     R4,R4,#+1
    960              }
   \   00000014   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Draw_LibLogo_2: (+1)
   \   00000016   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000018   0x2D5E             CMP      R5,#+94
   \   0000001A   0xDBF5             BLT.N    ??Draw_LibLogo_1
   \   0000001C   0x1C76             ADDS     R6,R6,#+1
   \                     ??Draw_LibLogo_0: (+1)
   \   0000001E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000020   0x2E08             CMP      R6,#+8
   \   00000022   0xDA06             BGE.N    ??Draw_LibLogo_3
   \   00000024   0x0031             MOVS     R1,R6
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0x2022             MOVS     R0,#+34
   \   0000002A   0x.... 0x....      BL       LCD_Set_Pos
   \   0000002E   0x2522             MOVS     R5,#+34
   \   00000030   0xE7F1             B.N      ??Draw_LibLogo_2
    961            }
    962          } 
   \                     ??Draw_LibLogo_3: (+1)
   \   00000032   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x40049038         DC32     0x40049038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x4004903C         DC32     0x4004903c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x40049040         DC32     0x40049040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x40049044         DC32     0x40049044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x400FF014         DC32     0x400ff014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x........         DC32     F8X16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x........         DC32     F6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0x........         DC32     F14x16_Idx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \   00000000   0x........         DC32     F14x16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \   00000000   0x........         DC32     longqiu96x64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \   00000000   0x........         DC32     LIBLOGO60x58

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   Draw_BMP
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      16   Draw_LQLogo
        16   -> LCD_Set_Pos
        16   -> LCD_WrDat
      16   Draw_LibLogo
        16   -> LCD_Set_Pos
        16   -> LCD_WrDat
      16   LCD_CLS
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
       0   LCD_DLY_ms
      16   LCD_Fill
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
       8   LCD_Init
         8   -> LCD_DLY_ms
         8   -> LCD_Fill
         8   -> LCD_Set_Pos
         8   -> LCD_WrCmd
         8   -> delay_ms
      32   LCD_P14x16Str
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   LCD_P6x8Str
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   LCD_P8x16Str
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   LCD_P8x16_num3wei
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   LCD_P8x16_number
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   LCD_P8x16_number_4
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      48   LCD_P8x16_number_5
        48   -> LCD_Set_Pos
        48   -> LCD_WrDat
      24   LCD_Print
        24   -> LCD_P14x16Str
        24   -> LCD_P8x16Str
      16   LCD_PutPixel
        16   -> LCD_Set_Pos
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
      32   LCD_Rectangle
        32   -> LCD_DLY_ms
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
       8   LCD_Set_Pos
         8   -> LCD_WrCmd
       0   LCD_WrCmd
       0   LCD_WrDat


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable11_9
     118  Draw_BMP
      52  Draw_LQLogo
      52  Draw_LibLogo
     700  F14x16
      52  F14x16_Idx
     552  F6x8
    1520  F8X16
      56  LCD_CLS
      26  LCD_DLY_ms
      60  LCD_Fill
     314  LCD_Init
     328  LCD_P14x16Str
     122  LCD_P6x8Str
     168  LCD_P8x16Str
     194  LCD_P8x16_num3wei
     196  LCD_P8x16_number
     220  LCD_P8x16_number_4
     214  LCD_P8x16_number_5
     106  LCD_Print
      80  LCD_PutPixel
     152  LCD_Rectangle
      44  LCD_Set_Pos
     122  LCD_WrCmd
     126  LCD_WrDat
     480  LIBLOGO60x58
     768  longqiu96x64

 
   768 bytes in section .data
 3 304 bytes in section .rodata
 2 798 bytes in section .text
 
 2 798 bytes of CODE  memory
 3 304 bytes of CONST memory
   768 bytes of DATA  memory

Errors: none
Warnings: none
