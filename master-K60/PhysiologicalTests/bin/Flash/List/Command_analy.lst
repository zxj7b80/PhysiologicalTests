###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        24/Jun/2015  14:05:07
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\src\Sources\C\Component_C\Command_analy.c
#    Command line =  
#        "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\src\Sources\C\Component_C\Command_analy.c" -D
#        IAR -D TWR_K60N512 -lCN
#        "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\bin\Flash\List\" -lB
#        "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\bin\Flash\List\" -o
#        "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\bin\Flash\Obj\" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "D:\MyProgramFiles\IAR V7.1\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\src\Sources\H\" -I
#        "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\src\Sources\H\Component_H\" -I
#        "C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\src\Sources\H\Frame_H\" -Ol --use_c++_inline
#    List file    =  
#        C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\bin\Flash\List\Command_analy.lst
#    Object file  =  
#        C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new
#        board\PhysiologicalTests\bin\Flash\Obj\Command_analy.o
#
###############################################################################

C:\Users\ZXJ\Desktop\人体生理指数测试系统\下位机\K60 new board\PhysiologicalTests\src\Sources\C\Component_C\Command_analy.c
      1          #include "Command_analy.h"
      2          

   \                                 In section .bss, align 1
      3          uint8 motor_run_pos=0;
   \                     motor_run_pos:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      4          uint8 motor_run_nag=0;
   \                     motor_run_nag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      5          uint8 motor_stop=0;
   \                     motor_stop:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      6          uint8 run_constant_angle_pos=0;
   \                     run_constant_angle_pos:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      7          uint8 run_constant_angle_nag=0;
   \                     run_constant_angle_nag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      8          uint8 test_start=0;
   \                     test_start:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      9          uint8 DM_start=0;
   \                     DM_start:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     10          uint8 MachineReset=0;
   \                     MachineReset:
   \   00000000                      DS8 1

   \                                 In section .bss, align 8
     11          double constant_angle=0;
   \                     constant_angle:
   \   00000000                      DS8 8
     12          extern int FTM_Count;

   \                                 In section .bss, align 1
     13          uint8  FrequenceFlag=0;
   \                     FrequenceFlag:
   \   00000000                      DS8 1
     14          extern int16 g_nMotorPulseSigma;

   \                                 In section .bss, align 1
     15          uint8 DelayTimeChange=0;
   \                     DelayTimeChange:
   \   00000000                      DS8 1
     16          extern uint16 base;

   \                                 In section .bss, align 2
     17          uint16 DelayTime=0;
   \                     DelayTime:
   \   00000000                      DS8 2
     18          extern uint8 DelayTimeChange;
     19          
     20          //====================================================================//
     21          // 语法格式:  void Command_analy(uchar *buf)
     22          // 实现功能： 解析收到的字符串
     23          // 参    数： 字符串
     24          // 返 回 值： 转化后双精度值
     25          //====================================================================//

   \                                 In section .text, align 4, keep-with-next
     26          void Command_analy(uint8 *buf)
     27          {
   \                     Command_analy: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
     28          	double rev = 0;
   \   00000004   0x2600             MOVS     R6,#+0
   \   00000006   0x2700             MOVS     R7,#+0
     29          	double dat;
     30          	int integer = 1;
   \   00000008   0xF05F 0x0A01      MOVS     R10,#+1
     31          	uint8 *str = buf;
   \   0000000C   0x4681             MOV      R9,R0
   \   0000000E   0xE005             B.N      ??Command_analy_0
     32          	int i;
     33          	while(*str != '*')
     34          	{
     35          		switch(*str)
     36          		{
     37          			case '0':
     38          				dat = 0;
     39          				break;
     40          			case '1':
     41          				dat = 1;
     42          				break;
     43          			case '2':
     44          				dat = 2;
     45          				break;		
     46          			case '3':
     47          				dat = 3;
     48          				break;
     49          			case '4':
     50          				dat = 4;
     51          				break;
     52          			case '5':
     53          				dat = 5;
     54          				break;
     55          			case '6':
     56          				dat = 6;
     57          				break;
     58          			case '7':
     59          				dat = 7;
     60          				break;
     61          			case '8':
     62          				dat = 8;
     63          				break;
     64          			case '9':
     65          				dat = 9;
     66          				break;
     67          			case '.':
     68          				dat = '.';
     69          				break;
     70                                  case '+':
     71                                          run_constant_angle_nag=1;
     72                                          run_constant_angle_pos=0;
     73                                          motor_run_nag=0;
     74                                          motor_run_pos=0;
     75                                          DM_start=0;
     76                                          test_start=0;
     77                                          MachineReset=0;
     78                                          break;
     79                                  case '-':
     80                                          run_constant_angle_nag=0;
     81                                          run_constant_angle_pos=1;
     82                                          motor_run_nag=0;
     83                                          motor_run_pos=0;
     84                                          DM_start=0;
     85                                          test_start=0;
     86                                          MachineReset=0;
     87                                          break;
     88                                  case 'P':
     89                                          run_constant_angle_nag=0;
     90                                          run_constant_angle_pos=0;
     91                                          motor_run_nag=1;
     92                                          motor_run_pos=0;
     93                                          DM_start=0;
     94                                          test_start=0;
     95                                          MachineReset=0;
     96                                          break;
     97                                  case 'N':
     98                                          run_constant_angle_nag=0;
     99                                          run_constant_angle_pos=0;
    100                                          motor_run_nag=0;
    101                                          motor_run_pos=1;
    102                                          DM_start=0;
    103                                          test_start=0;
    104                                          MachineReset=0;
    105                                          break;
    106                                  case 'S':
    107                                          motor_stop=1;
    108                                          break;
    109                                  case 'D':
    110                                          DelayTimeChange=1;
    111                                          break;
    112                                  case 'A':
    113                                          run_constant_angle_nag=0;
    114                                          run_constant_angle_pos=0;
    115                                          motor_run_nag=0;
    116                                          motor_run_pos=0;
    117                                          DM_start=1;
    118                                          test_start=0;
    119                                          MachineReset=0;
    120                                          break;  
    121                                  case 'B':
    122                                          run_constant_angle_nag=0;
    123                                          run_constant_angle_pos=0;
    124                                          motor_run_nag=0;
    125                                          motor_run_pos=0;
    126                                          DM_start=0;
    127                                          test_start=1;
    128                                          MachineReset=0;
    129                                          g_nMotorPulseSigma=0;
    130                                          break;
    131                                  case 'R':
    132                                          run_constant_angle_nag=0;
    133                                          run_constant_angle_pos=0;
    134                                          motor_run_nag=0;
    135                                          motor_run_pos=0;
    136                                          DM_start=0;
    137                                          test_start=0;
    138                                          MachineReset=1;
    139                                          g_nMotorPulseSigma=0;
    140                                          break; 
    141                                  default:
    142                                          break;
    143          		}
    144          		if(dat == '.')
    145          		{
    146          			integer = 0;
   \                     ??Command_analy_1: (+1)
   \   00000010   0xF05F 0x0A00      MOVS     R10,#+0
    147          			i = 1;
   \   00000014   0xF05F 0x0801      MOVS     R8,#+1
    148          			str ++;
   \   00000018   0xF119 0x0901      ADDS     R9,R9,#+1
    149          			continue;
    150          		}
   \                     ??Command_analy_0: (+1)
   \   0000001C   0xF899 0x0000      LDRB     R0,[R9, #+0]
   \   00000020   0x282A             CMP      R0,#+42
   \   00000022   0xF000 0x8128      BEQ.W    ??Command_analy_2
   \   00000026   0xF899 0x0000      LDRB     R0,[R9, #+0]
   \   0000002A   0x282B             CMP      R0,#+43
   \   0000002C   0xD04C             BEQ.N    ??Command_analy_3
   \   0000002E   0x282D             CMP      R0,#+45
   \   00000030   0xD060             BEQ.N    ??Command_analy_4
   \   00000032   0x282E             CMP      R0,#+46
   \   00000034   0xD045             BEQ.N    ??Command_analy_5
   \   00000036   0x2830             CMP      R0,#+48
   \   00000038   0xD024             BEQ.N    ??Command_analy_6
   \   0000003A   0x2831             CMP      R0,#+49
   \   0000003C   0xD025             BEQ.N    ??Command_analy_7
   \   0000003E   0x2832             CMP      R0,#+50
   \   00000040   0xD026             BEQ.N    ??Command_analy_8
   \   00000042   0x2833             CMP      R0,#+51
   \   00000044   0xD028             BEQ.N    ??Command_analy_9
   \   00000046   0x2834             CMP      R0,#+52
   \   00000048   0xD029             BEQ.N    ??Command_analy_10
   \   0000004A   0x2835             CMP      R0,#+53
   \   0000004C   0xD02A             BEQ.N    ??Command_analy_11
   \   0000004E   0x2836             CMP      R0,#+54
   \   00000050   0xD02B             BEQ.N    ??Command_analy_12
   \   00000052   0x2837             CMP      R0,#+55
   \   00000054   0xD02C             BEQ.N    ??Command_analy_13
   \   00000056   0x2838             CMP      R0,#+56
   \   00000058   0xD02D             BEQ.N    ??Command_analy_14
   \   0000005A   0x2839             CMP      R0,#+57
   \   0000005C   0xD02E             BEQ.N    ??Command_analy_15
   \   0000005E   0x2841             CMP      R0,#+65
   \   00000060   0xF000 0x8092      BEQ.W    ??Command_analy_16
   \   00000064   0x2842             CMP      R0,#+66
   \   00000066   0xF000 0x80A5      BEQ.W    ??Command_analy_17
   \   0000006A   0x2844             CMP      R0,#+68
   \   0000006C   0xF000 0x8088      BEQ.W    ??Command_analy_18
   \   00000070   0x284E             CMP      R0,#+78
   \   00000072   0xD06B             BEQ.N    ??Command_analy_19
   \   00000074   0x2850             CMP      R0,#+80
   \   00000076   0xD053             BEQ.N    ??Command_analy_20
   \   00000078   0x2852             CMP      R0,#+82
   \   0000007A   0xF000 0x80B4      BEQ.W    ??Command_analy_21
   \   0000007E   0x2853             CMP      R0,#+83
   \   00000080   0xD07A             BEQ.N    ??Command_analy_22
   \   00000082   0xE0C9             B.N      ??Command_analy_23
   \                     ??Command_analy_6: (+1)
   \   00000084   0x2400             MOVS     R4,#+0
   \   00000086   0x2500             MOVS     R5,#+0
   \   00000088   0xE0C6             B.N      ??Command_analy_24
   \                     ??Command_analy_7: (+1)
   \   0000008A   0x2400             MOVS     R4,#+0
   \   0000008C   0x4DA5             LDR.N    R5,??Command_analy_25  ;; 0x3ff00000
   \   0000008E   0xE0C3             B.N      ??Command_analy_24
   \                     ??Command_analy_8: (+1)
   \   00000090   0x2400             MOVS     R4,#+0
   \   00000092   0xF05F 0x4580      MOVS     R5,#+1073741824
   \   00000096   0xE0BF             B.N      ??Command_analy_24
   \                     ??Command_analy_9: (+1)
   \   00000098   0x2400             MOVS     R4,#+0
   \   0000009A   0x4DA3             LDR.N    R5,??Command_analy_25+0x4  ;; 0x40080000
   \   0000009C   0xE0BC             B.N      ??Command_analy_24
   \                     ??Command_analy_10: (+1)
   \   0000009E   0x2400             MOVS     R4,#+0
   \   000000A0   0x4DA2             LDR.N    R5,??Command_analy_25+0x8  ;; 0x40100000
   \   000000A2   0xE0B9             B.N      ??Command_analy_24
   \                     ??Command_analy_11: (+1)
   \   000000A4   0x2400             MOVS     R4,#+0
   \   000000A6   0x4DA2             LDR.N    R5,??Command_analy_25+0xC  ;; 0x40140000
   \   000000A8   0xE0B6             B.N      ??Command_analy_24
   \                     ??Command_analy_12: (+1)
   \   000000AA   0x2400             MOVS     R4,#+0
   \   000000AC   0x4DA1             LDR.N    R5,??Command_analy_25+0x10  ;; 0x40180000
   \   000000AE   0xE0B3             B.N      ??Command_analy_24
   \                     ??Command_analy_13: (+1)
   \   000000B0   0x2400             MOVS     R4,#+0
   \   000000B2   0x4DA1             LDR.N    R5,??Command_analy_25+0x14  ;; 0x401c0000
   \   000000B4   0xE0B0             B.N      ??Command_analy_24
   \                     ??Command_analy_14: (+1)
   \   000000B6   0x2400             MOVS     R4,#+0
   \   000000B8   0x4DA0             LDR.N    R5,??Command_analy_25+0x18  ;; 0x40200000
   \   000000BA   0xE0AD             B.N      ??Command_analy_24
   \                     ??Command_analy_15: (+1)
   \   000000BC   0x2400             MOVS     R4,#+0
   \   000000BE   0x4DA0             LDR.N    R5,??Command_analy_25+0x1C  ;; 0x40220000
   \   000000C0   0xE0AA             B.N      ??Command_analy_24
   \                     ??Command_analy_5: (+1)
   \   000000C2   0x2400             MOVS     R4,#+0
   \   000000C4   0x4D9F             LDR.N    R5,??Command_analy_25+0x20  ;; 0x40470000
   \   000000C6   0xE0A7             B.N      ??Command_analy_24
   \                     ??Command_analy_3: (+1)
   \   000000C8   0x2001             MOVS     R0,#+1
   \   000000CA   0x499F             LDR.N    R1,??Command_analy_25+0x24
   \   000000CC   0x7008             STRB     R0,[R1, #+0]
   \   000000CE   0x2000             MOVS     R0,#+0
   \   000000D0   0x499E             LDR.N    R1,??Command_analy_25+0x28
   \   000000D2   0x7008             STRB     R0,[R1, #+0]
   \   000000D4   0x2000             MOVS     R0,#+0
   \   000000D6   0x499E             LDR.N    R1,??Command_analy_25+0x2C
   \   000000D8   0x7008             STRB     R0,[R1, #+0]
   \   000000DA   0x2000             MOVS     R0,#+0
   \   000000DC   0x499D             LDR.N    R1,??Command_analy_25+0x30
   \   000000DE   0x7008             STRB     R0,[R1, #+0]
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x499D             LDR.N    R1,??Command_analy_25+0x34
   \   000000E4   0x7008             STRB     R0,[R1, #+0]
   \   000000E6   0x2000             MOVS     R0,#+0
   \   000000E8   0x499C             LDR.N    R1,??Command_analy_25+0x38
   \   000000EA   0x7008             STRB     R0,[R1, #+0]
   \   000000EC   0x2000             MOVS     R0,#+0
   \   000000EE   0x499C             LDR.N    R1,??Command_analy_25+0x3C
   \   000000F0   0x7008             STRB     R0,[R1, #+0]
   \   000000F2   0xE091             B.N      ??Command_analy_24
   \                     ??Command_analy_4: (+1)
   \   000000F4   0x2000             MOVS     R0,#+0
   \   000000F6   0x4994             LDR.N    R1,??Command_analy_25+0x24
   \   000000F8   0x7008             STRB     R0,[R1, #+0]
   \   000000FA   0x2001             MOVS     R0,#+1
   \   000000FC   0x4993             LDR.N    R1,??Command_analy_25+0x28
   \   000000FE   0x7008             STRB     R0,[R1, #+0]
   \   00000100   0x2000             MOVS     R0,#+0
   \   00000102   0x4993             LDR.N    R1,??Command_analy_25+0x2C
   \   00000104   0x7008             STRB     R0,[R1, #+0]
   \   00000106   0x2000             MOVS     R0,#+0
   \   00000108   0x4992             LDR.N    R1,??Command_analy_25+0x30
   \   0000010A   0x7008             STRB     R0,[R1, #+0]
   \   0000010C   0x2000             MOVS     R0,#+0
   \   0000010E   0x4992             LDR.N    R1,??Command_analy_25+0x34
   \   00000110   0x7008             STRB     R0,[R1, #+0]
   \   00000112   0x2000             MOVS     R0,#+0
   \   00000114   0x4991             LDR.N    R1,??Command_analy_25+0x38
   \   00000116   0x7008             STRB     R0,[R1, #+0]
   \   00000118   0x2000             MOVS     R0,#+0
   \   0000011A   0x4991             LDR.N    R1,??Command_analy_25+0x3C
   \   0000011C   0x7008             STRB     R0,[R1, #+0]
   \   0000011E   0xE07B             B.N      ??Command_analy_24
   \                     ??Command_analy_20: (+1)
   \   00000120   0x2000             MOVS     R0,#+0
   \   00000122   0x4989             LDR.N    R1,??Command_analy_25+0x24
   \   00000124   0x7008             STRB     R0,[R1, #+0]
   \   00000126   0x2000             MOVS     R0,#+0
   \   00000128   0x4988             LDR.N    R1,??Command_analy_25+0x28
   \   0000012A   0x7008             STRB     R0,[R1, #+0]
   \   0000012C   0x2001             MOVS     R0,#+1
   \   0000012E   0x4988             LDR.N    R1,??Command_analy_25+0x2C
   \   00000130   0x7008             STRB     R0,[R1, #+0]
   \   00000132   0x2000             MOVS     R0,#+0
   \   00000134   0x4987             LDR.N    R1,??Command_analy_25+0x30
   \   00000136   0x7008             STRB     R0,[R1, #+0]
   \   00000138   0x2000             MOVS     R0,#+0
   \   0000013A   0x4987             LDR.N    R1,??Command_analy_25+0x34
   \   0000013C   0x7008             STRB     R0,[R1, #+0]
   \   0000013E   0x2000             MOVS     R0,#+0
   \   00000140   0x4986             LDR.N    R1,??Command_analy_25+0x38
   \   00000142   0x7008             STRB     R0,[R1, #+0]
   \   00000144   0x2000             MOVS     R0,#+0
   \   00000146   0x4986             LDR.N    R1,??Command_analy_25+0x3C
   \   00000148   0x7008             STRB     R0,[R1, #+0]
   \   0000014A   0xE065             B.N      ??Command_analy_24
   \                     ??Command_analy_19: (+1)
   \   0000014C   0x2000             MOVS     R0,#+0
   \   0000014E   0x497E             LDR.N    R1,??Command_analy_25+0x24
   \   00000150   0x7008             STRB     R0,[R1, #+0]
   \   00000152   0x2000             MOVS     R0,#+0
   \   00000154   0x497D             LDR.N    R1,??Command_analy_25+0x28
   \   00000156   0x7008             STRB     R0,[R1, #+0]
   \   00000158   0x2000             MOVS     R0,#+0
   \   0000015A   0x497D             LDR.N    R1,??Command_analy_25+0x2C
   \   0000015C   0x7008             STRB     R0,[R1, #+0]
   \   0000015E   0x2001             MOVS     R0,#+1
   \   00000160   0x497C             LDR.N    R1,??Command_analy_25+0x30
   \   00000162   0x7008             STRB     R0,[R1, #+0]
   \   00000164   0x2000             MOVS     R0,#+0
   \   00000166   0x497C             LDR.N    R1,??Command_analy_25+0x34
   \   00000168   0x7008             STRB     R0,[R1, #+0]
   \   0000016A   0x2000             MOVS     R0,#+0
   \   0000016C   0x497B             LDR.N    R1,??Command_analy_25+0x38
   \   0000016E   0x7008             STRB     R0,[R1, #+0]
   \   00000170   0x2000             MOVS     R0,#+0
   \   00000172   0x497B             LDR.N    R1,??Command_analy_25+0x3C
   \   00000174   0x7008             STRB     R0,[R1, #+0]
   \   00000176   0xE04F             B.N      ??Command_analy_24
   \                     ??Command_analy_22: (+1)
   \   00000178   0x2001             MOVS     R0,#+1
   \   0000017A   0x497A             LDR.N    R1,??Command_analy_25+0x40
   \   0000017C   0x7008             STRB     R0,[R1, #+0]
   \   0000017E   0xE04B             B.N      ??Command_analy_24
   \                     ??Command_analy_18: (+1)
   \   00000180   0x2001             MOVS     R0,#+1
   \   00000182   0x4979             LDR.N    R1,??Command_analy_25+0x44
   \   00000184   0x7008             STRB     R0,[R1, #+0]
   \   00000186   0xE047             B.N      ??Command_analy_24
   \                     ??Command_analy_16: (+1)
   \   00000188   0x2000             MOVS     R0,#+0
   \   0000018A   0x496F             LDR.N    R1,??Command_analy_25+0x24
   \   0000018C   0x7008             STRB     R0,[R1, #+0]
   \   0000018E   0x2000             MOVS     R0,#+0
   \   00000190   0x496E             LDR.N    R1,??Command_analy_25+0x28
   \   00000192   0x7008             STRB     R0,[R1, #+0]
   \   00000194   0x2000             MOVS     R0,#+0
   \   00000196   0x496E             LDR.N    R1,??Command_analy_25+0x2C
   \   00000198   0x7008             STRB     R0,[R1, #+0]
   \   0000019A   0x2000             MOVS     R0,#+0
   \   0000019C   0x496D             LDR.N    R1,??Command_analy_25+0x30
   \   0000019E   0x7008             STRB     R0,[R1, #+0]
   \   000001A0   0x2001             MOVS     R0,#+1
   \   000001A2   0x496D             LDR.N    R1,??Command_analy_25+0x34
   \   000001A4   0x7008             STRB     R0,[R1, #+0]
   \   000001A6   0x2000             MOVS     R0,#+0
   \   000001A8   0x496C             LDR.N    R1,??Command_analy_25+0x38
   \   000001AA   0x7008             STRB     R0,[R1, #+0]
   \   000001AC   0x2000             MOVS     R0,#+0
   \   000001AE   0x496C             LDR.N    R1,??Command_analy_25+0x3C
   \   000001B0   0x7008             STRB     R0,[R1, #+0]
   \   000001B2   0xE031             B.N      ??Command_analy_24
   \                     ??Command_analy_17: (+1)
   \   000001B4   0x2000             MOVS     R0,#+0
   \   000001B6   0x4964             LDR.N    R1,??Command_analy_25+0x24
   \   000001B8   0x7008             STRB     R0,[R1, #+0]
   \   000001BA   0x2000             MOVS     R0,#+0
   \   000001BC   0x4963             LDR.N    R1,??Command_analy_25+0x28
   \   000001BE   0x7008             STRB     R0,[R1, #+0]
   \   000001C0   0x2000             MOVS     R0,#+0
   \   000001C2   0x4963             LDR.N    R1,??Command_analy_25+0x2C
   \   000001C4   0x7008             STRB     R0,[R1, #+0]
   \   000001C6   0x2000             MOVS     R0,#+0
   \   000001C8   0x4962             LDR.N    R1,??Command_analy_25+0x30
   \   000001CA   0x7008             STRB     R0,[R1, #+0]
   \   000001CC   0x2000             MOVS     R0,#+0
   \   000001CE   0x4962             LDR.N    R1,??Command_analy_25+0x34
   \   000001D0   0x7008             STRB     R0,[R1, #+0]
   \   000001D2   0x2001             MOVS     R0,#+1
   \   000001D4   0x4961             LDR.N    R1,??Command_analy_25+0x38
   \   000001D6   0x7008             STRB     R0,[R1, #+0]
   \   000001D8   0x2000             MOVS     R0,#+0
   \   000001DA   0x4961             LDR.N    R1,??Command_analy_25+0x3C
   \   000001DC   0x7008             STRB     R0,[R1, #+0]
   \   000001DE   0x2000             MOVS     R0,#+0
   \   000001E0   0x4962             LDR.N    R1,??Command_analy_25+0x48
   \   000001E2   0x8008             STRH     R0,[R1, #+0]
   \   000001E4   0xE018             B.N      ??Command_analy_24
   \                     ??Command_analy_21: (+1)
   \   000001E6   0x2000             MOVS     R0,#+0
   \   000001E8   0x4957             LDR.N    R1,??Command_analy_25+0x24
   \   000001EA   0x7008             STRB     R0,[R1, #+0]
   \   000001EC   0x2000             MOVS     R0,#+0
   \   000001EE   0x4957             LDR.N    R1,??Command_analy_25+0x28
   \   000001F0   0x7008             STRB     R0,[R1, #+0]
   \   000001F2   0x2000             MOVS     R0,#+0
   \   000001F4   0x4956             LDR.N    R1,??Command_analy_25+0x2C
   \   000001F6   0x7008             STRB     R0,[R1, #+0]
   \   000001F8   0x2000             MOVS     R0,#+0
   \   000001FA   0x4956             LDR.N    R1,??Command_analy_25+0x30
   \   000001FC   0x7008             STRB     R0,[R1, #+0]
   \   000001FE   0x2000             MOVS     R0,#+0
   \   00000200   0x4955             LDR.N    R1,??Command_analy_25+0x34
   \   00000202   0x7008             STRB     R0,[R1, #+0]
   \   00000204   0x2000             MOVS     R0,#+0
   \   00000206   0x4955             LDR.N    R1,??Command_analy_25+0x38
   \   00000208   0x7008             STRB     R0,[R1, #+0]
   \   0000020A   0x2001             MOVS     R0,#+1
   \   0000020C   0x4954             LDR.N    R1,??Command_analy_25+0x3C
   \   0000020E   0x7008             STRB     R0,[R1, #+0]
   \   00000210   0x2000             MOVS     R0,#+0
   \   00000212   0x4956             LDR.N    R1,??Command_analy_25+0x48
   \   00000214   0x8008             STRH     R0,[R1, #+0]
   \   00000216   0xE7FF             B.N      ??Command_analy_24
   \                     ??Command_analy_23: (+1)
   \                     ??Command_analy_24: (+1)
   \   00000218   0x2000             MOVS     R0,#+0
   \   0000021A   0x494A             LDR.N    R1,??Command_analy_25+0x20  ;; 0x40470000
   \   0000021C   0x0022             MOVS     R2,R4
   \   0000021E   0x002B             MOVS     R3,R5
   \   00000220   0x.... 0x....      BL       __aeabi_cdcmpeq
   \   00000224   0xF43F 0xAEF4      BEQ.W    ??Command_analy_1
    151          		if( integer == 1 )
   \   00000228   0xF1BA 0x0F01      CMP      R10,#+1
   \   0000022C   0xD10C             BNE.N    ??Command_analy_26
    152          		{
    153          			rev = rev * 10 + dat;
   \   0000022E   0x2000             MOVS     R0,#+0
   \   00000230   0x494F             LDR.N    R1,??Command_analy_25+0x4C  ;; 0x40240000
   \   00000232   0x0032             MOVS     R2,R6
   \   00000234   0x003B             MOVS     R3,R7
   \   00000236   0x.... 0x....      BL       __aeabi_dmul
   \   0000023A   0x0022             MOVS     R2,R4
   \   0000023C   0x002B             MOVS     R3,R5
   \   0000023E   0x.... 0x....      BL       __aeabi_dadd
   \   00000242   0x0006             MOVS     R6,R0
   \   00000244   0x000F             MOVS     R7,R1
   \   00000246   0xE013             B.N      ??Command_analy_27
    154          		}
    155          		else
    156          		{
    157          			rev = rev + dat / (10 * i);
   \                     ??Command_analy_26: (+1)
   \   00000248   0x200A             MOVS     R0,#+10
   \   0000024A   0xFB00 0xF008      MUL      R0,R0,R8
   \   0000024E   0x.... 0x....      BL       __aeabi_i2d
   \   00000252   0x0002             MOVS     R2,R0
   \   00000254   0x000B             MOVS     R3,R1
   \   00000256   0x0020             MOVS     R0,R4
   \   00000258   0x0029             MOVS     R1,R5
   \   0000025A   0x.... 0x....      BL       __aeabi_ddiv
   \   0000025E   0x0032             MOVS     R2,R6
   \   00000260   0x003B             MOVS     R3,R7
   \   00000262   0x.... 0x....      BL       __aeabi_dadd
   \   00000266   0x0006             MOVS     R6,R0
   \   00000268   0x000F             MOVS     R7,R1
    158          			i = i * 10 ;
   \   0000026A   0x200A             MOVS     R0,#+10
   \   0000026C   0xFB00 0xF808      MUL      R8,R0,R8
    159          		}
    160          		str ++;
   \                     ??Command_analy_27: (+1)
   \   00000270   0xF119 0x0901      ADDS     R9,R9,#+1
   \   00000274   0xE6D2             B.N      ??Command_analy_0
    161          	}
    162                  if((run_constant_angle_pos==1||run_constant_angle_nag==1)&&DM_start==0)
   \                     ??Command_analy_2: (+1)
   \   00000276   0x4835             LDR.N    R0,??Command_analy_25+0x28
   \   00000278   0x7800             LDRB     R0,[R0, #+0]
   \   0000027A   0x2801             CMP      R0,#+1
   \   0000027C   0xD003             BEQ.N    ??Command_analy_28
   \   0000027E   0x4832             LDR.N    R0,??Command_analy_25+0x24
   \   00000280   0x7800             LDRB     R0,[R0, #+0]
   \   00000282   0x2801             CMP      R0,#+1
   \   00000284   0xD109             BNE.N    ??Command_analy_29
   \                     ??Command_analy_28: (+1)
   \   00000286   0x4834             LDR.N    R0,??Command_analy_25+0x34
   \   00000288   0x7800             LDRB     R0,[R0, #+0]
   \   0000028A   0x2800             CMP      R0,#+0
   \   0000028C   0xD105             BNE.N    ??Command_analy_29
    163                  {
    164                    enable_irq(63);
   \   0000028E   0x203F             MOVS     R0,#+63
   \   00000290   0x.... 0x....      BL       enable_irq
    165                    FTM_Count=0; 
   \   00000294   0x2000             MOVS     R0,#+0
   \   00000296   0x4937             LDR.N    R1,??Command_analy_25+0x50
   \   00000298   0x6008             STR      R0,[R1, #+0]
    166                  }
    167          	constant_angle = rev;
   \                     ??Command_analy_29: (+1)
   \   0000029A   0x4837             LDR.N    R0,??Command_analy_25+0x54
   \   0000029C   0xE9C0 0x6700      STRD     R6,R7,[R0, #+0]
    168                  
    169                  //延时设置---
    170                  if(DelayTimeChange==1)
   \   000002A0   0x4831             LDR.N    R0,??Command_analy_25+0x44
   \   000002A2   0x7800             LDRB     R0,[R0, #+0]
   \   000002A4   0x2801             CMP      R0,#+1
   \   000002A6   0xD13A             BNE.N    ??Command_analy_30
    171                  {
    172                    DelayTimeChange=0;
   \   000002A8   0x2000             MOVS     R0,#+0
   \   000002AA   0x492F             LDR.N    R1,??Command_analy_25+0x44
   \   000002AC   0x7008             STRB     R0,[R1, #+0]
    173                    if(constant_angle>=0&&constant_angle<=100)
   \   000002AE   0x4A32             LDR.N    R2,??Command_analy_25+0x54
   \   000002B0   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000002B4   0x2200             MOVS     R2,#+0
   \   000002B6   0x2300             MOVS     R3,#+0
   \   000002B8   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000002BC   0xD80B             BHI.N    ??Command_analy_31
   \   000002BE   0x4A2E             LDR.N    R2,??Command_analy_25+0x54
   \   000002C0   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000002C4   0x2201             MOVS     R2,#+1
   \   000002C6   0x4B2D             LDR.N    R3,??Command_analy_25+0x58  ;; 0x40590000
   \   000002C8   0x.... 0x....      BL       __aeabi_cdcmple
   \   000002CC   0xD203             BCS.N    ??Command_analy_31
    174                      base=100;
   \   000002CE   0x2064             MOVS     R0,#+100
   \   000002D0   0x492B             LDR.N    R1,??Command_analy_25+0x5C
   \   000002D2   0x8008             STRH     R0,[R1, #+0]
   \   000002D4   0xE023             B.N      ??Command_analy_30
    175                    else if(constant_angle>100&&constant_angle<=5000)
   \                     ??Command_analy_31: (+1)
   \   000002D6   0x4A28             LDR.N    R2,??Command_analy_25+0x54
   \   000002D8   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000002DC   0x2201             MOVS     R2,#+1
   \   000002DE   0x4B27             LDR.N    R3,??Command_analy_25+0x58  ;; 0x40590000
   \   000002E0   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000002E4   0xD80F             BHI.N    ??Command_analy_32
   \   000002E6   0x4A24             LDR.N    R2,??Command_analy_25+0x54
   \   000002E8   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000002EC   0x2201             MOVS     R2,#+1
   \   000002EE   0x4B25             LDR.N    R3,??Command_analy_25+0x60  ;; 0x40b38800
   \   000002F0   0x.... 0x....      BL       __aeabi_cdcmple
   \   000002F4   0xD207             BCS.N    ??Command_analy_32
    176                      base=(uint16)constant_angle;
   \   000002F6   0x4A20             LDR.N    R2,??Command_analy_25+0x54
   \   000002F8   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000002FC   0x.... 0x....      BL       __aeabi_d2iz
   \   00000300   0x491F             LDR.N    R1,??Command_analy_25+0x5C
   \   00000302   0x8008             STRH     R0,[R1, #+0]
   \   00000304   0xE00B             B.N      ??Command_analy_30
    177                    else if(constant_angle>5000)
   \                     ??Command_analy_32: (+1)
   \   00000306   0x4A1C             LDR.N    R2,??Command_analy_25+0x54
   \   00000308   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   0000030C   0x2201             MOVS     R2,#+1
   \   0000030E   0x4B1D             LDR.N    R3,??Command_analy_25+0x60  ;; 0x40b38800
   \   00000310   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000314   0xD803             BHI.N    ??Command_analy_30
    178                      base=5000;
   \   00000316   0xF241 0x3088      MOVW     R0,#+5000
   \   0000031A   0x4919             LDR.N    R1,??Command_analy_25+0x5C
   \   0000031C   0x8008             STRH     R0,[R1, #+0]
    179                  }
    180                  
    181          }
   \                     ??Command_analy_30: (+1)
   \   0000031E   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   \   00000322   0xBF00             Nop      
   \                     ??Command_analy_25:
   \   00000324   0x3FF00000         DC32     0x3ff00000
   \   00000328   0x40080000         DC32     0x40080000
   \   0000032C   0x40100000         DC32     0x40100000
   \   00000330   0x40140000         DC32     0x40140000
   \   00000334   0x40180000         DC32     0x40180000
   \   00000338   0x401C0000         DC32     0x401c0000
   \   0000033C   0x40200000         DC32     0x40200000
   \   00000340   0x40220000         DC32     0x40220000
   \   00000344   0x40470000         DC32     0x40470000
   \   00000348   0x........         DC32     run_constant_angle_nag
   \   0000034C   0x........         DC32     run_constant_angle_pos
   \   00000350   0x........         DC32     motor_run_nag
   \   00000354   0x........         DC32     motor_run_pos
   \   00000358   0x........         DC32     DM_start
   \   0000035C   0x........         DC32     test_start
   \   00000360   0x........         DC32     MachineReset
   \   00000364   0x........         DC32     motor_stop
   \   00000368   0x........         DC32     DelayTimeChange
   \   0000036C   0x........         DC32     g_nMotorPulseSigma
   \   00000370   0x40240000         DC32     0x40240000
   \   00000374   0x........         DC32     FTM_Count
   \   00000378   0x........         DC32     constant_angle
   \   0000037C   0x40590000         DC32     0x40590000
   \   00000380   0x........         DC32     base
   \   00000384   0x40B38800         DC32     0x40b38800

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   Command_analy
        32   -> __aeabi_cdcmpeq
        32   -> __aeabi_cdcmple
        32   -> __aeabi_cdrcmple
        32   -> __aeabi_d2iz
        32   -> __aeabi_dadd
        32   -> __aeabi_ddiv
        32   -> __aeabi_dmul
        32   -> __aeabi_i2d
        32   -> enable_irq


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     904  Command_analy
       1  DM_start
       2  DelayTime
       1  DelayTimeChange
       1  FrequenceFlag
       1  MachineReset
       8  constant_angle
       1  motor_run_nag
       1  motor_run_pos
       1  motor_stop
       1  run_constant_angle_nag
       1  run_constant_angle_pos
       1  test_start

 
  20 bytes in section .bss
 904 bytes in section .text
 
 904 bytes of CODE memory
  20 bytes of DATA memory

Errors: none
Warnings: none
